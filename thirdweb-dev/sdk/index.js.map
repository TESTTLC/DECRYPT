{"version":3,"sources":["../src/index.ts","../src/core/classes/contract-encoder.ts","../src/core/classes/contract-metadata.ts","../src/common/role.ts","../src/core/classes/contract-roles.ts","../src/common/error.ts","../src/schema/shared.ts","../src/common/utils.ts","../src/schema/contracts/common/index.ts","../src/schema/contracts/common/claim-conditions.ts","../src/constants/chains.ts","../src/constants/currency.ts","../src/schema/contracts/common/currency.ts","../src/schema/contracts/common/snapshots.ts","../src/schema/contracts/common/signature.ts","../src/schema/tokens/common/index.ts","../src/schema/tokens/common/properties.ts","../src/common/signature-minting.ts","../src/core/classes/contract-royalty.ts","../src/core/classes/contract-sales.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/LinkTokenInterface__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/VRFConsumerBase__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/AccessControlEnumerableUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/AccessControlUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IAccessControlEnumerableUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IAccessControlUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/GovernorCountingSimpleUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/GovernorSettingsUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/GovernorVotesQuorumFractionUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/GovernorVotesUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/GovernorUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IGovernorUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IVotesUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC2981Upgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/PausableUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC1155Upgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC1155BurnableUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC1155PausableUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC1155MetadataURIUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC1155ReceiverUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC1155Upgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC1155HolderUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC1155ReceiverUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC20Upgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC20PermitUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC20PermitUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC20BurnableUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC20PausableUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC20VotesUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC20MetadataUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC20Upgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC721Upgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC721EnumerableUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC721EnumerableUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC721MetadataUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC721ReceiverUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC721Upgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC721HolderUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC165Upgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC165Upgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/MulticallUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/AccessControl__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/AccessControlEnumerable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IAccessControl__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IAccessControlEnumerable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC2771Context__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/MinimalForwarder__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/Proxy__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC1155__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC20__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC721__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC165__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IERC165__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/Multicall__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/DropERC1155__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/DropERC20__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/DropERC721__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/Forwarder__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IDropERC1155__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IDropERC20__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IDropERC721__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IMultiwrap__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IPack__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IThirdwebContract__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IThirdwebOwnable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IThirdwebPlatformFee__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IThirdwebPrimarySale__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IThirdwebRoyalty__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ITWFee__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IWETH__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IMarketplace__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ITokenERC1155__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ITokenERC20__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ITokenERC721__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/CurrencyTransferLib__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/Marketplace__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/Mock__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/MockContract__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/Multiwrap__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC1155PresetUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/PaymentSplitterUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/ERC2771ContextUpgradeable__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/Pack__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/Split__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/TokenERC1155__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/TokenERC20__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/TokenERC721__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/TWFactory__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/IFeeTierPlacementExtension__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/TWFee__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/TWProxy__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/TWRegistry__factory.ts","../src/@custom-thirdweb-dev/contracts/typechain/factories/VoteERC20__factory.ts","../src/core/classes/drop-erc721-claim-conditions.ts","../src/common/currency.ts","../src/core/classes/contract-wrapper.ts","../src/core/classes/rpc-connection-handler.ts","../src/constants/addresses.ts","../src/schema/sdk-options.ts","../src/constants/events.ts","../src/common/forwarder.ts","../src/common/permit.ts","../src/common/sign.ts","../src/common/gas-price.ts","../src/constants/chainlink.ts","../src/constants/contract.ts","../src/constants/urls.ts","../src/common/snapshots.ts","../src/enums/marketplace/ListingType.ts","../src/enums/vote/ProposalState.ts","../src/enums/vote/Vote.ts","../src/enums/ClaimEligibility.ts","../src/common/claim-conditions.ts","../src/core/classes/drop-erc1155-claim-conditions.ts","../src/core/classes/drop-erc1155-history.ts","../src/core/classes/erc-20.ts","../src/schema/contracts/drop-erc721.ts","../src/schema/contracts/drop-erc1155.ts","../src/schema/contracts/marketplace.ts","../src/schema/contracts/packs.ts","../src/schema/contracts/splits.ts","../src/schema/contracts/token-erc20.ts","../src/schema/contracts/token-erc721.ts","../src/schema/contracts/token-erc1155.ts","../src/schema/contracts/vote.ts","../src/schema/tokens/edition.ts","../src/schema/tokens/token.ts","../src/core/classes/erc-20-history.ts","../src/core/classes/erc-721.ts","../src/types/QueryParams.ts","../src/common/nft.ts","../src/core/classes/erc-1155.ts","../src/types/packs.ts","../src/core/classes/erc-20-signature-minting.ts","../src/core/classes/erc-721-signature-minting.ts","../src/core/classes/erc-1155-signature-minting.ts","../src/core/classes/marketplace-direct.ts","../src/common/marketplace.ts","../src/core/classes/marketplace-auction.ts","../src/core/classes/registry.ts","../src/core/classes/factory.ts","../src/core/classes/contract-events.ts","../src/contracts/nft-collection.ts","../src/contracts/edition-drop.ts","../src/core/classes/gas-cost-estimator.ts","../src/core/classes/contract-interceptor.ts","../src/contracts/edition.ts","../src/contracts/token.ts","../src/contracts/vote.ts","../src/contracts/split.ts","../src/contracts/marketplace.ts","../src/contracts/pack.ts","../src/contracts/nft-drop.ts","../src/core/classes/delayed-reveal.ts","../src/contracts/maps.ts","../src/schema/contracts/custom.ts","../src/common/feature-detection.ts","../src/contracts/custom.ts","../src/core/classes/contract-deployer.ts","../src/core/sdk.ts","../src/core/helpers/storage.ts","../src/core/classes/ipfs-storage.ts"],"sourcesContent":["import \"cross-fetch/polyfill\";\n\n/**\n * The {@link https://thirdweb.com | thirdweb} typescript sdk.\n *\n * @remarks\n * Please keep in mind that the thirdweb typescript sdk and {@link https://thirdweb.com/dashboard | Admin Dashboard} are currently in Early Access.\n *\n * Should you find bugs or in the case you need help please reach out to us in {@link https://discord.gg/thirdweb | Discord}. (We also have 🍪 )\n *\n *\n * @example\n * To get you started here's how you would instantiate the SDK and fetch some NFTs\n *\n * 1. Install the sdk\n * ```shell\n * npm install @thirdweb-dev/sdk\n * ```\n *\n * 2. Get your NFT contract address from the {@link https://thirdweb.com/dashboard | Admin Dashboard}.\n *\n * 3. Write the tiniest amount of code!\n * ```typescript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(provider);\n * const contractAddress = \"0x...\"; // your contract address from step 2\n * const nftContract = sdk.getNFTCollection(contractAddress);\n *\n *  const nftListWithOwnerAddress = await nftContract.getAllWithOwner();\n *  console.log(nftListWithOwnerAddress);\n * ```\n * ```\n * Output\n * => [\n *       {\n *          owner: \"0x...\",\n *          metadata: {\n *            name: \"...\",\n *            description: \"...\",\n *            image: \"...\"\n *          },\n *       },\n *       {\n *          owner: \"0x...\",\n *          metadata: {\n *            name: \"...\",\n *            description: \"...\",\n *            image: \"...\"\n *          },\n *       },\n *       ...\n *    ]\n * ```\n *\n * @packageDocumentation\n */\nexport * from \"./core\";\nexport * from \"./core/classes\";\nexport * from \"./types\";\nexport * from \"./enums\";\nexport * from \"./common\";\nexport * from \"./constants\";\nexport * from \"./contracts\";\nexport type { ContractType, NetworkOrSignerOrProvider } from \"./core/types\";\nexport type {\n  NFTMetadataInput,\n  NFTMetadataOwner,\n  NFTMetadata,\n} from \"./schema/tokens/common\";\nexport * from \"./schema/tokens/edition\";\n\nexport type { Role } from \"./common/role\";\nexport * from \"./core/classes/ipfs-storage\";\nexport { CommonContractSchema } from \"./schema/contracts/common\";\nexport * from \"./schema/contracts/common/claim-conditions\";\nexport * from \"./schema/tokens/common/properties\";\nexport * from \"./constants/chains\";\nexport * from \"./schema/tokens/token\";\nexport * from \"./schema/tokens/edition\";\nexport * from \"./schema/contracts/common\";\nexport type { SDKOptions, SDKOptionsSchema } from \"./schema/sdk-options\";\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport { BaseContract } from \"ethers\";\nimport { Result } from \"@ethersproject/abi\";\n\n/**\n * Encodes and decodes Contract functions\n * @public\n */\nexport class ContractEncoder<TContract extends BaseContract> {\n  private contractWrapper;\n\n  constructor(contractWrapper: ContractWrapper<TContract>) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Encodes the given contract function with argument\n   * @returns the encoded data\n   */\n  public encode(\n    fn: keyof TContract[\"functions\"],\n    args: Parameters<TContract[\"functions\"][typeof fn]>,\n  ): string {\n    return this.contractWrapper.readContract.interface.encodeFunctionData(\n      fn as string,\n      args,\n    );\n  }\n\n  /**\n   * Decode encoded call data for a given function\n   * @param fn - the function to decode\n   * @param encodedArgs - the encoded arguments\n   */\n  public decode(fn: keyof TContract[\"functions\"], encodedArgs: string): Result {\n    return this.contractWrapper.readContract.interface.decodeFunctionData(\n      fn as string,\n      encodedArgs,\n    );\n  }\n}\n","import { IThirdwebContract } from \"../../@custom-thirdweb-dev/contracts\";\nimport { z } from \"zod\";\nimport { IStorage } from \"../interfaces/IStorage\";\nimport { TransactionResult } from \"../types\";\nimport { ContractWrapper } from \"./contract-wrapper\";\n\n/**\n * @internal\n */\nexport interface IGenericSchemaType {\n  deploy: z.AnyZodObject;\n  input: z.AnyZodObject;\n  output: z.AnyZodObject;\n}\n\n/**\n * Handles metadata for a Contract\n * @public\n */\nexport class ContractMetadata<\n  TContract extends IThirdwebContract,\n  TSchema extends IGenericSchemaType,\n> {\n  private contractWrapper;\n  private schema;\n  private storage;\n\n  constructor(\n    contractWrapper: ContractWrapper<TContract>,\n    schema: TSchema,\n    storage: IStorage,\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.schema = schema;\n    this.storage = storage;\n  }\n  /**\n   * @internal\n   */\n  public parseOutputMetadata(metadata: any): z.output<TSchema[\"output\"]> {\n    return this.schema.output.parse(metadata);\n  }\n\n  /**\n   * @internal\n   */\n  public parseInputMetadata(metadata: any): z.input<TSchema[\"input\"]> {\n    return this.schema.input.parse(metadata);\n  }\n  /**\n   *\n   * @returns the metadata of the given contract\n   */\n  public async get() {\n    const uri = await this.contractWrapper.readContract.contractURI();\n    const data = await this.storage.get(uri);\n    return this.parseOutputMetadata(data);\n  }\n  /**\n   *\n   * @param metadata - the metadata to set\n   * @returns\n   */\n  public async set(metadata: z.input<TSchema[\"input\"]>) {\n    const uri = await this._parseAndUploadMetadata(metadata);\n\n    const receipt = await this.contractWrapper.sendTransaction(\n      \"setContractURI\",\n      [uri],\n    );\n    return { receipt, data: this.get } as TransactionResult<\n      z.output<TSchema[\"output\"]>\n    >;\n  }\n\n  public async update(metadata: Partial<z.input<TSchema[\"input\"]>>) {\n    return await this.set({\n      ...(await this.get()),\n      ...metadata,\n    });\n  }\n\n  /**\n   *\n   * @internal\n   * @param metadata - the metadata to set\n   * @returns\n   */\n  public async _parseAndUploadMetadata(metadata: z.input<TSchema[\"input\"]>) {\n    const parsedMetadata = this.parseInputMetadata(metadata);\n    return this.storage.uploadMetadata(parsedMetadata);\n  }\n}\n","import { BytesLike, ethers } from \"ethers\";\n\n/**\n *\n * @internal\n */\nconst roleMap = {\n  admin: \"\",\n  transfer: \"TRANSFER_ROLE\",\n  minter: \"MINTER_ROLE\",\n  pauser: \"PAUSER_ROLE\",\n  editor: \"EDITOR_ROLE\",\n  lister: \"LISTER_ROLE\",\n  asset: \"ASSET_ROLE\",\n} as const;\n\n/**\n * @public\n */\nexport type Role = keyof typeof roleMap;\n\n/**\n * @public\n */\nexport const ALL_ROLES = Object.keys(roleMap) as Role[];\n\n/**\n * @internal\n */\nexport function getRoleHash(role: Role): BytesLike {\n  if (role === \"admin\") {\n    return ethers.utils.hexZeroPad([0], 32);\n  }\n  return ethers.utils.id(roleMap[role]);\n}\n","import { TransactionResult } from \"../types\";\nimport { getRoleHash, Role } from \"../../common/role\";\nimport { AccessControlEnumerable } from \"../../@custom-thirdweb-dev/contracts\";\nimport invariant from \"tiny-invariant\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { MissingRoleError } from \"../../common/error\";\n\n/**\n * Handles Contract roles and permissions\n * @public\n */\nexport class ContractRoles<\n  TContract extends AccessControlEnumerable,\n  TRole extends Role,\n> {\n  private contractWrapper;\n  private readonly roles;\n\n  constructor(\n    contractWrapper: ContractWrapper<TContract>,\n    roles: readonly TRole[],\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.roles = roles;\n  }\n\n  /** **************************\n   * READ FUNCTIONS\n   ****************************/\n\n  /**\n   * Call this to get get a list of addresses for all supported roles on the contract.\n   *\n   * @remarks See {@link ContractRoles.get} to get a list of addresses that are members of a specific role.\n   * @returns A record of {@link Role}s to lists of addresses that are members of the given role.\n   * @throws If the contract does not support roles this will throw an error.\n   *\n   * @public\n   */\n  public async getAll(): Promise<Record<TRole, string[]>> {\n    invariant(this.roles.length, \"this contract has no support for roles\");\n    const roles = {} as Record<TRole, string[]>;\n    for (const role of this.roles) {\n      roles[role] = await this.get(role);\n    }\n    return roles;\n  }\n\n  /**\n   * Call this to get a list of addresses that are members of a specific role.\n   *\n   * @remarks See {@link ContractRoles.getAll} to get get a list of addresses for all supported roles on the contract.\n   * @param role - The Role to to get a memberlist for.\n   * @returns The list of addresses that are members of the specific role.\n   * @throws If you are requestiong a role that does not exist on the contract this will throw an error.\n   *\n   * @example Say you want to get the list of addresses that are members of the minter role.\n   * ```javascript\n   * const minterAddresses: string[] = await contract.getRoleMemberList(\"minter\");\n   * ```\n   *\n   * @public\n   */\n  public async get(role: TRole): Promise<string[]> {\n    invariant(\n      this.roles.includes(role),\n      `this contract does not support the \"${role}\" role`,\n    );\n\n    const roleHash = getRoleHash(role);\n    const count = (\n      await this.contractWrapper.readContract.getRoleMemberCount(roleHash)\n    ).toNumber();\n    return await Promise.all(\n      Array.from(Array(count).keys()).map((i) =>\n        this.contractWrapper.readContract.getRoleMember(roleHash, i),\n      ),\n    );\n  }\n\n  /**\n   * Call this to OVERWRITE the list of addresses that are members of specific roles.\n   *\n   * Every role in the list will be overwritten with the new list of addresses provided with them.\n   * If you want to add or remove addresses for a single address use {@link ContractRoles.grant} and {@link ContractRoles.revoke} respectively instead.\n   * @param rolesWithAddresses - A record of {@link Role}s to lists of addresses that should be members of the given role.\n   * @throws If you are requestiong a role that does not exist on the contract this will throw an error.\n   * @example Say you want to overwrite the list of addresses that are members of the minter role.\n   * ```javascript\n   * const minterAddresses: string[] = await contract.getRoleMemberList(\"minter\");\n   * await contract.setAll({\n   *  minter: []\n   * });\n   * console.log(await contract.getRoleMemberList(\"minter\")); // No matter what members had the role before, the new list will be set to []\n   * ```\n   * @public\n   *\n   * */\n  public async setAll(rolesWithAddresses: {\n    [key in TRole]?: string[];\n  }): Promise<TransactionResult> {\n    const roles = Object.keys(rolesWithAddresses) as TRole[];\n    invariant(roles.length, \"you must provide at least one role to set\");\n    invariant(\n      roles.every((role) => this.roles.includes(role)),\n      \"this contract does not support the given role\",\n    );\n    const currentRoles = await this.getAll();\n    const encoded: string[] = [];\n    // add / remove admin role at the end so we don't revoke admin then grant\n    roles\n      .sort((role) => (role === \"admin\" ? 1 : -1))\n      .forEach(async (role) => {\n        const addresses: string[] = rolesWithAddresses[role] || [];\n        const currentAddresses = currentRoles[role] || [];\n        const toAdd = addresses.filter(\n          (address) => !currentAddresses.includes(address),\n        );\n        const toRemove = currentAddresses.filter(\n          (address) => !addresses.includes(address),\n        );\n        if (toAdd.length) {\n          toAdd.forEach((address) => {\n            encoded.push(\n              this.contractWrapper.readContract.interface.encodeFunctionData(\n                \"grantRole\",\n                [getRoleHash(role), address],\n              ),\n            );\n          });\n        }\n        if (toRemove.length) {\n          toRemove.forEach(async (address) => {\n            const revokeFunctionName = (await this.getRevokeRoleFunctionName(\n              address,\n            )) as any;\n            encoded.push(\n              this.contractWrapper.readContract.interface.encodeFunctionData(\n                revokeFunctionName,\n                [getRoleHash(role), address],\n              ),\n            );\n          });\n        }\n      });\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded),\n    };\n  }\n\n  /**\n   * Throws an error if an address is missing the roles specified.\n   *\n   * @param roles - The roles to check\n   * @param address - The address to check\n   *\n   * @internal\n   */\n  public async verify(roles: TRole[], address: string): Promise<void> {\n    await Promise.all(\n      roles.map(async (role) => {\n        const members = await this.get(role);\n        if (\n          !members.map((a) => a.toLowerCase()).includes(address.toLowerCase())\n        ) {\n          throw new MissingRoleError(address, role);\n        }\n      }),\n    );\n  }\n\n  /** **************************\n   * WRITE FUNCTIONS\n   ****************************/\n\n  /**\n   * Call this to grant a role to a specific address.\n   *\n   * @remarks\n   *\n   * Make sure you are sure you want to grant the role to the address.\n   *\n   * @param role - The {@link Role} to grant to the address\n   * @param address - The address to grant the role to\n   * @returns The transaction receipt\n   * @throws If you are trying to grant does not exist on the contract this will throw an error.\n   *\n   * @public\n   */\n  public async grant(role: TRole, address: string): Promise<TransactionResult> {\n    invariant(\n      this.roles.includes(role),\n      `this contract does not support the \"${role}\" role`,\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"grantRole\", [\n        getRoleHash(role),\n        address,\n      ]),\n    };\n  }\n\n  /**\n   * Call this to revoke a role from a specific address.\n   *\n   * @remarks\n   *\n   * -- Caution --\n   *\n   * This will let you remove yourself from the role, too.\n   * If you remove yourself from the admin role, you will no longer be able to administer the module.\n   * There is no way to recover from this.\n   *\n   * @param role - The {@link Role} to revoke\n   * @param address - The address to revoke the role from\n   * @returns The transaction receipt\n   * @throws If you are trying to revoke does not exist on the module this will throw an error.\n   *\n   * @public\n   */\n  public async revoke(\n    role: TRole,\n    address: string,\n  ): Promise<TransactionResult> {\n    invariant(\n      this.roles.includes(role),\n      `this contract does not support the \"${role}\" role`,\n    );\n    const revokeFunctionName = await this.getRevokeRoleFunctionName(address);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(revokeFunctionName, [\n        getRoleHash(role),\n        address,\n      ]),\n    };\n  }\n\n  /** **************************\n   * PRIVATE FUNCTIONS\n   ****************************/\n\n  private async getRevokeRoleFunctionName(address: string) {\n    const signerAddress = await this.contractWrapper.getSignerAddress();\n    if (signerAddress.toLowerCase() === address.toLowerCase()) {\n      return \"renounceRole\";\n    }\n    return \"revokeRole\";\n  }\n}\n","import { BigNumberish } from \"ethers\";\nimport { Network } from \"@ethersproject/providers\";\n\n/**\n * Error that may get thrown if IPFS returns nothing for a given uri.\n * @internal\n */\nexport class NotFoundError extends Error {\n  /** @internal */\n  constructor(identifier?: string) {\n    super(identifier ? `Object with id ${identifier} NOT FOUND` : \"NOT_FOUND\");\n  }\n}\n\n/**\n * Error that may get thrown if an invalid address was passed\n * @internal\n */\nexport class InvalidAddressError extends Error {\n  /** @internal */\n  constructor(address?: string) {\n    super(\n      address ? `'${address}' is an invalid address` : \"Invalid address passed\",\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport class MissingRoleError extends Error {\n  /** @internal */\n  /** @internal */\n  constructor(address: string, role: string) {\n    super(`MISSING ROLE: ${address} does not have the '${role}' role`);\n  }\n}\n\n/**\n * @internal\n */\nexport class AssetNotFoundError extends Error {\n  /** @internal */\n  /** @internal */\n  constructor(message = \"The asset you're trying to use could not be found.\") {\n    super(`message: ${message}`);\n  }\n}\n\n/**\n * @internal\n */\nexport class UploadError extends Error {\n  /** @internal */\n  constructor(message: string) {\n    super(`UPLOAD_FAILED: ${message}`);\n  }\n}\n\n/**\n * @internal\n */\nexport class FileNameMissingError extends Error {\n  /** @internal */\n  constructor() {\n    super(\"File name is required when object is not a `File` type object.\");\n  }\n}\n\n/**\n * @internal\n */\nexport class DuplicateFileNameError extends Error {\n  /** @internal */\n  constructor(fileName: string) {\n    super(\n      `DUPLICATE_FILE_NAME_ERROR: File name ${fileName} was passed for more than one file.`,\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport class NotEnoughTokensError extends Error {\n  /** @internal */\n  constructor(contractAddress: string, quantity: number, available: number) {\n    super(\n      `BALANCE ERROR: you do not have enough balance on contract ${contractAddress} to use ${quantity} tokens. You have ${available} tokens available.`,\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport class MissingOwnerRoleError extends Error {\n  /** @internal */\n  constructor() {\n    super(`LIST ERROR: you should be the owner of the token to list it.`);\n  }\n}\n\n/**\n * @internal\n */\nexport class QuantityAboveLimitError extends Error {\n  /** @internal */\n  constructor(quantity: string) {\n    super(`BUY ERROR: You cannot buy more than ${quantity} tokens`);\n  }\n}\n\n/**\n * Thrown when data fails to fetch from storage.\n * @internal\n */\nexport class FetchError extends Error {\n  public innerError?: Error;\n\n  /** @internal */\n  constructor(message: string, innerError?: Error) {\n    super(`FETCH_FAILED: ${message}`);\n    this.innerError = innerError;\n  }\n}\n\n/**\n * Thrown when attempting to create a snapshot with duplicate leafs\n * @internal\n */\nexport class DuplicateLeafsError extends Error {\n  constructor(message?: string) {\n    super(`DUPLICATE_LEAFS${message ? ` : ${message}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to update/cancel an auction that already started\n * @internal\n */\nexport class AuctionAlreadyStartedError extends Error {\n  constructor(id?: string) {\n    super(\n      `Auction already started with existing bid${id ? `, id: ${id}` : \"\"}`,\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport class FunctionDeprecatedError extends Error {\n  /** @internal */\n  constructor(message: string) {\n    super(`FUNCTION DEPRECATED. ${message ? `Use ${message} instead` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when trying to retrieve a listing from a marketplace that doesn't exist\n * @internal\n */\nexport class ListingNotFoundError extends Error {\n  constructor(marketplaceContractAddress: string, listingId?: string) {\n    super(\n      `Could not find listing.${\n        marketplaceContractAddress\n          ? ` marketplace address: ${marketplaceContractAddress}`\n          : \"\"\n      }${listingId ? ` listing id: ${listingId}` : \"\"}`,\n    );\n  }\n}\n\n/**\n * Thrown when trying to retrieve a listing of the wrong type\n * @internal\n */\nexport class WrongListingTypeError extends Error {\n  constructor(\n    marketplaceContractAddress: string,\n    listingId?: string,\n    actualType?: string,\n    expectedType?: string,\n  ) {\n    super(\n      `Incorrect listing type. Are you sure you're using the right method?.${\n        marketplaceContractAddress\n          ? ` marketplace address: ${marketplaceContractAddress}`\n          : \"\"\n      }${listingId ? ` listing id: ${listingId}` : \"\"}${\n        expectedType ? ` expected type: ${expectedType}` : \"\"\n      }${actualType ? ` actual type: ${actualType}` : \"\"}`,\n    );\n  }\n}\n\n/**\n * Thrown when attempting to transfer an asset that has restricted transferability\n * @internal\n */\nexport class RestrictedTransferError extends Error {\n  constructor(assetAddress?: string) {\n    super(\n      `Failed to transfer asset, transfer is restricted.${\n        assetAddress ? ` Address : ${assetAddress}` : \"\"\n      }`,\n    );\n  }\n}\n\n/**\n * Thrown when attempting to execute an admin-role function.\n * @internal\n */\nexport class AdminRoleMissingError extends Error {\n  constructor(\n    address?: string,\n    contractAddress?: string,\n    message = \"Failed to execute transaction\",\n  ) {\n    super(\n      `${message}, admin role is missing${\n        address ? ` on address: ${address}` : \"\"\n      }${contractAddress ? ` on contract: ${contractAddress}` : \"\"}`,\n    );\n  }\n}\n\n/**\n * Thrown when attempting to close an auction that has not ended\n * @internal\n */\nexport class AuctionHasNotEndedError extends Error {\n  constructor(id?: string, endTime?: BigNumberish) {\n    super(\n      `Auction has not ended yet${id ? `, id: ${id}` : \"\"}${\n        endTime ? `, end time: ${endTime.toString()}` : \"\"\n      }`,\n    );\n  }\n}\n\n/**\n * @public\n */\nexport class TransactionError extends Error {\n  public reason: string;\n  public from: string;\n  public to: string;\n  public data: string;\n  public chain: Network;\n  public rpcUrl: string;\n\n  constructor(\n    reason: string,\n    from: string,\n    to: string,\n    data: string,\n    network: Network,\n    rpcUrl: string,\n    raw: string,\n  ) {\n    let builtErrorMsg = \"Contract transaction failed\\n\\n\";\n    builtErrorMsg += `Message: ${reason}`;\n    builtErrorMsg += \"\\n\\n| Transaction info |\\n\";\n    builtErrorMsg += withSpaces(\"from\", from);\n    builtErrorMsg += withSpaces(\"to\", to);\n    builtErrorMsg += withSpaces(\"data\", data);\n    builtErrorMsg += withSpaces(\n      `chain`,\n      `${network.name} (${network.chainId})`,\n    );\n    try {\n      const url = new URL(rpcUrl);\n      builtErrorMsg += withSpaces(`RPC`, url.hostname);\n    } catch (e2) {\n      // ignore if can't parse URL\n    }\n    builtErrorMsg += \"\\n\\n\";\n    builtErrorMsg +=\n      \"Need help with this error? Join our community: https://discord.gg/thirdweb\";\n    builtErrorMsg += \"\\n\\n\\n\\n\";\n    builtErrorMsg += \"| Raw error |\";\n    builtErrorMsg += \"\\n\\n\";\n    builtErrorMsg += raw;\n    super(builtErrorMsg);\n    this.reason = reason;\n    this.from = from;\n    this.to = to;\n    this.data = data;\n    this.chain = network;\n    this.rpcUrl = rpcUrl;\n  }\n}\n\n/**\n * @internal\n * @param error\n * @param network\n * @param signerAddress\n * @param contractAddress\n */\nexport async function convertToTWError(\n  error: any,\n  network: Network,\n  signerAddress: string,\n  contractAddress: string,\n): Promise<TransactionError> {\n  let raw: string;\n  if (error.data) {\n    // metamask errors comes as objects, apply parsing on data object\n    // TODO test errors from other wallets\n    raw = JSON.stringify(error.data);\n  } else if (error instanceof Error) {\n    // regular ethers.js error\n    raw = error.message;\n  } else {\n    // not sure what this is, just throw it back\n    return error;\n  }\n  const reason = parseMessageParts(/.*?\"message[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  const data = parseMessageParts(/.*?\"data[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  const rpcUrl = parseMessageParts(/.*?\"url[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  let from = parseMessageParts(/.*?\"from[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  let to = parseMessageParts(/.*?\"to[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  if (to === \"\") {\n    // fallback to contractAddress\n    to = contractAddress;\n  }\n  if (from === \"\") {\n    // fallback to signerAddress\n    from = signerAddress;\n  }\n  return new TransactionError(reason, from, to, data, network, rpcUrl, raw);\n}\n\nfunction withSpaces(label: string, content: string) {\n  if (content === \"\") {\n    return content;\n  }\n  const spaces = Array(10 - label.length)\n    .fill(\" \")\n    .join(\"\");\n  return `\\n${label}:${spaces}${content}`;\n}\n\nfunction parseMessageParts(regex: RegExp, raw: string): string {\n  const msgMatches = raw.match(regex) || [];\n  let extracted = \"\";\n  if (msgMatches?.length > 0) {\n    extracted += msgMatches[1];\n  }\n  return extracted;\n}\n","import { BigNumber } from \"ethers\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { z } from \"zod\";\nimport { Json } from \"../core/types\";\nimport { isBrowser } from \"../common/utils\";\n\nif (!globalThis.File) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  globalThis.File = require(\"@web-std/file\").File;\n}\n\nexport const MAX_BPS = 10_000;\n\nconst fileOrBufferUnion = isBrowser()\n  ? ([z.instanceof(File), z.string()] as [\n      z.ZodType<InstanceType<typeof File>>,\n      z.ZodString,\n    ])\n  : ([z.instanceof(Buffer), z.string()] as [\n      z.ZodTypeAny, // @fixme, this is a hack to make browser happy for now\n      z.ZodString,\n    ]);\n\nexport const FileBufferOrStringSchema = z.union(fileOrBufferUnion);\nexport type FileBufferOrString = z.output<typeof FileBufferOrStringSchema>;\n\nexport const BytesLikeSchema = z.union([z.array(z.number()), z.string()]);\n\n// TODO z.instance(BigNumber) might not be compatible with the caller's version of ethers BigNumber\nexport const BigNumberSchema = z\n  .union([z.string(), z.number(), z.bigint(), z.instanceof(BigNumber)])\n  .transform((arg) => BigNumber.from(arg));\n\nexport const BigNumberishSchema = BigNumberSchema.transform((arg) =>\n  arg.toString(),\n);\n\nexport const BasisPointsSchema = z\n  .number()\n  .max(MAX_BPS, \"Cannot exeed 100%\")\n  .min(0, \"Cannot be below 0%\");\n\nexport const PercentSchema = z\n  .number()\n  .max(100, \"Cannot exeed 100%\")\n  .min(0, \"Cannot be below 0%\");\n\nexport const JsonLiteral = z.union([\n  z.string(),\n  z.number(),\n  z.boolean(),\n  z.null(),\n]);\n\nexport const JsonSchema: z.ZodSchema<Json> = z.lazy(() =>\n  z.union([JsonLiteral, z.array(JsonSchema), z.record(JsonSchema)]),\n);\nexport const JsonObjectSchema = z.record(JsonSchema);\nexport const HexColor = z.union([\n  z\n    .string()\n    .regex(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, \"Invalid hex color\")\n    .transform((val) => val.replace(\"#\", \"\")),\n  z.string().length(0),\n]);\n\nexport const AddressSchema = z.string().refine(\n  (arg) => isAddress(arg),\n  (out) => {\n    return {\n      message: `${out} is not a valid address`,\n    };\n  },\n);\n\nexport const PriceSchema = z\n  .union([\n    z.string().regex(/^([0-9]+\\.?[0-9]*|\\.[0-9]+)$/, \"Invalid price\"),\n    z.number().min(0, \"Price cannot be negative\"),\n  ])\n  .transform((arg) => (typeof arg === \"number\" ? arg.toString() : arg));\n\nexport const RawDateSchema = z.date().transform((i) => {\n  return BigNumber.from(Math.floor(i.getTime() / 1000));\n});\n\n/**\n * Default to now\n */\nexport const StartDateSchema = RawDateSchema.default(new Date());\n\n/**\n * Default to 10 years from now\n */\nexport const EndDateSchema = RawDateSchema.default(\n  new Date(Date.now() + 1000 * 60 * 60 * 24 * 365 * 10),\n);\n","/**\n * @internal\n */\nexport const isBrowser = () => typeof window !== \"undefined\";\n","import {\n  AddressSchema,\n  BasisPointsSchema,\n  FileBufferOrStringSchema,\n  JsonSchema,\n} from \"../../shared\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { z } from \"zod\";\n\n/**\n * @internal\n */\nexport const CommonContractSchema = z.object({\n  name: z.string(),\n  description: z.string().optional(),\n  image: FileBufferOrStringSchema.optional(),\n  external_link: z.string().url().optional(),\n});\n\n/**\n * @internal\n */\nexport const CommonContractOutputSchema = CommonContractSchema.extend({\n  image: z.string().optional(),\n}).catchall(z.lazy(() => JsonSchema));\n\n/**\n * @internal\n */\nexport const CommonRoyaltySchema = z.object({\n  /**\n   * The amount of royalty collected on all royalties represented as basis points.\n   * The default is 0 (no royalties).\n   *\n   * 1 basis point = 0.01%\n   *\n   * For example: if this value is 100, then the royalty is 1% of the total sales.\n   *\n   *  @internalremarks used by OpenSea \"seller_fee_basis_points\"\n   */\n  seller_fee_basis_points: BasisPointsSchema.default(0),\n\n  /**\n   * The address of the royalty recipient. All royalties will be sent\n   * to this address.\n   * @internalremarks used by OpenSea \"fee_recipient\"\n   */\n  fee_recipient: AddressSchema.default(AddressZero),\n});\n\n/**\n * @internal\n */\nexport const CommonPrimarySaleSchema = z.object({\n  /**\n   * primary sale recipient address\n   */\n  primary_sale_recipient: AddressSchema,\n});\n\n/**\n * @internal\n */\nexport const CommonPlatformFeeSchema = z.object({\n  /**\n   * platform fee basis points\n   */\n  platform_fee_basis_points: BasisPointsSchema.default(0),\n  /**\n   * platform fee recipient address\n   */\n  platform_fee_recipient: AddressSchema.default(AddressZero),\n});\n\n/**\n * @internal\n */\nexport const CommonTrustedForwarderSchema = z.object({\n  trusted_forwarders: z.array(AddressSchema).default([]),\n});\n\n/**\n * @internal\n */\nexport const CommonSymbolSchema = z.object({\n  symbol: z.string().optional().default(\"\"),\n});\n\nexport * from \"./claim-conditions\";\nexport * from \"./currency\";\nexport * from \"./signature\";\nexport * from \"./snapshots\";\n","import { z } from \"zod\";\nimport { BigNumber, ethers } from \"ethers\";\nimport {\n  BigNumberishSchema,\n  BigNumberSchema,\n  BytesLikeSchema,\n  PriceSchema,\n  StartDateSchema,\n} from \"../../shared\";\nimport { hexZeroPad } from \"ethers/lib/utils\";\nimport { NATIVE_TOKEN_ADDRESS } from \"../../../constants/currency\";\nimport { CurrencyValueSchema } from \"./currency\";\nimport { SnapshotInputSchema } from \"./snapshots\";\n\n/**\n * @internal\n */\nexport const ClaimConditionInputSchema = z.object({\n  startTime: StartDateSchema,\n  currencyAddress: z.string().default(NATIVE_TOKEN_ADDRESS),\n  price: PriceSchema.default(0),\n  maxQuantity: BigNumberishSchema.default(ethers.constants.MaxUint256),\n  quantityLimitPerTransaction: BigNumberishSchema.default(\n    ethers.constants.MaxUint256,\n  ),\n  waitInSeconds: BigNumberishSchema.default(0),\n  merkleRootHash: BytesLikeSchema.default(hexZeroPad([0], 32)),\n  snapshot: z.optional(SnapshotInputSchema),\n});\n\n/**\n * @internal\n */\nexport const ClaimConditionInputArray = z.array(ClaimConditionInputSchema);\n\n/**\n * @internal\n */\nexport const PartialClaimConditionInputSchema =\n  ClaimConditionInputSchema.partial();\n\n/**\n * @internal\n */\nexport const ClaimConditionOutputSchema = ClaimConditionInputSchema.extend({\n  availableSupply: z.string().default(\"\"),\n  currencyMetadata: CurrencyValueSchema.default({\n    value: BigNumber.from(\"0\"),\n    displayValue: \"0\",\n    symbol: \"\",\n    decimals: 18,\n    name: \"\",\n  }),\n  price: BigNumberSchema,\n  maxQuantity: BigNumberSchema,\n  quantityLimitPerTransaction: BigNumberSchema,\n  waitInSeconds: BigNumberSchema,\n  startTime: BigNumberSchema.transform((n) => new Date(n.toNumber() * 1000)),\n});\n","/**\n * @public\n */\nexport enum ChainId {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Kovan = 42,\n  BSC = 56,\n  xDai = 100,\n  Polygon = 137,\n  Moonriver = 1285,\n  TLChain = 5177,\n  Mumbai = 80001,\n  Harmony = 1666600000,\n  Localhost = 1337,\n  Hardhat = 31337,\n  Fantom = 250,\n  FantomTestnet = 4002,\n  Avalanche = 43114,\n  AvalancheFujiTestnet = 43113,\n}\n\n/**\n * @public\n */\nexport type SUPPORTED_CHAIN_ID =\n  | ChainId.TLChain\n  | ChainId.Mainnet\n  | ChainId.Rinkeby\n  | ChainId.Goerli\n  | ChainId.Mumbai\n  | ChainId.Polygon\n  | ChainId.Fantom\n  | ChainId.FantomTestnet\n  | ChainId.Avalanche\n  | ChainId.AvalancheFujiTestnet;\n\n/**\n * @public\n */\nexport const SUPPORTED_CHAIN_IDS: SUPPORTED_CHAIN_ID[] = [\n  ChainId.TLChain,\n  ChainId.Mainnet,\n  ChainId.Rinkeby,\n  ChainId.Goerli,\n  ChainId.Polygon,\n  ChainId.Mumbai,\n  ChainId.Fantom,\n  ChainId.FantomTestnet,\n  ChainId.Avalanche,\n  ChainId.AvalancheFujiTestnet,\n];\n","import { ChainId, SUPPORTED_CHAIN_ID } from \"./chains\";\nimport { NativeToken } from \"../types/currency\";\n\n/**\n * @public\n */\nexport const NATIVE_TOKEN_ADDRESS =\n  \"0x5491952C8C5f2C2Ce5025847E1b0Df6eefc726f6\";\n\n/**\n * @public\n */\nexport const NATIVE_TOKENS: Record<\n  SUPPORTED_CHAIN_ID | ChainId.Hardhat,\n  NativeToken\n> = {\n  [ChainId.TLChain]: {\n    name: \"TLChain\",\n    symbol: \"TLC\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xE333A9333A302ed898caF8b7920Eb0cE5a26bba8\",\n      name: \"TLLP Wrapped\",\n      symbol: \"TLLP\",\n    },\n  },\n  [ChainId.Mainnet]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\",\n    },\n  },\n  [ChainId.Rinkeby]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xc778417E063141139Fce010982780140Aa0cD5Ab\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\",\n    },\n  },\n  [ChainId.Goerli]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x0bb7509324ce409f7bbc4b701f932eaca9736ab7\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\",\n    },\n  },\n  [ChainId.Polygon]: {\n    name: \"Matic\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n      name: \"Wrapped Matic\",\n      symbol: \"WMATIC\",\n    },\n  },\n  [ChainId.Mumbai]: {\n    name: \"Matic\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889\",\n      name: \"Wrapped Matic\",\n      symbol: \"WMATIC\",\n    },\n  },\n  [ChainId.Avalanche]: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\",\n      name: \"Wrapped AVAX\",\n      symbol: \"WAVAX\",\n    },\n  },\n  [ChainId.AvalancheFujiTestnet]: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xd00ae08403B9bbb9124bB305C09058E32C39A48c\",\n      name: \"Wrapped AVAX\",\n      symbol: \"WAVAX\",\n    },\n  },\n  [ChainId.Fantom]: {\n    name: \"Fantom\",\n    symbol: \"FTM\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\",\n      name: \"Wrapped Fantom\",\n      symbol: \"WFTM\",\n    },\n  },\n  [ChainId.FantomTestnet]: {\n    name: \"Fantom\",\n    symbol: \"FTM\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xf1277d1Ed8AD466beddF92ef448A132661956621\",\n      name: \"Wrapped Fantom\",\n      symbol: \"WFTM\",\n    },\n  },\n  [ChainId.Hardhat]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\",\n    },\n  },\n};\n\n/**\n * Returns the native token for a given chain\n * @param chainId - the chain id\n * @public\n */\nexport function getNativeTokenByChainId(chainId: ChainId): NativeToken {\n  return NATIVE_TOKENS[chainId as SUPPORTED_CHAIN_ID];\n}\n","import { z } from \"zod\";\nimport { BigNumberSchema } from \"../../shared\";\n\n/**\n * @internal\n */\nexport const CurrencySchema = z.object({\n  name: z.string(),\n  symbol: z.string(),\n  decimals: z.number(),\n});\n\n/**\n * @internal\n */\nexport const CurrencyValueSchema = CurrencySchema.extend({\n  value: BigNumberSchema,\n  displayValue: z.string(),\n});\n","import { z } from \"zod\";\n\n/**\n * @internal\n */\nexport const MerkleSchema = z.object({\n  merkle: z.record(z.string()).default({}),\n});\n\n/**\n * @internal\n */\nexport const SnapshotAddress = z.object({\n  address: z.string(),\n  maxClaimable: z.number().default(0),\n});\n\n/**\n * @internal\n */\nexport const SnapshotInputSchema = z.union([\n  z.array(z.string()).transform((strings) =>\n    strings.map((address) =>\n      SnapshotAddress.parse({\n        address,\n      }),\n    ),\n  ),\n  z.array(SnapshotAddress),\n]);\n\n/**\n * @internal\n */\nexport const SnapshotSchema = z.object({\n  /**\n   * The merkle root\n   */\n  merkleRoot: z.string(),\n  claims: z.array(\n    SnapshotAddress.extend({\n      proof: z.array(z.string()),\n    }),\n  ),\n});\n\n/**\n * @internal\n */\nexport const SnapshotInfoSchema = z.object({\n  merkleRoot: z.string(),\n  snapshotUri: z.string(),\n  snapshot: SnapshotSchema,\n});\n","import {\n  BasisPointsSchema,\n  BigNumberishSchema,\n  BigNumberSchema,\n  EndDateSchema,\n  PriceSchema,\n  StartDateSchema,\n} from \"../../shared\";\nimport { z } from \"zod\";\nimport { NFTInputOrUriSchema } from \"../../tokens/common\";\nimport { NATIVE_TOKEN_ADDRESS } from \"../../../constants/currency\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { ethers } from \"ethers\";\nimport { resolveOrGenerateId } from \"../../../common/signature-minting\";\n\n/**\n * @internal\n */\nexport const BaseSignaturePayloadInput = z.object({\n  to: z.string().default(AddressZero),\n  price: PriceSchema.default(0),\n  currencyAddress: z.string().default(NATIVE_TOKEN_ADDRESS),\n  mintStartTime: StartDateSchema,\n  mintEndTime: EndDateSchema,\n  uid: z\n    .string()\n    .optional()\n    .transform((arg) => resolveOrGenerateId(arg)),\n  primarySaleRecipient: z.string().default(AddressZero),\n});\n\n/**\n * @internal\n */\nexport const Signature20PayloadInput = BaseSignaturePayloadInput.extend({\n  quantity: PriceSchema,\n});\n\n/**\n * @internal\n */\nexport const Signature20PayloadOutput = Signature20PayloadInput.extend({\n  mintStartTime: BigNumberSchema,\n  mintEndTime: BigNumberSchema,\n});\n\n/**\n * @internal\n */\nexport const Signature721PayloadInput = BaseSignaturePayloadInput.extend({\n  metadata: NFTInputOrUriSchema,\n  royaltyRecipient: z.string().default(AddressZero),\n  royaltyBps: BasisPointsSchema.default(0),\n});\n\n/**\n * @internal\n */\nexport const Signature721PayloadOutput = Signature721PayloadInput.extend({\n  uri: z.string(),\n  royaltyBps: BigNumberSchema,\n  mintStartTime: BigNumberSchema,\n  mintEndTime: BigNumberSchema,\n});\n\n/**\n * @internal\n */\nexport const Signature1155PayloadInput = Signature721PayloadInput.extend({\n  tokenId: BigNumberishSchema.default(ethers.constants.MaxUint256),\n  quantity: BigNumberishSchema,\n});\n\n/**\n * @internal\n */\nexport const Signature1155PayloadOutput = Signature721PayloadOutput.extend({\n  tokenId: BigNumberSchema,\n  quantity: BigNumberSchema,\n});\n\n/**\n * @public\n */\nexport type FilledSignaturePayload20 = z.output<typeof Signature20PayloadInput>;\n/**\n * @public\n */\nexport type PayloadWithUri20 = z.output<typeof Signature20PayloadOutput>;\n/**\n * @public\n */\nexport type PayloadToSign20 = z.input<typeof Signature20PayloadInput>;\n/**\n * @public\n */\nexport type SignedPayload20 = {\n  payload: PayloadWithUri20;\n  signature: string;\n};\n\n/**\n * @public\n */\nexport type FilledSignaturePayload721 = z.output<\n  typeof Signature721PayloadInput\n>;\n/**\n * @public\n */\nexport type PayloadWithUri721 = z.output<typeof Signature721PayloadOutput>;\n/**\n * @public\n */\nexport type PayloadToSign721 = z.input<typeof Signature721PayloadInput>;\n/**\n * @public\n */\nexport type SignedPayload721 = {\n  payload: PayloadWithUri721;\n  signature: string;\n};\n\n/**\n * @public\n */\nexport type FilledSignaturePayload1155 = z.output<\n  typeof Signature1155PayloadInput\n>;\n/**\n * @public\n */\nexport type PayloadWithUri1155 = z.output<typeof Signature1155PayloadOutput>;\n/**\n * @public\n */\nexport type PayloadToSign1155 = z.input<typeof Signature1155PayloadInput>;\n/**\n * @public\n */\nexport type SignedPayload1155 = {\n  payload: PayloadWithUri1155;\n  signature: string;\n};\n\nexport const MintRequest20 = [\n  { name: \"to\", type: \"address\" },\n  { name: \"primarySaleRecipient\", type: \"address\" },\n  { name: \"quantity\", type: \"uint256\" },\n  { name: \"price\", type: \"uint256\" },\n  { name: \"currency\", type: \"address\" },\n  { name: \"validityStartTimestamp\", type: \"uint128\" },\n  { name: \"validityEndTimestamp\", type: \"uint128\" },\n  { name: \"uid\", type: \"bytes32\" },\n];\n\nexport const MintRequest721 = [\n  { name: \"to\", type: \"address\" },\n  { name: \"royaltyRecipient\", type: \"address\" },\n  { name: \"royaltyBps\", type: \"uint256\" },\n  { name: \"primarySaleRecipient\", type: \"address\" },\n  { name: \"uri\", type: \"string\" },\n  { name: \"price\", type: \"uint256\" },\n  { name: \"currency\", type: \"address\" },\n  { name: \"validityStartTimestamp\", type: \"uint128\" },\n  { name: \"validityEndTimestamp\", type: \"uint128\" },\n  { name: \"uid\", type: \"bytes32\" },\n];\n\nexport const MintRequest1155 = [\n  { name: \"to\", type: \"address\" },\n  { name: \"royaltyRecipient\", type: \"address\" },\n  { name: \"royaltyBps\", type: \"uint256\" },\n  { name: \"primarySaleRecipient\", type: \"address\" },\n  { name: \"tokenId\", type: \"uint256\" },\n  { name: \"uri\", type: \"string\" },\n  { name: \"quantity\", type: \"uint256\" },\n  { name: \"pricePerToken\", type: \"uint256\" },\n  { name: \"currency\", type: \"address\" },\n  { name: \"validityStartTimestamp\", type: \"uint128\" },\n  { name: \"validityEndTimestamp\", type: \"uint128\" },\n  { name: \"uid\", type: \"bytes32\" },\n];\n","import { z } from \"zod\";\nimport {\n  BigNumberSchema,\n  FileBufferOrStringSchema,\n  HexColor,\n  JsonSchema,\n} from \"../../shared\";\nimport {\n  OptionalPropertiesInput,\n  OptionalPropertiesOutput,\n} from \"./properties\";\n\n/**\n * @internal\n */\nexport const CommonTokenInput = z\n  .object({\n    name: z.string().nonempty({ message: \"A name is required.\" }),\n    description: z.string().optional(),\n    image: FileBufferOrStringSchema.optional(),\n    external_url: FileBufferOrStringSchema.optional(),\n  })\n  .catchall(z.lazy(() => JsonSchema));\n\n/**\n * @internal\n */\nexport const CommonTokenOutput = CommonTokenInput.extend({\n  id: BigNumberSchema,\n  uri: z.string(),\n  image: z.string().optional(),\n  external_url: z.string().optional(),\n});\n\n/**\n * @internal\n */\nexport const CommonNFTInput = CommonTokenInput.extend({\n  animation_url: FileBufferOrStringSchema.optional(),\n  background_color: HexColor.optional(),\n  properties: OptionalPropertiesInput,\n});\n\n/**\n * @internal\n */\nexport const NFTInputOrUriSchema = z.union([CommonNFTInput, z.string()]);\n\n/**\n * @internal\n */\nexport const CommonNFTOutput = CommonTokenOutput.extend({\n  animation_url: z.string().optional(),\n  properties: OptionalPropertiesOutput,\n});\n\n/**\n * @public\n */\nexport type NFTMetadataInput = z.input<typeof CommonNFTInput>;\n/**\n * @public\n */\nexport type NFTMetadataOrUri = z.input<typeof NFTInputOrUriSchema>;\n/**\n * @public\n */\nexport type NFTMetadata = z.output<typeof CommonNFTOutput>;\n/**\n * @public\n */\nexport type NFTMetadataOwner = { metadata: NFTMetadata; owner: string };\n","import { z } from \"zod\";\nimport {\n  FileBufferOrStringSchema,\n  JsonObjectSchema,\n  JsonSchema,\n} from \"../../shared\";\n\nconst ValidPropertyValue = JsonSchema.or(FileBufferOrStringSchema);\nconst _optionalProperties = z\n  .union([\n    z\n      .array(\n        z.object({\n          key: z.string(),\n          value: ValidPropertyValue,\n        }),\n      )\n\n      .superRefine((val, ctx) => {\n        if (!val) {\n          return;\n        }\n        const keyCount: Record<string, number> = {};\n\n        val.forEach(({ key }, idx) => {\n          if (!keyCount[key]) {\n            keyCount[key] = 0;\n          }\n\n          keyCount[key]++;\n          if (keyCount[key] > 1) {\n            ctx.addIssue({\n              code: z.ZodIssueCode.custom,\n              message: `Duplicate key: ${key}`,\n              path: [idx, \"key\"],\n            });\n          }\n        });\n      }),\n    z.record(ValidPropertyValue),\n  ])\n  .optional();\n\n/**\n * @internal\n */\nexport const OptionalPropertiesInput = z\n  .preprocess((val) => {\n    const knownVal = val as z.input<typeof _optionalProperties>;\n\n    if (Array.isArray(knownVal)) {\n      return knownVal.filter((v) => v.value);\n    }\n    return knownVal;\n  }, _optionalProperties)\n  .transform((properties) => {\n    if (Array.isArray(properties)) {\n      return properties.reduce(\n        (acc, prop) => ({ ...acc, ...{ [prop.key]: prop.value } }),\n        {} as Record<string, z.input<typeof ValidPropertyValue>>,\n      );\n    }\n    return properties;\n  });\n\n/**\n * @internal\n */\nexport const OptionalPropertiesOutput = JsonObjectSchema.optional();\n","import { v4 as uuidv4 } from \"uuid\";\nimport { hexlify, toUtf8Bytes } from \"ethers/lib/utils\";\n\nexport function resolveOrGenerateId(requestUId: string | undefined): string {\n  if (requestUId === undefined) {\n    const buffer = Buffer.alloc(16);\n    uuidv4({}, buffer);\n    return hexlify(toUtf8Bytes(buffer.toString(\"hex\")));\n  } else {\n    return hexlify(requestUId as string);\n  }\n}\n","import {\n  IThirdwebContract,\n  IThirdwebRoyalty,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { CommonRoyaltySchema } from \"../../schema/contracts/common\";\nimport { ContractMetadata, IGenericSchemaType } from \"./contract-metadata\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { z } from \"zod\";\nimport { TransactionResult } from \"../types\";\nimport { BigNumberish } from \"ethers\";\n\n/**\n * Handles Contract royalties\n * @public\n */\nexport class ContractRoyalty<\n  TContract extends IThirdwebRoyalty & IThirdwebContract,\n  TSchema extends IGenericSchemaType,\n> {\n  private contractWrapper;\n  private metadata;\n\n  constructor(\n    contractWrapper: ContractWrapper<TContract>,\n    metadata: ContractMetadata<TContract, TSchema>,\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.metadata = metadata;\n  }\n\n  /**\n   * Gets the royalty recipient and BPS (basis points) of the contract\n   * @returns - The royalty recipient and BPS\n   */\n  public async getDefaultRoyaltyInfo() {\n    const [royaltyRecipient, royaltyBps] =\n      await this.contractWrapper.readContract.getDefaultRoyaltyInfo();\n    // parse it on the way out to make sure we default things if they are not set\n    return CommonRoyaltySchema.parse({\n      fee_recipient: royaltyRecipient,\n      seller_fee_basis_points: royaltyBps,\n    });\n  }\n\n  /**\n   * Gets the royalty recipient and BPS (basis points) of a particular token\n   * @returns - The royalty recipient and BPS\n   */\n  public async getTokenRoyaltyInfo(tokenId: BigNumberish) {\n    const [royaltyRecipient, royaltyBps] =\n      await this.contractWrapper.readContract.getRoyaltyInfoForToken(tokenId);\n    return CommonRoyaltySchema.parse({\n      fee_recipient: royaltyRecipient,\n      seller_fee_basis_points: royaltyBps,\n    });\n  }\n\n  /**\n   * Set the royalty recipient and fee for a contract\n   * @param royaltyData - the royalty recipient and fee\n   */\n  public async setDefaultRoyaltyInfo(\n    royaltyData: z.input<typeof CommonRoyaltySchema>,\n  ): Promise<TransactionResult<z.output<typeof CommonRoyaltySchema>>> {\n    // read the metadata from the contract\n    const oldMetadata = await this.metadata.get();\n\n    // update the metadata with the new royalty data\n    // if one of the keys is \"undefined\" it will be ignored (which is the desired behavior)\n    const mergedMetadata = this.metadata.parseInputMetadata({\n      ...oldMetadata,\n      ...royaltyData,\n    });\n\n    // why not use this.metadata.set()? - because that would end up sending it's own separate transaction to `setContractURI`\n    // but we want to send both the `setRoyaltyInfo` and `setContractURI` in one transaction!\n    const contractURI = await this.metadata._parseAndUploadMetadata(\n      mergedMetadata,\n    );\n\n    // encode both the functions we want to send\n    const encoded = [\n      this.contractWrapper.readContract.interface.encodeFunctionData(\n        \"setDefaultRoyaltyInfo\",\n        [mergedMetadata.fee_recipient, mergedMetadata.seller_fee_basis_points],\n      ),\n      this.contractWrapper.readContract.interface.encodeFunctionData(\n        \"setContractURI\",\n        [contractURI],\n      ),\n    ];\n\n    // actually send the transaction and return the receipt + a way to get the new royalty info\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded),\n      data: () => this.getDefaultRoyaltyInfo(),\n    };\n  }\n\n  /**\n   * Set the royalty recipient and fee for a particular token\n   * @param tokenId - the token id\n   * @param royaltyData - the royalty recipient and fee\n   */\n  public async setTokenRoyaltyInfo(\n    tokenId: BigNumberish,\n    royaltyData: z.input<typeof CommonRoyaltySchema>,\n  ) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"setRoyaltyInfoForToken\",\n        [\n          tokenId,\n          royaltyData.fee_recipient,\n          royaltyData.seller_fee_basis_points,\n        ],\n      ),\n      data: () => this.getDefaultRoyaltyInfo(),\n    };\n  }\n}\n","import { IThirdwebPrimarySale } from \"../../@custom-thirdweb-dev/contracts\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { TransactionResult } from \"../types\";\n\n/**\n * Handles primary sales recipients for a Contract\n * @public\n */\nexport class ContractPrimarySale<TContract extends IThirdwebPrimarySale> {\n  private contractWrapper;\n\n  constructor(contractWrapper: ContractWrapper<TContract>) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Get the primary sale recipient.\n   * @returns the wallet address.\n   */\n  public async getRecipient(): Promise<string> {\n    return await this.contractWrapper.readContract.primarySaleRecipient();\n  }\n\n  /**\n   * Set the primary sale recipient\n   * @param recipient - the wallet address\n   */\n  public async setRecipient(recipient: string): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"setPrimarySaleRecipient\",\n        [recipient],\n      ),\n    };\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  LinkTokenInterface,\n  LinkTokenInterfaceInterface,\n} from \"../LinkTokenInterface\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"remaining\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"decimalPlaces\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseApproval\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseApproval\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"tokenName\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"tokenSymbol\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"totalTokensIssued\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"transferAndCall\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class LinkTokenInterface__factory {\n  static readonly abi = _abi;\n  static createInterface(): LinkTokenInterfaceInterface {\n    return new utils.Interface(_abi) as LinkTokenInterfaceInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LinkTokenInterface {\n    return new Contract(address, _abi, signerOrProvider) as LinkTokenInterface;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  VRFConsumerBase,\n  VRFConsumerBaseInterface,\n} from \"../VRFConsumerBase\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"requestId\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"randomness\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"rawFulfillRandomness\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class VRFConsumerBase__factory {\n  static readonly abi = _abi;\n  static createInterface(): VRFConsumerBaseInterface {\n    return new utils.Interface(_abi) as VRFConsumerBaseInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): VRFConsumerBase {\n    return new Contract(address, _abi, signerOrProvider) as VRFConsumerBase;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  AccessControlEnumerableUpgradeable,\n  AccessControlEnumerableUpgradeableInterface,\n} from \"../AccessControlEnumerableUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class AccessControlEnumerableUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): AccessControlEnumerableUpgradeableInterface {\n    return new utils.Interface(\n      _abi\n    ) as AccessControlEnumerableUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): AccessControlEnumerableUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as AccessControlEnumerableUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  AccessControlUpgradeable,\n  AccessControlUpgradeableInterface,\n} from \"../AccessControlUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class AccessControlUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): AccessControlUpgradeableInterface {\n    return new utils.Interface(_abi) as AccessControlUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): AccessControlUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as AccessControlUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IAccessControlEnumerableUpgradeable,\n  IAccessControlEnumerableUpgradeableInterface,\n} from \"../IAccessControlEnumerableUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IAccessControlEnumerableUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IAccessControlEnumerableUpgradeableInterface {\n    return new utils.Interface(\n      _abi\n    ) as IAccessControlEnumerableUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IAccessControlEnumerableUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IAccessControlEnumerableUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IAccessControlUpgradeable,\n  IAccessControlUpgradeableInterface,\n} from \"../IAccessControlUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IAccessControlUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IAccessControlUpgradeableInterface {\n    return new utils.Interface(_abi) as IAccessControlUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IAccessControlUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IAccessControlUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  GovernorCountingSimpleUpgradeable,\n  GovernorCountingSimpleUpgradeableInterface,\n} from \"../GovernorCountingSimpleUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"proposer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"VoteCast\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BALLOT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"COUNTING_MODE\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"castVote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"castVoteBySig\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"castVoteWithReason\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"hashProposal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalDeadline\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalSnapshot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"proposalThreshold\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"againstVotes\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"forVotes\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"abstainVotes\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"propose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quorum\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"target\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"relay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"state\",\n    outputs: [\n      {\n        internalType: \"enum IGovernorUpgradeable.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingPeriod\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nexport class GovernorCountingSimpleUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): GovernorCountingSimpleUpgradeableInterface {\n    return new utils.Interface(\n      _abi\n    ) as GovernorCountingSimpleUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): GovernorCountingSimpleUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as GovernorCountingSimpleUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  GovernorSettingsUpgradeable,\n  GovernorSettingsUpgradeableInterface,\n} from \"../GovernorSettingsUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"proposer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"oldProposalThreshold\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newProposalThreshold\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalThresholdSet\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"VoteCast\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"oldVotingDelay\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newVotingDelay\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"VotingDelaySet\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"oldVotingPeriod\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newVotingPeriod\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"VotingPeriodSet\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BALLOT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"COUNTING_MODE\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"castVote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"castVoteBySig\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"castVoteWithReason\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"hashProposal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalDeadline\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalSnapshot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"proposalThreshold\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"propose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quorum\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"target\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"relay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newProposalThreshold\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setProposalThreshold\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newVotingDelay\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setVotingDelay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newVotingPeriod\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setVotingPeriod\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"state\",\n    outputs: [\n      {\n        internalType: \"enum IGovernorUpgradeable.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingPeriod\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nexport class GovernorSettingsUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): GovernorSettingsUpgradeableInterface {\n    return new utils.Interface(_abi) as GovernorSettingsUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): GovernorSettingsUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as GovernorSettingsUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  GovernorVotesQuorumFractionUpgradeable,\n  GovernorVotesQuorumFractionUpgradeableInterface,\n} from \"../GovernorVotesQuorumFractionUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"proposer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"oldQuorumNumerator\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newQuorumNumerator\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"QuorumNumeratorUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"VoteCast\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BALLOT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"COUNTING_MODE\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"castVote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"castVoteBySig\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"castVoteWithReason\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"hashProposal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalDeadline\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalSnapshot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"proposalThreshold\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"propose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quorum\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"quorumDenominator\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"quorumNumerator\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"target\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"relay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"state\",\n    outputs: [\n      {\n        internalType: \"enum IGovernorUpgradeable.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token\",\n    outputs: [\n      {\n        internalType: \"contract IVotesUpgradeable\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newQuorumNumerator\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"updateQuorumNumerator\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingPeriod\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nexport class GovernorVotesQuorumFractionUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): GovernorVotesQuorumFractionUpgradeableInterface {\n    return new utils.Interface(\n      _abi\n    ) as GovernorVotesQuorumFractionUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): GovernorVotesQuorumFractionUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as GovernorVotesQuorumFractionUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  GovernorVotesUpgradeable,\n  GovernorVotesUpgradeableInterface,\n} from \"../GovernorVotesUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"proposer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"VoteCast\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BALLOT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"COUNTING_MODE\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"castVote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"castVoteBySig\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"castVoteWithReason\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"hashProposal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalDeadline\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalSnapshot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"proposalThreshold\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"propose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quorum\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"target\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"relay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"state\",\n    outputs: [\n      {\n        internalType: \"enum IGovernorUpgradeable.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token\",\n    outputs: [\n      {\n        internalType: \"contract IVotesUpgradeable\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingPeriod\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nexport class GovernorVotesUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): GovernorVotesUpgradeableInterface {\n    return new utils.Interface(_abi) as GovernorVotesUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): GovernorVotesUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as GovernorVotesUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  GovernorUpgradeable,\n  GovernorUpgradeableInterface,\n} from \"../GovernorUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"proposer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"VoteCast\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BALLOT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"COUNTING_MODE\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"castVote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"castVoteBySig\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"castVoteWithReason\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"hashProposal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalDeadline\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalSnapshot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"proposalThreshold\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"propose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quorum\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"target\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"relay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"state\",\n    outputs: [\n      {\n        internalType: \"enum IGovernorUpgradeable.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingPeriod\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nexport class GovernorUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): GovernorUpgradeableInterface {\n    return new utils.Interface(_abi) as GovernorUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): GovernorUpgradeable {\n    return new Contract(address, _abi, signerOrProvider) as GovernorUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IGovernorUpgradeable,\n  IGovernorUpgradeableInterface,\n} from \"../IGovernorUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"proposer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"VoteCast\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"COUNTING_MODE\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"castVote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"castVoteBySig\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"castVoteWithReason\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"hashProposal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalDeadline\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalSnapshot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"propose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quorum\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"state\",\n    outputs: [\n      {\n        internalType: \"enum IGovernorUpgradeable.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingPeriod\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IGovernorUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IGovernorUpgradeableInterface {\n    return new utils.Interface(_abi) as IGovernorUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IGovernorUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IGovernorUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IVotesUpgradeable,\n  IVotesUpgradeableInterface,\n} from \"../IVotesUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"fromDelegate\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"toDelegate\",\n        type: \"address\",\n      },\n    ],\n    name: \"DelegateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegate\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"previousBalance\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newBalance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DelegateVotesChanged\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegates\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastTotalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IVotesUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IVotesUpgradeableInterface {\n    return new utils.Interface(_abi) as IVotesUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IVotesUpgradeable {\n    return new Contract(address, _abi, signerOrProvider) as IVotesUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC2981Upgradeable,\n  IERC2981UpgradeableInterface,\n} from \"../IERC2981Upgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC2981Upgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC2981UpgradeableInterface {\n    return new utils.Interface(_abi) as IERC2981UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC2981Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as IERC2981Upgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  PausableUpgradeable,\n  PausableUpgradeableInterface,\n} from \"../PausableUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class PausableUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): PausableUpgradeableInterface {\n    return new utils.Interface(_abi) as PausableUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): PausableUpgradeable {\n    return new Contract(address, _abi, signerOrProvider) as PausableUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  ERC1155Upgradeable,\n  ERC1155UpgradeableInterface,\n} from \"../ERC1155Upgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b506114c2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610dc6565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610e09565b610237565b60405190151581526020016100a9565b6100e86100e3366004610e2d565b610289565b6040516100a99190610e93565b610108610103366004610ff2565b61031d565b005b61011d61011836600461109c565b6103bf565b6040516100a991906111a2565b6101086101383660046111b5565b6104fd565b6100c561014b3660046111f1565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b610108610187366004611224565b61050c565b60006001600160a01b03831661020f5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061026857506001600160e01b031982166303a24d0760e21b145b8061028357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606067805461029890611289565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490611289565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103395750610339853361014b565b6103ab5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610206565b6103b885858585856105a7565b5050505050565b606081518351146104385760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610206565b6000835167ffffffffffffffff81111561045457610454610ea6565b60405190808252806020026020018201604052801561047d578160200160208202803683370190505b50905060005b84518110156104f5576104c88582815181106104a1576104a16112c4565b60200260200101518583815181106104bb576104bb6112c4565b602002602001015161018c565b8282815181106104da576104da6112c4565b60209081029190910101526104ee816112f0565b9050610483565b509392505050565b61050833838361081d565b5050565b6001600160a01b0385163314806105285750610528853361014b565b61059a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610206565b6103b88585858585610912565b815183511461061e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b0384166106825760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b3360005b84518110156107af5760008582815181106106a3576106a36112c4565b6020026020010151905060008583815181106106c1576106c16112c4565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156107555760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061079490849061130b565b92505081905550505050806107a8906112f0565b9050610686565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107ff929190611323565b60405180910390a4610815818787878787610abd565b505050505050565b816001600160a01b0316836001600160a01b031614156108a55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109765760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b3361098f81878761098688610c63565b6103b888610c63565b60008481526065602090815260408083206001600160a01b038a16845290915290205483811015610a155760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b60008581526065602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610a5490849061130b565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ab4828888888888610cae565b50505050505050565b6001600160a01b0384163b156108155760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610b019089908990889088908890600401611351565b6020604051808303816000875af1925050508015610b3c575060408051601f3d908101601f19168201909252610b39918101906113af565b60015b610bf257610b486113cc565b806308c379a01415610b825750610b5d6113e8565b80610b685750610b84565b8060405162461bcd60e51b81526004016102069190610e93565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610206565b6001600160e01b0319811663bc197c8160e01b14610ab45760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c9d57610c9d6112c4565b602090810291909101015292915050565b6001600160a01b0384163b156108155760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610cf29089908990889088908890600401611472565b6020604051808303816000875af1925050508015610d2d575060408051601f3d908101601f19168201909252610d2a918101906113af565b60015b610d3957610b486113cc565b6001600160e01b0319811663f23a6e6160e01b14610ab45760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b80356001600160a01b0381168114610dc157600080fd5b919050565b60008060408385031215610dd957600080fd5b610de283610daa565b946020939093013593505050565b6001600160e01b031981168114610e0657600080fd5b50565b600060208284031215610e1b57600080fd5b8135610e2681610df0565b9392505050565b600060208284031215610e3f57600080fd5b5035919050565b6000815180845260005b81811015610e6c57602081850181015186830182015201610e50565b81811115610e7e576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610e266020830184610e46565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610ee257610ee2610ea6565b6040525050565b600067ffffffffffffffff821115610f0357610f03610ea6565b5060051b60200190565b600082601f830112610f1e57600080fd5b81356020610f2b82610ee9565b604051610f388282610ebc565b83815260059390931b8501820192828101915086841115610f5857600080fd5b8286015b84811015610f735780358352918301918301610f5c565b509695505050505050565b600082601f830112610f8f57600080fd5b813567ffffffffffffffff811115610fa957610fa9610ea6565b604051610fc0601f8301601f191660200182610ebc565b818152846020838601011115610fd557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561100a57600080fd5b61101386610daa565b945061102160208701610daa565b9350604086013567ffffffffffffffff8082111561103e57600080fd5b61104a89838a01610f0d565b9450606088013591508082111561106057600080fd5b61106c89838a01610f0d565b9350608088013591508082111561108257600080fd5b5061108f88828901610f7e565b9150509295509295909350565b600080604083850312156110af57600080fd5b823567ffffffffffffffff808211156110c757600080fd5b818501915085601f8301126110db57600080fd5b813560206110e882610ee9565b6040516110f58282610ebc565b83815260059390931b850182019282810191508984111561111557600080fd5b948201945b8386101561113a5761112b86610daa565b8252948201949082019061111a565b9650508601359250508082111561115057600080fd5b5061115d85828601610f0d565b9150509250929050565b600081518084526020808501945080840160005b838110156111975781518752958201959082019060010161117b565b509495945050505050565b602081526000610e266020830184611167565b600080604083850312156111c857600080fd5b6111d183610daa565b9150602083013580151581146111e657600080fd5b809150509250929050565b6000806040838503121561120457600080fd5b61120d83610daa565b915061121b60208401610daa565b90509250929050565b600080600080600060a0868803121561123c57600080fd5b61124586610daa565b945061125360208701610daa565b93506040860135925060608601359150608086013567ffffffffffffffff81111561127d57600080fd5b61108f88828901610f7e565b600181811c9082168061129d57607f821691505b602082108114156112be57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611304576113046112da565b5060010190565b6000821982111561131e5761131e6112da565b500190565b6040815260006113366040830185611167565b82810360208401526113488185611167565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261137d60a0830186611167565b828103606084015261138f8186611167565b905082810360808401526113a38185610e46565b98975050505050505050565b6000602082840312156113c157600080fd5b8151610e2681610df0565b600060033d11156113e55760046000803e5060005160e01c5b90565b600060443d10156113f65790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561142657505050505090565b828501915081518181111561143e5750505050505090565b843d87010160208285010111156114585750505050505090565b61146760208286010187610ebc565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526114aa60a0830184610e46565b97965050505050505056fea164736f6c634300080c000a\";\n\ntype ERC1155UpgradeableConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ERC1155UpgradeableConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class ERC1155Upgradeable__factory extends ContractFactory {\n  constructor(...args: ERC1155UpgradeableConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"ERC1155Upgradeable\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ERC1155Upgradeable> {\n    return super.deploy(overrides || {}) as Promise<ERC1155Upgradeable>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): ERC1155Upgradeable {\n    return super.attach(address) as ERC1155Upgradeable;\n  }\n  connect(signer: Signer): ERC1155Upgradeable__factory {\n    return super.connect(signer) as ERC1155Upgradeable__factory;\n  }\n  static readonly contractName: \"ERC1155Upgradeable\";\n  public readonly contractName: \"ERC1155Upgradeable\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ERC1155UpgradeableInterface {\n    return new utils.Interface(_abi) as ERC1155UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC1155Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as ERC1155Upgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC1155BurnableUpgradeable,\n  ERC1155BurnableUpgradeableInterface,\n} from \"../ERC1155BurnableUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"burnBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ERC1155BurnableUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC1155BurnableUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC1155BurnableUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC1155BurnableUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC1155BurnableUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC1155PausableUpgradeable,\n  ERC1155PausableUpgradeableInterface,\n} from \"../ERC1155PausableUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ERC1155PausableUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC1155PausableUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC1155PausableUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC1155PausableUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC1155PausableUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC1155MetadataURIUpgradeable,\n  IERC1155MetadataURIUpgradeableInterface,\n} from \"../IERC1155MetadataURIUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC1155MetadataURIUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC1155MetadataURIUpgradeableInterface {\n    return new utils.Interface(_abi) as IERC1155MetadataURIUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC1155MetadataURIUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IERC1155MetadataURIUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC1155ReceiverUpgradeable,\n  IERC1155ReceiverUpgradeableInterface,\n} from \"../IERC1155ReceiverUpgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155BatchReceived\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC1155ReceiverUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC1155ReceiverUpgradeableInterface {\n    return new utils.Interface(_abi) as IERC1155ReceiverUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC1155ReceiverUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IERC1155ReceiverUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC1155Upgradeable,\n  IERC1155UpgradeableInterface,\n} from \"../IERC1155Upgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC1155Upgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC1155UpgradeableInterface {\n    return new utils.Interface(_abi) as IERC1155UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC1155Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as IERC1155Upgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  ERC1155HolderUpgradeable,\n  ERC1155HolderUpgradeableInterface,\n} from \"../ERC1155HolderUpgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155BatchReceived\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b506103a9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c36600461028d565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b4366004610337565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461015157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561019557610195610156565b604052919050565b600082601f8301126101ae57600080fd5b8135602067ffffffffffffffff8211156101ca576101ca610156565b8160051b6101d982820161016c565b92835284810182019282810190878511156101f357600080fd5b83870192505b84831015610212578235825291830191908301906101f9565b979650505050505050565b600082601f83011261022e57600080fd5b813567ffffffffffffffff81111561024857610248610156565b61025b601f8201601f191660200161016c565b81815284602083860101111561027057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156102a557600080fd5b6102ae8661012d565b94506102bc6020870161012d565b9350604086013567ffffffffffffffff808211156102d957600080fd5b6102e589838a0161019d565b945060608801359150808211156102fb57600080fd5b61030789838a0161019d565b9350608088013591508082111561031d57600080fd5b5061032a8882890161021d565b9150509295509295909350565b600080600080600060a0868803121561034f57600080fd5b6103588661012d565b94506103666020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561039057600080fd5b61032a8882890161021d56fea164736f6c634300080c000a\";\n\ntype ERC1155HolderUpgradeableConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ERC1155HolderUpgradeableConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class ERC1155HolderUpgradeable__factory extends ContractFactory {\n  constructor(...args: ERC1155HolderUpgradeableConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"ERC1155HolderUpgradeable\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ERC1155HolderUpgradeable> {\n    return super.deploy(overrides || {}) as Promise<ERC1155HolderUpgradeable>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): ERC1155HolderUpgradeable {\n    return super.attach(address) as ERC1155HolderUpgradeable;\n  }\n  connect(signer: Signer): ERC1155HolderUpgradeable__factory {\n    return super.connect(signer) as ERC1155HolderUpgradeable__factory;\n  }\n  static readonly contractName: \"ERC1155HolderUpgradeable\";\n  public readonly contractName: \"ERC1155HolderUpgradeable\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ERC1155HolderUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC1155HolderUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC1155HolderUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC1155HolderUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC1155ReceiverUpgradeable,\n  ERC1155ReceiverUpgradeableInterface,\n} from \"../ERC1155ReceiverUpgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155BatchReceived\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ERC1155ReceiverUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC1155ReceiverUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC1155ReceiverUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC1155ReceiverUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC1155ReceiverUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  ERC20Upgradeable,\n  ERC20UpgradeableInterface,\n} from \"../ERC20Upgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5061090c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461017f57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101e6565b6040516100e39190610772565b60405180910390f35b6100ff6100fa3660046107e3565b610278565b60405190151581526020016100e3565b6035545b6040519081526020016100e3565b6100ff61012f36600461080d565b610290565b604051601281526020016100e3565b6100ff6101513660046107e3565b6102b4565b610113610164366004610849565b6001600160a01b031660009081526033602052604090205490565b6100d66102f3565b6100ff6101953660046107e3565b610302565b6100ff6101a83660046107e3565b6103b1565b6101136101bb36600461086b565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546101f59061089e565b80601f01602080910402602001604051908101604052809291908181526020018280546102219061089e565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103bf565b5060019392505050565b60003361029e8582856104e3565b6102a9858585610575565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061028690829086906102ee9087906108d9565b6103bf565b6060603780546101f59061089e565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156103a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102a982868684036103bf565b600033610286818585610575565b6001600160a01b0383166104215760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161039b565b6001600160a01b0382166104825760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161039b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260346020908152604080832093861683529290522054600019811461056f57818110156105625760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161039b565b61056f84848484036103bf565b50505050565b6001600160a01b0383166105f15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166106535760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161039b565b6001600160a01b038316600090815260336020526040902054818110156106e25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906107199084906108d9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161076591815260200190565b60405180910390a361056f565b600060208083528351808285015260005b8181101561079f57858101830151858201604001528201610783565b818111156107b1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107de57600080fd5b919050565b600080604083850312156107f657600080fd5b6107ff836107c7565b946020939093013593505050565b60008060006060848603121561082257600080fd5b61082b846107c7565b9250610839602085016107c7565b9150604084013590509250925092565b60006020828403121561085b57600080fd5b610864826107c7565b9392505050565b6000806040838503121561087e57600080fd5b610887836107c7565b9150610895602084016107c7565b90509250929050565b600181811c908216806108b257607f821691505b602082108114156108d357634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156108fa57634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080c000a\";\n\ntype ERC20UpgradeableConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ERC20UpgradeableConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class ERC20Upgradeable__factory extends ContractFactory {\n  constructor(...args: ERC20UpgradeableConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"ERC20Upgradeable\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ERC20Upgradeable> {\n    return super.deploy(overrides || {}) as Promise<ERC20Upgradeable>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): ERC20Upgradeable {\n    return super.attach(address) as ERC20Upgradeable;\n  }\n  connect(signer: Signer): ERC20Upgradeable__factory {\n    return super.connect(signer) as ERC20Upgradeable__factory;\n  }\n  static readonly contractName: \"ERC20Upgradeable\";\n  public readonly contractName: \"ERC20Upgradeable\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ERC20UpgradeableInterface {\n    return new utils.Interface(_abi) as ERC20UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC20Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as ERC20Upgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC20PermitUpgradeable,\n  ERC20PermitUpgradeableInterface,\n} from \"../ERC20PermitUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class ERC20PermitUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC20PermitUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC20PermitUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC20PermitUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC20PermitUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC20PermitUpgradeable,\n  IERC20PermitUpgradeableInterface,\n} from \"../IERC20PermitUpgradeable\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC20PermitUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC20PermitUpgradeableInterface {\n    return new utils.Interface(_abi) as IERC20PermitUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC20PermitUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IERC20PermitUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC20BurnableUpgradeable,\n  ERC20BurnableUpgradeableInterface,\n} from \"../ERC20BurnableUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burnFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class ERC20BurnableUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC20BurnableUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC20BurnableUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC20BurnableUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC20BurnableUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC20PausableUpgradeable,\n  ERC20PausableUpgradeableInterface,\n} from \"../ERC20PausableUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class ERC20PausableUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC20PausableUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC20PausableUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC20PausableUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC20PausableUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC20VotesUpgradeable,\n  ERC20VotesUpgradeableInterface,\n} from \"../ERC20VotesUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"fromDelegate\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"toDelegate\",\n        type: \"address\",\n      },\n    ],\n    name: \"DelegateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegate\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"previousBalance\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newBalance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DelegateVotesChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"pos\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"checkpoints\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"fromBlock\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint224\",\n            name: \"votes\",\n            type: \"uint224\",\n          },\n        ],\n        internalType: \"struct ERC20VotesUpgradeable.Checkpoint\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegates\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastTotalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"numCheckpoints\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class ERC20VotesUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC20VotesUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC20VotesUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC20VotesUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC20VotesUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC20MetadataUpgradeable,\n  IERC20MetadataUpgradeableInterface,\n} from \"../IERC20MetadataUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC20MetadataUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC20MetadataUpgradeableInterface {\n    return new utils.Interface(_abi) as IERC20MetadataUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC20MetadataUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IERC20MetadataUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC20Upgradeable,\n  IERC20UpgradeableInterface,\n} from \"../IERC20Upgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC20Upgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC20UpgradeableInterface {\n    return new utils.Interface(_abi) as IERC20UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC20Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as IERC20Upgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  ERC721Upgradeable,\n  ERC721UpgradeableInterface,\n} from \"../ERC721Upgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50611366806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101c3578063b88d4fde146101d6578063c87b56dd146101e9578063e985e9c5146101fc57600080fd5b80636352211e1461018757806370a082311461019a57806395d89b41146101bb57600080fd5b8063095ea7b3116100bd578063095ea7b31461014c57806323b872dd1461016157806342842e0e1461017457600080fd5b806301ffc9a7146100e457806306fdde031461010c578063081812fc14610121575b600080fd5b6100f76100f2366004610f43565b610238565b60405190151581526020015b60405180910390f35b61011461028a565b6040516101039190610fb8565b61013461012f366004610fcb565b61031c565b6040516001600160a01b039091168152602001610103565b61015f61015a366004611000565b6103b6565b005b61015f61016f36600461102a565b6104cc565b61015f61018236600461102a565b610553565b610134610195366004610fcb565b61056e565b6101ad6101a8366004611066565b6105f9565b604051908152602001610103565b610114610693565b61015f6101d1366004611081565b6106a2565b61015f6101e43660046110d3565b6106b1565b6101146101f7366004610fcb565b61073f565b6100f761020a3660046111af565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061026957506001600160e01b03198216635b5e139f60e01b145b8061028457506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060658054610299906111e2565b80601f01602080910402602001604051908101604052809291908181526020018280546102c5906111e2565b80156103125780601f106102e757610100808354040283529160200191610312565b820191906000526020600020905b8154815290600101906020018083116102f557829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b031661039a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006103c18261056e565b9050806001600160a01b0316836001600160a01b0316141561042f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610391565b336001600160a01b038216148061044b575061044b813361020a565b6104bd5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610391565b6104c78383610835565b505050565b6104d633826108b0565b6105485760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610391565b6104c78383836109a7565b6104c7838383604051806020016040528060008152506106b1565b6000818152606760205260408120546001600160a01b0316806102845760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610391565b60006001600160a01b0382166106775760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610391565b506001600160a01b031660009081526068602052604090205490565b606060668054610299906111e2565b6106ad338383610b68565b5050565b6106bb33836108b0565b61072d5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610391565b61073984848484610c37565b50505050565b6000818152606760205260409020546060906001600160a01b03166107cc5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610391565b60006107e360408051602081019091526000815290565b90506000815111610803576040518060200160405280600081525061082e565b8061080d84610cc0565b60405160200161081e92919061121d565b6040516020818303038152906040525b9392505050565b6000818152606960205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906108778261056e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b03166109295760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610391565b60006109348361056e565b9050806001600160a01b0316846001600160a01b0316148061096f5750836001600160a01b03166109648461031c565b6001600160a01b0316145b8061099f57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166109ba8261056e565b6001600160a01b031614610a365760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610391565b6001600160a01b038216610a985760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610391565b610aa3600082610835565b6001600160a01b0383166000908152606860205260408120805460019290610acc908490611262565b90915550506001600160a01b0382166000908152606860205260408120805460019290610afa908490611279565b9091555050600081815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610bca5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610391565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c428484846109a7565b610c4e84848484610dd6565b6107395760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610391565b606081610ce45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d0e5780610cf881611291565b9150610d079050600a836112c2565b9150610ce8565b60008167ffffffffffffffff811115610d2957610d296110bd565b6040519080825280601f01601f191660200182016040528015610d53576020820181803683370190505b5090505b841561099f57610d68600183611262565b9150610d75600a866112d6565b610d80906030611279565b60f81b818381518110610d9557610d956112ea565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610dcf600a866112c2565b9450610d57565b60006001600160a01b0384163b15610f1f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e1a903390899088908890600401611300565b6020604051808303816000875af1925050508015610e55575060408051601f3d908101601f19168201909252610e529181019061133c565b60015b610f05573d808015610e83576040519150601f19603f3d011682016040523d82523d6000602084013e610e88565b606091505b508051610efd5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610391565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061099f565b506001949350505050565b6001600160e01b031981168114610f4057600080fd5b50565b600060208284031215610f5557600080fd5b813561082e81610f2a565b60005b83811015610f7b578181015183820152602001610f63565b838111156107395750506000910152565b60008151808452610fa4816020860160208601610f60565b601f01601f19169290920160200192915050565b60208152600061082e6020830184610f8c565b600060208284031215610fdd57600080fd5b5035919050565b80356001600160a01b0381168114610ffb57600080fd5b919050565b6000806040838503121561101357600080fd5b61101c83610fe4565b946020939093013593505050565b60008060006060848603121561103f57600080fd5b61104884610fe4565b925061105660208501610fe4565b9150604084013590509250925092565b60006020828403121561107857600080fd5b61082e82610fe4565b6000806040838503121561109457600080fd5b61109d83610fe4565b9150602083013580151581146110b257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156110e957600080fd5b6110f285610fe4565b935061110060208601610fe4565b925060408501359150606085013567ffffffffffffffff8082111561112457600080fd5b818701915087601f83011261113857600080fd5b81358181111561114a5761114a6110bd565b604051601f8201601f19908116603f01168101908382118183101715611172576111726110bd565b816040528281528a602084870101111561118b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156111c257600080fd5b6111cb83610fe4565b91506111d960208401610fe4565b90509250929050565b600181811c908216806111f657607f821691505b6020821081141561121757634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161122f818460208801610f60565b835190830190611243818360208801610f60565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156112745761127461124c565b500390565b6000821982111561128c5761128c61124c565b500190565b60006000198214156112a5576112a561124c565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826112d1576112d16112ac565b500490565b6000826112e5576112e56112ac565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526113326080830184610f8c565b9695505050505050565b60006020828403121561134e57600080fd5b815161082e81610f2a56fea164736f6c634300080c000a\";\n\ntype ERC721UpgradeableConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ERC721UpgradeableConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class ERC721Upgradeable__factory extends ContractFactory {\n  constructor(...args: ERC721UpgradeableConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"ERC721Upgradeable\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ERC721Upgradeable> {\n    return super.deploy(overrides || {}) as Promise<ERC721Upgradeable>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): ERC721Upgradeable {\n    return super.attach(address) as ERC721Upgradeable;\n  }\n  connect(signer: Signer): ERC721Upgradeable__factory {\n    return super.connect(signer) as ERC721Upgradeable__factory;\n  }\n  static readonly contractName: \"ERC721Upgradeable\";\n  public readonly contractName: \"ERC721Upgradeable\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ERC721UpgradeableInterface {\n    return new utils.Interface(_abi) as ERC721UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC721Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as ERC721Upgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC721EnumerableUpgradeable,\n  ERC721EnumerableUpgradeableInterface,\n} from \"../ERC721EnumerableUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class ERC721EnumerableUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC721EnumerableUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC721EnumerableUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC721EnumerableUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC721EnumerableUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC721EnumerableUpgradeable,\n  IERC721EnumerableUpgradeableInterface,\n} from \"../IERC721EnumerableUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721EnumerableUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721EnumerableUpgradeableInterface {\n    return new utils.Interface(_abi) as IERC721EnumerableUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721EnumerableUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IERC721EnumerableUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC721MetadataUpgradeable,\n  IERC721MetadataUpgradeableInterface,\n} from \"../IERC721MetadataUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721MetadataUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721MetadataUpgradeableInterface {\n    return new utils.Interface(_abi) as IERC721MetadataUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721MetadataUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IERC721MetadataUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC721ReceiverUpgradeable,\n  IERC721ReceiverUpgradeableInterface,\n} from \"../IERC721ReceiverUpgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721ReceiverUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721ReceiverUpgradeableInterface {\n    return new utils.Interface(_abi) as IERC721ReceiverUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721ReceiverUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IERC721ReceiverUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC721Upgradeable,\n  IERC721UpgradeableInterface,\n} from \"../IERC721Upgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721Upgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721UpgradeableInterface {\n    return new utils.Interface(_abi) as IERC721UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as IERC721Upgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  ERC721HolderUpgradeable,\n  ERC721HolderUpgradeableInterface,\n} from \"../ERC721HolderUpgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b506101ab806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e3660046100c2565b630a85bd0160e11b949350505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b803573ffffffffffffffffffffffffffffffffffffffff811681146100a757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100d857600080fd5b6100e185610083565b93506100ef60208601610083565b925060408501359150606085013567ffffffffffffffff8082111561011357600080fd5b818701915087601f83011261012757600080fd5b813581811115610139576101396100ac565b604051601f8201601f19908116603f01168101908382118183101715610161576101616100ac565b816040528281528a602084870101111561017a57600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea164736f6c634300080c000a\";\n\ntype ERC721HolderUpgradeableConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ERC721HolderUpgradeableConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class ERC721HolderUpgradeable__factory extends ContractFactory {\n  constructor(...args: ERC721HolderUpgradeableConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"ERC721HolderUpgradeable\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ERC721HolderUpgradeable> {\n    return super.deploy(overrides || {}) as Promise<ERC721HolderUpgradeable>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): ERC721HolderUpgradeable {\n    return super.attach(address) as ERC721HolderUpgradeable;\n  }\n  connect(signer: Signer): ERC721HolderUpgradeable__factory {\n    return super.connect(signer) as ERC721HolderUpgradeable__factory;\n  }\n  static readonly contractName: \"ERC721HolderUpgradeable\";\n  public readonly contractName: \"ERC721HolderUpgradeable\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ERC721HolderUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC721HolderUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC721HolderUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC721HolderUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC165Upgradeable,\n  ERC165UpgradeableInterface,\n} from \"../ERC165Upgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ERC165Upgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC165UpgradeableInterface {\n    return new utils.Interface(_abi) as ERC165UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC165Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as ERC165Upgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IERC165Upgradeable,\n  IERC165UpgradeableInterface,\n} from \"../IERC165Upgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC165Upgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC165UpgradeableInterface {\n    return new utils.Interface(_abi) as IERC165UpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC165Upgradeable {\n    return new Contract(address, _abi, signerOrProvider) as IERC165Upgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  MulticallUpgradeable,\n  MulticallUpgradeableInterface,\n} from \"../MulticallUpgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class MulticallUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): MulticallUpgradeableInterface {\n    return new utils.Interface(_abi) as MulticallUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MulticallUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as MulticallUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { AccessControl, AccessControlInterface } from \"../AccessControl\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class AccessControl__factory {\n  static readonly abi = _abi;\n  static createInterface(): AccessControlInterface {\n    return new utils.Interface(_abi) as AccessControlInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): AccessControl {\n    return new Contract(address, _abi, signerOrProvider) as AccessControl;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  AccessControlEnumerable,\n  AccessControlEnumerableInterface,\n} from \"../AccessControlEnumerable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class AccessControlEnumerable__factory {\n  static readonly abi = _abi;\n  static createInterface(): AccessControlEnumerableInterface {\n    return new utils.Interface(_abi) as AccessControlEnumerableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): AccessControlEnumerable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as AccessControlEnumerable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IAccessControl,\n  IAccessControlInterface,\n} from \"../IAccessControl\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IAccessControl__factory {\n  static readonly abi = _abi;\n  static createInterface(): IAccessControlInterface {\n    return new utils.Interface(_abi) as IAccessControlInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IAccessControl {\n    return new Contract(address, _abi, signerOrProvider) as IAccessControl;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IAccessControlEnumerable,\n  IAccessControlEnumerableInterface,\n} from \"../IAccessControlEnumerable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IAccessControlEnumerable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IAccessControlEnumerableInterface {\n    return new utils.Interface(_abi) as IAccessControlEnumerableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IAccessControlEnumerable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IAccessControlEnumerable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC2771Context,\n  ERC2771ContextInterface,\n} from \"../ERC2771Context\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ERC2771Context__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC2771ContextInterface {\n    return new utils.Interface(_abi) as ERC2771ContextInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC2771Context {\n    return new Contract(address, _abi, signerOrProvider) as ERC2771Context;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  MinimalForwarder,\n  MinimalForwarderInterface,\n} from \"../MinimalForwarder\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"from\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"gas\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"data\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct MinimalForwarder.ForwardRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n    ],\n    name: \"getNonce\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"from\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"gas\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"data\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct MinimalForwarder.ForwardRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"verify\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x61014060405234801561001157600080fd5b50604080518082018252601081526f26b4b734b6b0b62337b93bb0b93232b960811b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100fb8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061011092505050565b60805160a05160c05160e0516101005161012051610b4061015f60003960006104f701526000610546015260006105210152600061047a015260006104a4015260006104ce0152610b406000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f610054366004610901565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b610095610090366004610931565b6100d3565b604051610079929190610a00565b3480156100af57600080fd5b506100c36100be366004610931565b610277565b6040519015158152602001610079565b600060606100e2858585610277565b6101595760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d617463682072657175657374000000000000000000000000000060648201526084015b60405180910390fd5b61016860808601356001610a3c565b6000806101786020890189610901565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101b29190610901565b6001600160a01b0316606088013560408901356101d260a08b018b610a62565b6101df60208d018d610901565b6040516020016101f193929190610aa9565b60408051601f198184030181529082905261020b91610acf565b600060405180830381858888f193505050503d8060008114610249576040519150601f19603f3d011682016040523d82523d6000602084013e61024e565b606091505b509092509050610263603f6060890135610aeb565b5a1161026b57fe5b90969095509350505050565b60008061038a84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061038492507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102e7905060208a018a610901565b6102f760408b0160208c01610901565b60408b013560608c013560808d013561031360a08f018f610a62565b604051610321929190610b0d565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103f5565b90610449565b905060808501356000806103a16020890189610901565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103ec57506103d76020860186610901565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061044361040261046d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006104588585610594565b9150915061046581610604565b509392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156104c657507f000000000000000000000000000000000000000000000000000000000000000046145b156104f057507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156105cb5760208301516040840151606085015160001a6105bf878285856107c2565b945094505050506105fd565b8251604014156105f557602083015160408401516105ea8683836108af565b9350935050506105fd565b506000905060025b9250929050565b600081600481111561061857610618610b1d565b14156106215750565b600181600481111561063557610635610b1d565b14156106835760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610150565b600281600481111561069757610697610b1d565b14156106e55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610150565b60038160048111156106f9576106f9610b1d565b14156107525760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610150565b600481600481111561076657610766610b1d565b14156107bf5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610150565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107f957506000905060036108a6565b8460ff16601b1415801561081157508460ff16601c14155b1561082257506000905060046108a6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610876573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661089f576000600192509250506108a6565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816108e560ff86901c601b610a3c565b90506108f3878288856107c2565b935093505050935093915050565b60006020828403121561091357600080fd5b81356001600160a01b038116811461092a57600080fd5b9392505050565b60008060006040848603121561094657600080fd5b833567ffffffffffffffff8082111561095e57600080fd5b9085019060c0828803121561097257600080fd5b9093506020850135908082111561098857600080fd5b818601915086601f83011261099c57600080fd5b8135818111156109ab57600080fd5b8760208285010111156109bd57600080fd5b6020830194508093505050509250925092565b60005b838110156109eb5781810151838201526020016109d3565b838111156109fa576000848401525b50505050565b82151581526040602082015260008251806040840152610a278160608501602087016109d0565b601f01601f1916919091016060019392505050565b60008219821115610a5d57634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e19843603018112610a7957600080fd5b83018035915067ffffffffffffffff821115610a9457600080fd5b6020019150368190038213156105fd57600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610ae18184602087016109d0565b9190910192915050565b600082610b0857634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea164736f6c634300080c000a\";\n\ntype MinimalForwarderConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: MinimalForwarderConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class MinimalForwarder__factory extends ContractFactory {\n  constructor(...args: MinimalForwarderConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"MinimalForwarder\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<MinimalForwarder> {\n    return super.deploy(overrides || {}) as Promise<MinimalForwarder>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): MinimalForwarder {\n    return super.attach(address) as MinimalForwarder;\n  }\n  connect(signer: Signer): MinimalForwarder__factory {\n    return super.connect(signer) as MinimalForwarder__factory;\n  }\n  static readonly contractName: \"MinimalForwarder\";\n  public readonly contractName: \"MinimalForwarder\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MinimalForwarderInterface {\n    return new utils.Interface(_abi) as MinimalForwarderInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MinimalForwarder {\n    return new Contract(address, _abi, signerOrProvider) as MinimalForwarder;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { Proxy, ProxyInterface } from \"../Proxy\";\n\nconst _abi = [\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nexport class Proxy__factory {\n  static readonly abi = _abi;\n  static createInterface(): ProxyInterface {\n    return new utils.Interface(_abi) as ProxyInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Proxy {\n    return new Contract(address, _abi, signerOrProvider) as Proxy;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IERC1155, IERC1155Interface } from \"../IERC1155\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC1155__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC1155Interface {\n    return new utils.Interface(_abi) as IERC1155Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC1155 {\n    return new Contract(address, _abi, signerOrProvider) as IERC1155;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IERC20, IERC20Interface } from \"../IERC20\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC20__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC20Interface {\n    return new utils.Interface(_abi) as IERC20Interface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): IERC20 {\n    return new Contract(address, _abi, signerOrProvider) as IERC20;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IERC721, IERC721Interface } from \"../IERC721\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IERC721__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC721Interface {\n    return new utils.Interface(_abi) as IERC721Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC721 {\n    return new Contract(address, _abi, signerOrProvider) as IERC721;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { ERC165, ERC165Interface } from \"../ERC165\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ERC165__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC165Interface {\n    return new utils.Interface(_abi) as ERC165Interface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC165 {\n    return new Contract(address, _abi, signerOrProvider) as ERC165;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IERC165, IERC165Interface } from \"../IERC165\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IERC165__factory {\n  static readonly abi = _abi;\n  static createInterface(): IERC165Interface {\n    return new utils.Interface(_abi) as IERC165Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC165 {\n    return new Contract(address, _abi, signerOrProvider) as IERC165;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { Multicall, MulticallInterface } from \"../Multicall\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class Multicall__factory {\n  static readonly abi = _abi;\n  static createInterface(): MulticallInterface {\n    return new utils.Interface(_abi) as MulticallInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Multicall {\n    return new Contract(address, _abi, signerOrProvider) as Multicall;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { DropERC1155, DropERC1155Interface } from \"../DropERC1155\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_thirdwebFee\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"claimConditions\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"ClaimConditionsUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"maxTotalSupply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxTotalSupplyUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxWalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"claimConditionIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"claimer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityClaimed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensClaimed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"baseURI\",\n        type: \"string\",\n      },\n    ],\n    name: \"TokensLazyMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"burnBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"_proofs\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_proofMaxQuantityPerTransaction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claim\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimCondition\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"currentStartId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getActiveClaimConditionId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getClaimConditionById\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IDropClaimCondition.ClaimCondition\",\n        name: \"condition\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n    ],\n    name: \"getClaimTimestamp\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"lastClaimTimestamp\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nextValidClaimTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_royaltyBps\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_platformFeeBps\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_baseURIForTokens\",\n        type: \"string\",\n      },\n    ],\n    name: \"lazyMint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"maxTotalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"maxWalletClaimCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"nextTokenIdToMint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"saleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"_phases\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_resetClaimEligibility\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setClaimConditions\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_maxTotalSupply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxTotalSupply\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxWalletClaimCount\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setWalletClaimCount\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"thirdwebFee\",\n    outputs: [\n      {\n        internalType: \"contract ITWFee\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"_tokenURI\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"verifyMaxQuantityPerTransaction\",\n        type: \"bool\",\n      },\n    ],\n    name: \"verifyClaim\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"_proofs\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_proofMaxQuantityPerTransaction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifyClaimMerkleProof\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"validMerkleProof\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"merkleProofIndex\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"walletClaimCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n\ntype DropERC1155ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: DropERC1155ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class DropERC1155__factory extends ContractFactory {\n  constructor(...args: DropERC1155ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"DropERC1155\";\n  }\n\n  deploy(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<DropERC1155> {\n    return super.deploy(_thirdwebFee, overrides || {}) as Promise<DropERC1155>;\n  }\n  getDeployTransaction(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_thirdwebFee, overrides || {});\n  }\n  attach(address: string): DropERC1155 {\n    return super.attach(address) as DropERC1155;\n  }\n  connect(signer: Signer): DropERC1155__factory {\n    return super.connect(signer) as DropERC1155__factory;\n  }\n  static readonly contractName: \"DropERC1155\";\n  public readonly contractName: \"DropERC1155\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): DropERC1155Interface {\n    return new utils.Interface(_abi) as DropERC1155Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): DropERC1155 {\n    return new Contract(address, _abi, signerOrProvider) as DropERC1155;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { DropERC20, DropERC20Interface } from \"../DropERC20\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_thirdwebFee\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"claimConditions\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"ClaimConditionsUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"fromDelegate\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"toDelegate\",\n        type: \"address\",\n      },\n    ],\n    name: \"DelegateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegate\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"previousBalance\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newBalance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DelegateVotesChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"maxTotalSupply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxTotalSupplyUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxWalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"claimConditionIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"claimer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityClaimed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensClaimed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burnFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"pos\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"checkpoints\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"fromBlock\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint224\",\n            name: \"votes\",\n            type: \"uint224\",\n          },\n        ],\n        internalType: \"struct ERC20VotesUpgradeable.Checkpoint\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"_proofs\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_proofMaxQuantityPerTransaction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claim\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"claimCondition\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"currentStartId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegates\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getActiveClaimConditionId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getClaimConditionById\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IDropClaimCondition.ClaimCondition\",\n        name: \"condition\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n    ],\n    name: \"getClaimTimestamp\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"lastClaimTimestamp\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nextValidClaimTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastTotalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_primarySaleRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxTotalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxWalletClaimCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"numCheckpoints\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"_phases\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_resetClaimEligibility\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setClaimConditions\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_maxTotalSupply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxTotalSupply\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxWalletClaimCount\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setWalletClaimCount\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"verifyMaxQuantityPerTransaction\",\n        type: \"bool\",\n      },\n    ],\n    name: \"verifyClaim\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"_proofs\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_proofMaxQuantityPerTransaction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifyClaimMerkleProof\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"validMerkleProof\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"merkleProofIndex\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"walletClaimCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a06040523480156200001157600080fd5b50604051620058473803806200584783398101604081905262000034916200013b565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b6200010e565b620000c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000e6576000805461ffff19166101011790555b6001600160a01b038216608052801562000106576000805461ff00191690555b50506200016d565b600062000126306200012c60201b6200267e1760201c565b15905090565b6001600160a01b03163b151590565b6000602082840312156200014e57600080fd5b81516001600160a01b03811681146200016657600080fd5b9392505050565b6080516156be620001896000396000612e0c01526156be6000f3fe6080604052600436106103815760003560e01c80637a5a8e7e116101d1578063af3be89011610102578063d505accf116100a0578063dfad80a61161006f578063dfad80a614610bbb578063e23b816414610bdb578063e8a3d48514610bfb578063f1127ed814610c1057600080fd5b8063d505accf14610b17578063d547741f14610b37578063d637ed5914610b57578063dd62ed3e14610b7457600080fd5b8063c68907de116100dc578063c68907de14610a78578063ca15c87314610a8d578063cb2ef6f714610aad578063d45573f614610ae057600080fd5b8063af3be89014610a01578063afb8291614610a38578063c3cda52014610a5857600080fd5b806395d89b411161016f578063a217fddf11610149578063a217fddf1461097f578063a457c2d714610994578063a9059cbb146109b4578063ac9650d8146109d457600080fd5b806395d89b41146109365780639ab24eb01461094b578063a0a8e4601461096b57600080fd5b80638e539e8c116101ab5780638e539e8c146108905780639010d07c146108b057806391d14854146108d0578063938e3d7b1461091657600080fd5b80637a5a8e7e146108285780637ecebe001461083b57806386ee745d1461085b57600080fd5b806339509351116102b6578063572b6c05116102545780636f8934f4116102235780636f8934f4146107125780636fcfff451461079c57806370a08231146107d157806379cc67901461080857600080fd5b8063572b6c051461065f578063587cde1e146106985780635c19a95c146106d25780636f4f2837146106f257600080fd5b80633f3e4c11116102905780633f3e4c11146105d157806342966c68146105f15780634352ab4114610611578063508679571461063f57600080fd5b806339509351146105715780633a46b1a8146105915780633ea33f29146105b157600080fd5b806323b872dd116103235780632f2ff15d116102fd5780632f2ff15d146104fa578063313ce5671461051a5780633644e5151461053c57806336568abe1461055157600080fd5b806323b872dd14610493578063248a9ca3146104b35780632ab4d052146104e357600080fd5b8063079fe40e1161035f578063079fe40e14610402578063095ea7b31461043b57806318160ddd1461045b5780631e7ac4881461047157600080fd5b806301ffc9a71461038657806305981769146103bb57806306fdde03146103e0575b600080fd5b34801561039257600080fd5b506103a66103a1366004614acc565b610c5a565b60405190151581526020015b60405180910390f35b3480156103c757600080fd5b506103d26102605481565b6040519081526020016103b2565b3480156103ec57600080fd5b506103f5610c6b565b6040516103b29190614b4e565b34801561040e57600080fd5b5061025f54610423906001600160a01b031681565b6040516001600160a01b0390911681526020016103b2565b34801561044757600080fd5b506103a6610456366004614b86565b610cfe565b34801561046757600080fd5b50610161546103d2565b34801561047d57600080fd5b5061049161048c366004614b86565b610d20565b005b34801561049f57600080fd5b506103a66104ae366004614bb2565b610e0e565b3480156104bf57600080fd5b506103d26104ce366004614bf3565b600090815260fb602052604090206001015490565b3480156104ef57600080fd5b506103d26102615481565b34801561050657600080fd5b50610491610515366004614c0c565b610e3e565b34801561052657600080fd5b5060125b60405160ff90911681526020016103b2565b34801561054857600080fd5b506103d2610e6b565b34801561055d57600080fd5b5061049161056c366004614c0c565b610e7a565b34801561057d57600080fd5b506103a661058c366004614b86565b610f16565b34801561059d57600080fd5b506103d26105ac366004614b86565b610f63565b3480156105bd57600080fd5b506104916105cc366004614b86565b610fd7565b3480156105dd57600080fd5b506104916105ec366004614bf3565b611040565b3480156105fd57600080fd5b5061049161060c366004614bf3565b611104565b34801561061d57600080fd5b506103d261062c366004614c3c565b6102676020526000908152604090205481565b34801561064b57600080fd5b5061049161065a366004614bf3565b611118565b34801561066b57600080fd5b506103a661067a366004614c3c565b6001600160a01b031660009081526065602052604090205460ff1690565b3480156106a457600080fd5b506104236106b3366004614c3c565b6001600160a01b03908116600090815261022a60205260409020541690565b3480156106de57600080fd5b506104916106ed366004614c3c565b61115c565b3480156106fe57600080fd5b5061049161070d366004614c3c565b61116d565b34801561071e57600080fd5b5061073261072d366004614bf3565b6111c7565b6040516103b29190600061010082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c08301526001600160a01b0360e08401511660e083015292915050565b3480156107a857600080fd5b506107bc6107b7366004614c3c565b611293565b60405163ffffffff90911681526020016103b2565b3480156107dd57600080fd5b506103d26107ec366004614c3c565b6001600160a01b0316600090815261015f602052604090205490565b34801561081457600080fd5b50610491610823366004614b86565b6112b6565b610491610836366004614c9e565b6112d2565b34801561084757600080fd5b506103d2610856366004614c3c565b611423565b34801561086757600080fd5b5061087b610876366004614c0c565b611442565b604080519283526020830191909152016103b2565b34801561089c57600080fd5b506103d26108ab366004614bf3565b61148c565b3480156108bc57600080fd5b506104236108cb366004614d23565b6114e9565b3480156108dc57600080fd5b506103a66108eb366004614c0c565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561092257600080fd5b50610491610931366004614d45565b611502565b34801561094257600080fd5b506103f5611523565b34801561095757600080fd5b506103d2610966366004614c3c565b611533565b34801561097757600080fd5b50600161052a565b34801561098b57600080fd5b506103d2600081565b3480156109a057600080fd5b506103a66109af366004614b86565b6115bc565b3480156109c057600080fd5b506103a66109cf366004614b86565b61167f565b3480156109e057600080fd5b506109f46109ef366004614db7565b611697565b6040516103b29190614df9565b348015610a0d57600080fd5b50610a21610a1c366004614e5b565b61178c565b6040805192151583526020830191909152016103b2565b348015610a4457600080fd5b50610491610a53366004614edb565b6119b0565b348015610a6457600080fd5b50610491610a73366004614f53565b611ccb565b348015610a8457600080fd5b506103d2611e01565b348015610a9957600080fd5b506103d2610aa8366004614bf3565b611eba565b348015610ab957600080fd5b507f44726f70455243323000000000000000000000000000000000000000000000006103d2565b348015610aec57600080fd5b5061025e5461025d54604080516001600160a01b03909316835261ffff9091166020830152016103b2565b348015610b2357600080fd5b50610491610b32366004614fad565b611ed2565b348015610b4357600080fd5b50610491610b52366004614c0c565b612019565b348015610b6357600080fd5b50610262546102635461087b919082565b348015610b8057600080fd5b506103d2610b8f36600461501b565b6001600160a01b0391821660009081526101606020908152604080832093909416825291909152205490565b348015610bc757600080fd5b50610491610bd636600461517e565b612041565b348015610be757600080fd5b50610491610bf6366004615267565b612203565b348015610c0757600080fd5b506103f561256a565b348015610c1c57600080fd5b50610c30610c2b3660046152ed565b6125f9565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016103b2565b6000610c658261268d565b92915050565b60606101628054610c7b90615324565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca790615324565b8015610cf45780601f10610cc957610100808354040283529160200191610cf4565b820191906000526020600020905b815481529060010190602001808311610cd757829003601f168201915b5050505050905090565b600080610d096126b2565b9050610d168185856126bc565b5060019392505050565b6000610d3381610d2e6126b2565b6127e1565b612710821115610d8a5760405162461bcd60e51b815260206004820152600d60248201527f627073203c3d2031303030302e0000000000000000000000000000000000000060448201526064015b60405180910390fd5b61025d80546fffffffffffffffffffffffffffffffff191667ffffffffffffffff841617905561025e80546001600160a01b0385166001600160a01b0319909116811790915560408051918252602082018490527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304910160405180910390a1505050565b600080610e196126b2565b9050610e26858285612861565b610e318585856128ee565b60019150505b9392505050565b600082815260fb6020526040902060010154610e5c81610d2e6126b2565b610e668383612afe565b505050565b6000610e75612b21565b905090565b610e826126b2565b6001600160a01b0316816001600160a01b031614610f085760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610d81565b610f128282612b9e565b5050565b600080610f216126b2565b6001600160a01b0380821660009081526101606020908152604080832093891683529290522054909150610d169082908690610f5e90879061536f565b6126bc565b6000438210610fb45760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610d81565b6001600160a01b038316600090815261022b60205260409020610e379083612bc1565b6000610fe581610d2e6126b2565b6001600160a01b0383166000818152610267602052604090819020849055517f8973b95d42472e89416ea69404f8038c041db700af9ec294e7b4cd4e1ff2801c906110339085815260200190565b60405180910390a2505050565b600061104e81610d2e6126b2565b6101615482106110c65760405162461bcd60e51b815260206004820152602b60248201527f616c7265616479206d696e746564206d6f7265207468616e206465736972656460448201527f206d617820737570706c790000000000000000000000000000000000000000006064820152608401610d81565b6102618290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b61111561110f6126b2565b82612c7e565b50565b600061112681610d2e6126b2565b6102608290556040518281527ff9d383c69b6255cbd431ca23734f43bdf15e694c7494956c917498469bcbce73906020016110f8565b6111156111676126b2565b82612c88565b600061117b81610d2e6126b2565b61025f80546001600160a01b0319166001600160a01b0384169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b61121b6040518061010001604052806000815260200160008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b031681525090565b5060009081526102646020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b031660e082015290565b6001600160a01b038116600090815261022b6020526040812054610c6590612d04565b6112c8826112c26126b2565b83612861565b610f128282612c7e565b600260015414156113255760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610d81565b60026001556000611334611e01565b905060008061134e836113456126b2565b8b89898961178c565b9092509050831561136a846113616126b2565b8c8c8c866119b0565b8280156113775750600085115b156113a757600084815261026660209081526040808320600886901c845290915290208054600160ff85161b1790555b6113b28a8a8a612d84565b6113bd8b858c612f79565b8a6001600160a01b03166113cf6126b2565b6001600160a01b0316857f9c4945d842cc8c6704877a0defcd9ab09f6d77b24a369a95c2610506c6c38ee78d60405161140a91815260200190565b60405180910390a4505060018055505050505050505050565b6001600160a01b03811660009081526101f76020526040812054610c65565b6000828152610265602090815260408083206001600160a01b03851684528252808320548584526102649092529091206004015481018181101561148557506000195b9250929050565b60004382106114dd5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610d81565b610c6561022c83612bc1565b600082815261012d60205260408120610e37908361302a565b600061151081610d2e6126b2565b61151d61025c84846149c3565b50505050565b60606101638054610c7b90615324565b6001600160a01b038116600090815261022b602052604081205480156115a9576001600160a01b038316600090815261022b60205260409020611577600183615387565b815481106115875761158761539e565b60009182526020909120015464010000000090046001600160e01b03166115ac565b60005b6001600160e01b03169392505050565b6000806115c76126b2565b6001600160a01b0380821660009081526101606020908152604080832093891683529290522054909150838110156116675760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610d81565b61167482868684036126bc565b506001949350505050565b60008061168a6126b2565b9050610d168185856128ee565b60608167ffffffffffffffff8111156116b2576116b2615049565b6040519080825280602002602001820160405280156116e557816020015b60608152602001906001900390816116d05790505b50905060005b8281101561178557611755308585848181106117095761170961539e565b905060200281019061171b91906153b4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061303692505050565b8282815181106117675761176761539e565b6020026020010181905250808061177d906153fb565b9150506116eb565b5092915050565b600086815261026460209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a08301819052600682015460c08401526007909101546001600160a01b031660e0830152829190156119a45761188586868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516bffffffffffffffffffffffff1960608d901b1660208201526034810188905260540160405160208183030381529060405280519060200120613141565b9093509150826118d75760405162461bcd60e51b815260206004820152601160248201527f6e6f7420696e2077686974656c6973742e0000000000000000000000000000006044820152606401610d81565b600089815261026660209081526040808320600886901c8452909152902054600160ff84161b161561194b5760405162461bcd60e51b815260206004820152600e60248201527f70726f6f6620636c61696d65642e0000000000000000000000000000000000006044820152606401610d81565b8315806119585750838711155b6119a45760405162461bcd60e51b815260206004820152601760248201527f696e76616c6964207175616e746974792070726f6f662e0000000000000000006044820152606401610d81565b50965096945050505050565b60008681526102646020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b0390811660e08301819052908516148015611a3b57508060c0015183145b611a935760405162461bcd60e51b8152602060048201526024808201527f696e76616c69642063757272656e6379206f722070726963652073706563696660448201526334b2b21760e11b6064820152608401610d81565b600085118015611aaf5750811580611aaf575080606001518511155b611afb5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964207175616e7469747920636c61696d65642e000000000000006044820152606401610d81565b8060200151858260400151611b10919061536f565b1115611b5e5760405162461bcd60e51b815260206004820152601760248201527f657863656564206d6178206d696e7420737570706c792e0000000000000000006044820152606401610d81565b610261541580611b8557506102615485611b786101615490565b611b82919061536f565b11155b611bd15760405162461bcd60e51b815260206004820152601860248201527f657863656564206d617820746f74616c20737570706c792e00000000000000006044820152606401610d81565b610260541580611c085750610260546001600160a01b03871660009081526102676020526040902054611c0590879061536f565b11155b611c545760405162461bcd60e51b815260206004820152601d60248201527f65786365656420636c61696d206c696d697420666f722077616c6c65740000006044820152606401610d81565b600080611c618989611442565b915091508160001480611c745750804210155b611cc05760405162461bcd60e51b815260206004820152601160248201527f63616e6e6f7420636c61696d207965742e0000000000000000000000000000006044820152606401610d81565b505050505050505050565b83421115611d1b5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610d81565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090611d9590611d8d9060a0016040516020818303038152906040528051906020012061320f565b85858561325d565b9050611da081613285565b8614611dee5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610d81565b611df88188612c88565b50505050505050565b61026354610262546000918291611e18919061536f565b90505b61026254811115611e71576102646000611e36600184615387565b8152602001908152602001600020600001544210611e5f57611e59600182615387565b91505090565b80611e6981615416565b915050611e1b565b5060405162461bcd60e51b815260206004820152601960248201527f6e6f20616374697665206d696e7420636f6e646974696f6e2e000000000000006044820152606401610d81565b600081815261012d60205260408120610c65906132ae565b83421115611f225760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610d81565b60006101f854888888611f348c613285565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000611f8f8261320f565b90506000611f9f8287878761325d565b9050896001600160a01b0316816001600160a01b0316146120025760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610d81565b61200d8a8a8a6126bc565b50505050505050505050565b600082815260fb602052604090206001015461203781610d2e6126b2565b610e668383612b9e565b600054610100900460ff1661205c5760005460ff1615612060565b303b155b6120d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610d81565b600054610100900460ff161580156120f4576000805461ffff19166101011790555b6120fd856132b8565b6121068861338b565b6121108888613422565b85516121249061025c906020890190614a43565b5061025f80546001600160a01b038087166001600160a01b03199283161790925561025e80549286169290911691909117905561025d80546fffffffffffffffffffffffffffffffff84166fffffffffffffffffffffffffffffffff1990911617905561219260008a6134b6565b6121bc7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c8a6134b6565b6121e77f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c60006134b6565b8015611cc0576000805461ff0019169055505050505050505050565b600061221181610d2e6126b2565b610262546102635481841561222d5761222a828461536f565b90505b6102638690556102628190556000805b8781101561240e5780158061226d575088888281811061225f5761225f61539e565b905061010002016000013582105b6122df5760405162461bcd60e51b815260206004820152602a60248201527f737461727454696d657374616d70206d75737420626520696e20617363656e6460448201527f696e67206f726465722e000000000000000000000000000000000000000000006064820152608401610d81565b6000610264816122ef848761536f565b81526020019081526020016000206002015490508989838181106123155761231561539e565b905061010002016020013581111561236f5760405162461bcd60e51b815260206004820152601a60248201527f6d617820737570706c7920636c61696d656420616c72656164790000000000006044820152606401610d81565b8989838181106123815761238161539e565b61010002919091019050610264600061239a858861536f565b815260200190815260200160002081816123b4919061542d565b5081905061026460006123c7858861536f565b81526020810191909152604001600020600201558989838181106123ed576123ed61539e565b90506101000201600001359250508080612406906153fb565b91505061223d565b50851561248e57835b8281101561248857600081815261026460209081526040822082815560018101839055600281018390556003810183905560048101839055600581018390556006810192909255600790910180546001600160a01b0319169055610266905280612480816153fb565b915050612417565b50612527565b8683111561252757865b838110156125255761026460006124af838661536f565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810182905560070180546001600160a01b03191690556102669061250d838661536f565b8152602001528061251d816153fb565b915050612498565b505b7f22ddd1bcb3816651679299dbffccb94973edec10c32e88dc2f4735c7699a02ca888860405161255892919061549e565b60405180910390a15050505050505050565b61025c805461257890615324565b80601f01602080910402602001604051908101604052809291908181526020018280546125a490615324565b80156125f15780601f106125c6576101008083540402835291602001916125f1565b820191906000526020600020905b8154815290600101906020018083116125d457829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b038316600090815261022b60205260409020805463ffffffff841690811061263e5761263e61539e565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b03163b151590565b60006001600160e01b03198216635a05180f60e01b1480610c655750610c65826134c0565b6000610e756134f5565b6001600160a01b03831661271e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610d81565b6001600160a01b03821661277f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610d81565b6001600160a01b038381166000818152610160602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff16610f125761281f816001600160a01b0316601461351f565b61282a83602061351f565b60405160200161283b929190615535565b60408051601f198184030181529082905262461bcd60e51b8252610d8191600401614b4e565b6001600160a01b0383811660009081526101606020908152604080832093861683529290522054600019811461151d57818110156128e15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610d81565b61151d84848484036126bc565b6001600160a01b03831661296a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610d81565b6001600160a01b0382166129cc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610d81565b6129d78383836136c8565b6001600160a01b038316600090815261015f602052604090205481811015612a675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610d81565b6001600160a01b03808516600090815261015f6020526040808220858503905591851681529081208054849290612a9f90849061536f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612aeb91815260200190565b60405180910390a361151d84848461380c565b612b088282613817565b600082815261012d60205260409020610e6690826138ba565b6000610e757f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612b516101c35490565b6101c4546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b612ba882826138cf565b600082815261012d60205260409020610e669082613970565b8154600090815b81811015612c25576000612bdc8284613985565b905084868281548110612bf157612bf161539e565b60009182526020909120015463ffffffff161115612c1157809250612c1f565b612c1c81600161536f565b91505b50612bc8565b8115612c695784612c37600184615387565b81548110612c4757612c4761539e565b60009182526020909120015464010000000090046001600160e01b0316612c6c565b60005b6001600160e01b031695945050505050565b610f1282826139a0565b6001600160a01b03828116600081815261022a60208181526040808420805461015f845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461151d8284836139b9565b600063ffffffff821115612d805760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610d81565b5090565b80612d8e57505050565b6000670de0b6b3a7640000612da383866155b6565b612dad91906155d5565b61025d5490915060009061271090612dd7906fffffffffffffffffffffffffffffffff16846155b6565b612de191906155d5565b60405163085b49ad60e41b815230600482015260006024820181905291925081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906385b49ad0906044016040805180830381865afa158015612e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e7691906155f7565b90925090506000612710612e8a83876155b6565b612e9491906155d5565b90506001600160a01b03871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612f0a57843414612f0a5760405162461bcd60e51b815260206004820152601660248201527f6d7573742073656e6420746f74616c2070726963652e000000000000000000006044820152606401610d81565b612f2987612f166126b2565b61025e546001600160a01b031687613af8565b612f3c87612f356126b2565b8584613af8565b612f6f87612f486126b2565b61025f546001600160a01b031684612f60898b615387565b612f6a9190615387565b613af8565b5050505050505050565b6000828152610264602052604081206002018054839290612f9b90849061536f565b90915550506000828152610265602052604081204291612fb96126b2565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550806102676000612feb6126b2565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461301a919061536f565b90915550610e6690508382613b42565b6000610e378383613b4c565b60606001600160a01b0383163b6130b55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610d81565b600080846001600160a01b0316846040516130d09190615625565b600060405180830381855af49150503d806000811461310b576040519150601f19603f3d011682016040523d82523d6000602084013e613110565b606091505b5091509150613138828260405180606001604052806027815260200161568b60279139613b76565b95945050505050565b6000808281805b87518110156132035761315c6002836155b6565b915060008882815181106131725761317261539e565b602002602001015190508084116131b45760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506131f0565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836131ed919061536f565b92505b50806131fb816153fb565b915050613148565b50941495939450505050565b6000610c6561321c612b21565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061326e87878787613baf565b9150915061327b81613c9c565b5095945050505050565b6001600160a01b03811660009081526101f7602052604090208054600181018255905b50919050565b6000610c65825490565b600054610100900460ff166133235760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610d81565b60005b8151811015610f12576001606560008484815181106133475761334761539e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580613383816153fb565b915050613326565b600054610100900460ff166133f65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610d81565b61341981604051806040016040528060018152602001603160f81b815250613e57565b61111581613ede565b600054610100900460ff1661348d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610d81565b81516134a190610162906020850190614a43565b508051610e6690610163906020840190614a43565b610f128282612afe565b60006001600160e01b03198216637965db0b60e01b1480610c6557506301ffc9a760e01b6001600160e01b0319831614610c65565b3360009081526065602052604081205460ff161561351a575060131936013560601c90565b503390565b6060600061352e8360026155b6565b61353990600261536f565b67ffffffffffffffff81111561355157613551615049565b6040519080825280601f01601f19166020018201604052801561357b576020820181803683370190505b509050600360fc1b816000815181106135965761359661539e565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106135c5576135c561539e565b60200101906001600160f81b031916908160001a90535060006135e98460026155b6565b6135f490600161536f565b90505b6001811115613679577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106136355761363561539e565b1a60f81b82828151811061364b5761364b61539e565b60200101906001600160f81b031916908160001a90535060049490941c9361367281615416565b90506135f7565b508315610e375760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d81565b600080527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a13126020527f70e64e82d0337f3fa9071fdb3266f859725ed1fc29697b2e6e986b76cffbfb085460ff1615801561372a57506001600160a01b03831615155b801561373e57506001600160a01b03821615155b15610e66576001600160a01b03831660009081527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a1312602052604090205460ff16806137c057506001600160a01b03821660009081527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a1312602052604090205460ff165b610e665760405162461bcd60e51b815260206004820152601560248201527f7472616e736665727320726573747269637465642e00000000000000000000006044820152606401610d81565b610e66838383613f71565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff16610f1257600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191660011790556138766126b2565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610e37836001600160a01b038416613fa4565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1615610f1257600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff1916905561392c6126b2565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610e37836001600160a01b038416613ff3565b600061399460028484186155d5565b610e379084841661536f565b6139aa82826140e6565b61151d61022c61424a83614256565b816001600160a01b0316836001600160a01b0316141580156139db5750600081115b15610e66576001600160a01b03831615613a6a576001600160a01b038316600090815261022b602052604081208190613a179061424a85614256565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051613a5f929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610e66576001600160a01b038216600090815261022b602052604081208190613aa1906143cf85614256565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051613ae9929190918252602082015260400190565b60405180910390a25050505050565b80613b025761151d565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613b3657613b3182826143db565b61151d565b61151d8484848461447e565b610f1282826144d7565b6000826000018281548110613b6357613b6361539e565b9060005260206000200154905092915050565b60608315613b85575081610e37565b825115613b955782518084602001fd5b8160405162461bcd60e51b8152600401610d819190614b4e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115613be65750600090506003613c93565b8460ff16601b14158015613bfe57508460ff16601c14155b15613c0f5750600090506004613c93565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613c63573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116613c8c57600060019250925050613c93565b9150600090505b94509492505050565b6000816004811115613cb057613cb0615641565b1415613cb95750565b6001816004811115613ccd57613ccd615641565b1415613d1b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610d81565b6002816004811115613d2f57613d2f615641565b1415613d7d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610d81565b6003816004811115613d9157613d91615641565b1415613dea5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610d81565b6004816004811115613dfe57613dfe615641565b14156111155760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610d81565b600054610100900460ff16613ec25760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610d81565b8151602092830120815191909201206101c3919091556101c455565b600054610100900460ff16613f495760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610d81565b507f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c96101f855565b6001600160a01b03838116600090815261022a6020526040808220548584168352912054610e66929182169116836139b9565b6000818152600183016020526040812054613feb57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610c65565b506000610c65565b600081815260018301602052604081205480156140dc576000614017600183615387565b855490915060009061402b90600190615387565b905081811461409057600086600001828154811061404b5761404b61539e565b906000526020600020015490508087600001848154811061406e5761406e61539e565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806140a1576140a1615657565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610c65565b6000915050610c65565b6001600160a01b0382166141465760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610d81565b614152826000836136c8565b6001600160a01b038216600090815261015f6020526040902054818110156141c75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610d81565b6001600160a01b038316600090815261015f60205260408120838303905561016180548492906141f8908490615387565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610e668360008461380c565b6000610e378284615387565b8254600090819080156142a1578561426f600183615387565b8154811061427f5761427f61539e565b60009182526020909120015464010000000090046001600160e01b03166142a4565b60005b6001600160e01b031692506142bd83858763ffffffff16565b91506000811180156142fb575043866142d7600184615387565b815481106142e7576142e761539e565b60009182526020909120015463ffffffff16145b1561435b5761430982614570565b86614315600184615387565b815481106143255761432561539e565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506143c6565b85604051806040016040528061437043612d04565b63ffffffff16815260200161438485614570565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b6000610e37828461536f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114614428576040519150601f19603f3d011682016040523d82523d6000602084013e61442d565b606091505b5050905080610e665760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610d81565b816001600160a01b0316836001600160a01b0316141561449d5761151d565b6001600160a01b0383163014156144c257613b316001600160a01b03851683836145ef565b61151d6001600160a01b038516848484614652565b6144e1828261468a565b610161546001600160e01b0310156145615760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152608401610d81565b61151d61022c6143cf83614256565b60006001600160e01b03821115612d805760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610d81565b6040516001600160a01b038316602482015260448101829052610e6690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261477f565b6040516001600160a01b038085166024830152831660448201526064810182905261151d9085906323b872dd60e01b9060840161461b565b6001600160a01b0382166146e05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610d81565b6146ec600083836136c8565b8061016160008282546146ff919061536f565b90915550506001600160a01b038216600090815261015f60205260408120805483929061472d90849061536f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610f126000838361380c565b60006147d4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166148649092919063ffffffff16565b805190915015610e6657808060200190518101906147f2919061566d565b610e665760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610d81565b6060614873848460008561487b565b949350505050565b6060824710156148f35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610d81565b6001600160a01b0385163b61494a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d81565b600080866001600160a01b031685876040516149669190615625565b60006040518083038185875af1925050503d80600081146149a3576040519150601f19603f3d011682016040523d82523d6000602084013e6149a8565b606091505b50915091506149b8828286613b76565b979650505050505050565b8280546149cf90615324565b90600052602060002090601f0160209004810192826149f15760008555614a37565b82601f10614a0a5782800160ff19823516178555614a37565b82800160010185558215614a37579182015b82811115614a37578235825591602001919060010190614a1c565b50612d80929150614ab7565b828054614a4f90615324565b90600052602060002090601f016020900481019282614a715760008555614a37565b82601f10614a8a57805160ff1916838001178555614a37565b82800160010185558215614a37579182015b82811115614a37578251825591602001919060010190614a9c565b5b80821115612d805760008155600101614ab8565b600060208284031215614ade57600080fd5b81356001600160e01b031981168114610e3757600080fd5b60005b83811015614b11578181015183820152602001614af9565b8381111561151d5750506000910152565b60008151808452614b3a816020860160208601614af6565b601f01601f19169290920160200192915050565b602081526000610e376020830184614b22565b6001600160a01b038116811461111557600080fd5b8035614b8181614b61565b919050565b60008060408385031215614b9957600080fd5b8235614ba481614b61565b946020939093013593505050565b600080600060608486031215614bc757600080fd5b8335614bd281614b61565b92506020840135614be281614b61565b929592945050506040919091013590565b600060208284031215614c0557600080fd5b5035919050565b60008060408385031215614c1f57600080fd5b823591506020830135614c3181614b61565b809150509250929050565b600060208284031215614c4e57600080fd5b8135610e3781614b61565b60008083601f840112614c6b57600080fd5b50813567ffffffffffffffff811115614c8357600080fd5b6020830191508360208260051b850101111561148557600080fd5b600080600080600080600060c0888a031215614cb957600080fd5b8735614cc481614b61565b9650602088013595506040880135614cdb81614b61565b945060608801359350608088013567ffffffffffffffff811115614cfe57600080fd5b614d0a8a828b01614c59565b989b979a5095989497959660a090950135949350505050565b60008060408385031215614d3657600080fd5b50508035926020909101359150565b60008060208385031215614d5857600080fd5b823567ffffffffffffffff80821115614d7057600080fd5b818501915085601f830112614d8457600080fd5b813581811115614d9357600080fd5b866020828501011115614da557600080fd5b60209290920196919550909350505050565b60008060208385031215614dca57600080fd5b823567ffffffffffffffff811115614de157600080fd5b614ded85828601614c59565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614e4e57603f19888603018452614e3c858351614b22565b94509285019290850190600101614e20565b5092979650505050505050565b60008060008060008060a08789031215614e7457600080fd5b863595506020870135614e8681614b61565b945060408701359350606087013567ffffffffffffffff811115614ea957600080fd5b614eb589828a01614c59565b979a9699509497949695608090950135949350505050565b801515811461111557600080fd5b60008060008060008060c08789031215614ef457600080fd5b863595506020870135614f0681614b61565b9450604087013593506060870135614f1d81614b61565b92506080870135915060a0870135614f3481614ecd565b809150509295509295509295565b803560ff81168114614b8157600080fd5b60008060008060008060c08789031215614f6c57600080fd5b8635614f7781614b61565b95506020870135945060408701359350614f9360608801614f42565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215614fc857600080fd5b8735614fd381614b61565b96506020880135614fe381614b61565b95506040880135945060608801359350614fff60808901614f42565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561502e57600080fd5b823561503981614b61565b91506020830135614c3181614b61565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561508857615088615049565b604052919050565b600082601f8301126150a157600080fd5b813567ffffffffffffffff8111156150bb576150bb615049565b6150ce601f8201601f191660200161505f565b8181528460208386010111156150e357600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261511157600080fd5b8135602067ffffffffffffffff82111561512d5761512d615049565b8160051b61513c82820161505f565b928352848101820192828101908785111561515657600080fd5b83870192505b848310156149b857823561516f81614b61565b8252918301919083019061515c565b600080600080600080600080610100898b03121561519b57600080fd5b6151a489614b76565b9750602089013567ffffffffffffffff808211156151c157600080fd5b6151cd8c838d01615090565b985060408b01359150808211156151e357600080fd5b6151ef8c838d01615090565b975060608b013591508082111561520557600080fd5b6152118c838d01615090565b965060808b013591508082111561522757600080fd5b506152348b828c01615100565b94505061524360a08a01614b76565b925061525160c08a01614b76565b915060e089013590509295985092959890939650565b60008060006040848603121561527c57600080fd5b833567ffffffffffffffff8082111561529457600080fd5b818601915086601f8301126152a857600080fd5b8135818111156152b757600080fd5b8760208260081b85010111156152cc57600080fd5b602092830195509350508401356152e281614ecd565b809150509250925092565b6000806040838503121561530057600080fd5b823561530b81614b61565b9150602083013563ffffffff81168114614c3157600080fd5b600181811c9082168061533857607f821691505b602082108114156132a857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561538257615382615359565b500190565b60008282101561539957615399615359565b500390565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126153cb57600080fd5b83018035915067ffffffffffffffff8211156153e657600080fd5b60200191503681900382131561148557600080fd5b600060001982141561540f5761540f615359565b5060010190565b60008161542557615425615359565b506000190190565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c082013560068201556007810160e083013561547f81614b61565b6001600160a01b0381166001600160a01b031983541617825550505050565b6020808252818101839052600090604080840186845b87811015615528578135835284820135858401528382013584840152606080830135908401526080808301359084015260a0808301359084015260c0808301359084015260e08083013561550781614b61565b6001600160a01b0316908401526101009283019291909101906001016154b4565b5090979650505050505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161556d816017850160208801614af6565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516155aa816028840160208801614af6565b01602801949350505050565b60008160001904831182151516156155d0576155d0615359565b500290565b6000826155f257634e487b7160e01b600052601260045260246000fd5b500490565b6000806040838503121561560a57600080fd5b825161561581614b61565b6020939093015192949293505050565b60008251615637818460208701614af6565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006020828403121561567f57600080fd5b8151610e3781614ecd56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a\";\n\ntype DropERC20ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: DropERC20ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class DropERC20__factory extends ContractFactory {\n  constructor(...args: DropERC20ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"DropERC20\";\n  }\n\n  deploy(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<DropERC20> {\n    return super.deploy(_thirdwebFee, overrides || {}) as Promise<DropERC20>;\n  }\n  getDeployTransaction(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_thirdwebFee, overrides || {});\n  }\n  attach(address: string): DropERC20 {\n    return super.attach(address) as DropERC20;\n  }\n  connect(signer: Signer): DropERC20__factory {\n    return super.connect(signer) as DropERC20__factory;\n  }\n  static readonly contractName: \"DropERC20\";\n  public readonly contractName: \"DropERC20\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): DropERC20Interface {\n    return new utils.Interface(_abi) as DropERC20Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): DropERC20 {\n    return new Contract(address, _abi, signerOrProvider) as DropERC20;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { DropERC721, DropERC721Interface } from \"../DropERC721\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_thirdwebFee\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"claimConditions\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"ClaimConditionsUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"maxTotalSupply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxTotalSupplyUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxWalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"revealedURI\",\n        type: \"string\",\n      },\n    ],\n    name: \"NFTRevealed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"claimConditionIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"claimer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityClaimed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensClaimed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"baseURI\",\n        type: \"string\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"encryptedBaseURI\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"TokensLazyMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"baseURIIndices\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"_proofs\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_proofMaxQuantityPerTransaction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claim\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"claimCondition\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"currentStartId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"key\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"encryptDecrypt\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"result\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"encryptedBaseURI\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getActiveClaimConditionId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBaseURICount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getClaimConditionById\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IDropClaimCondition.ClaimCondition\",\n        name: \"condition\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n    ],\n    name: \"getClaimTimestamp\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"lastClaimTimestamp\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nextValidClaimTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_royaltyBps\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_platformFeeBps\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_baseURIForTokens\",\n        type: \"string\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_encryptedBaseURI\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"lazyMint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxTotalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"maxWalletClaimCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"nextTokenIdToClaim\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"nextTokenIdToMint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_key\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"reveal\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"revealedURI\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"_phases\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_resetClaimEligibility\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setClaimConditions\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_maxTotalSupply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxTotalSupply\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setMaxWalletClaimCount\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setWalletClaimCount\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"thirdwebFee\",\n    outputs: [\n      {\n        internalType: \"contract ITWFee\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"verifyMaxQuantityPerTransaction\",\n        type: \"bool\",\n      },\n    ],\n    name: \"verifyClaim\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_conditionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_claimer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"_proofs\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_proofMaxQuantityPerTransaction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifyClaimMerkleProof\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"validMerkleProof\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"merkleProofIndex\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"walletClaimCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n\ntype DropERC721ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: DropERC721ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class DropERC721__factory extends ContractFactory {\n  constructor(...args: DropERC721ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"DropERC721\";\n  }\n\n  deploy(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<DropERC721> {\n    return super.deploy(_thirdwebFee, overrides || {}) as Promise<DropERC721>;\n  }\n  getDeployTransaction(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_thirdwebFee, overrides || {});\n  }\n  attach(address: string): DropERC721 {\n    return super.attach(address) as DropERC721;\n  }\n  connect(signer: Signer): DropERC721__factory {\n    return super.connect(signer) as DropERC721__factory;\n  }\n  static readonly contractName: \"DropERC721\";\n  public readonly contractName: \"DropERC721\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): DropERC721Interface {\n    return new utils.Interface(_abi) as DropERC721Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): DropERC721 {\n    return new Contract(address, _abi, signerOrProvider) as DropERC721;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Forwarder, ForwarderInterface } from \"../Forwarder\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"from\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"gas\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"data\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct MinimalForwarder.ForwardRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n    ],\n    name: \"getNonce\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"from\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"gas\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"data\",\n            type: \"bytes\",\n          },\n        ],\n        internalType: \"struct MinimalForwarder.ForwardRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"verify\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x61014060405234801561001157600080fd5b50604080518082018252601081526f26b4b734b6b0b62337b93bb0b93232b960811b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100fb8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061011092505050565b60805160a05160c05160e0516101005161012051610b4061015f60003960006104f701526000610546015260006105210152600061047a015260006104a4015260006104ce0152610b406000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f610054366004610901565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b610095610090366004610931565b6100d3565b604051610079929190610a00565b3480156100af57600080fd5b506100c36100be366004610931565b610277565b6040519015158152602001610079565b600060606100e2858585610277565b6101595760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d617463682072657175657374000000000000000000000000000060648201526084015b60405180910390fd5b61016860808601356001610a3c565b6000806101786020890189610901565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101b29190610901565b6001600160a01b0316606088013560408901356101d260a08b018b610a62565b6101df60208d018d610901565b6040516020016101f193929190610aa9565b60408051601f198184030181529082905261020b91610acf565b600060405180830381858888f193505050503d8060008114610249576040519150601f19603f3d011682016040523d82523d6000602084013e61024e565b606091505b509092509050610263603f6060890135610aeb565b5a1161026b57fe5b90969095509350505050565b60008061038a84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061038492507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102e7905060208a018a610901565b6102f760408b0160208c01610901565b60408b013560608c013560808d013561031360a08f018f610a62565b604051610321929190610b0d565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103f5565b90610449565b905060808501356000806103a16020890189610901565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103ec57506103d76020860186610901565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061044361040261046d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006104588585610594565b9150915061046581610604565b509392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156104c657507f000000000000000000000000000000000000000000000000000000000000000046145b156104f057507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156105cb5760208301516040840151606085015160001a6105bf878285856107c2565b945094505050506105fd565b8251604014156105f557602083015160408401516105ea8683836108af565b9350935050506105fd565b506000905060025b9250929050565b600081600481111561061857610618610b1d565b14156106215750565b600181600481111561063557610635610b1d565b14156106835760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610150565b600281600481111561069757610697610b1d565b14156106e55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610150565b60038160048111156106f9576106f9610b1d565b14156107525760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610150565b600481600481111561076657610766610b1d565b14156107bf5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610150565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107f957506000905060036108a6565b8460ff16601b1415801561081157508460ff16601c14155b1561082257506000905060046108a6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610876573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661089f576000600192509250506108a6565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816108e560ff86901c601b610a3c565b90506108f3878288856107c2565b935093505050935093915050565b60006020828403121561091357600080fd5b81356001600160a01b038116811461092a57600080fd5b9392505050565b60008060006040848603121561094657600080fd5b833567ffffffffffffffff8082111561095e57600080fd5b9085019060c0828803121561097257600080fd5b9093506020850135908082111561098857600080fd5b818601915086601f83011261099c57600080fd5b8135818111156109ab57600080fd5b8760208285010111156109bd57600080fd5b6020830194508093505050509250925092565b60005b838110156109eb5781810151838201526020016109d3565b838111156109fa576000848401525b50505050565b82151581526040602082015260008251806040840152610a278160608501602087016109d0565b601f01601f1916919091016060019392505050565b60008219821115610a5d57634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e19843603018112610a7957600080fd5b83018035915067ffffffffffffffff821115610a9457600080fd5b6020019150368190038213156105fd57600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610ae18184602087016109d0565b9190910192915050565b600082610b0857634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea164736f6c634300080c000a\";\n\ntype ForwarderConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ForwarderConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Forwarder__factory extends ContractFactory {\n  constructor(...args: ForwarderConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Forwarder\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Forwarder> {\n    return super.deploy(overrides || {}) as Promise<Forwarder>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Forwarder {\n    return super.attach(address) as Forwarder;\n  }\n  connect(signer: Signer): Forwarder__factory {\n    return super.connect(signer) as Forwarder__factory;\n  }\n  static readonly contractName: \"Forwarder\";\n  public readonly contractName: \"Forwarder\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ForwarderInterface {\n    return new utils.Interface(_abi) as ForwarderInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Forwarder {\n    return new Contract(address, _abi, signerOrProvider) as Forwarder;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IDropERC1155, IDropERC1155Interface } from \"../IDropERC1155\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"claimConditions\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"ClaimConditionsUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"maxTotalSupply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxTotalSupplyUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxWalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"claimConditionIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"claimer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityClaimed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensClaimed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"baseURI\",\n        type: \"string\",\n      },\n    ],\n    name: \"TokensLazyMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"proofs\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"proofMaxQuantityPerTransaction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claim\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"baseURIForTokens\",\n        type: \"string\",\n      },\n    ],\n    name: \"lazyMint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"phases\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"resetClaimEligibility\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setClaimConditions\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IDropERC1155__factory {\n  static readonly abi = _abi;\n  static createInterface(): IDropERC1155Interface {\n    return new utils.Interface(_abi) as IDropERC1155Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IDropERC1155 {\n    return new Contract(address, _abi, signerOrProvider) as IDropERC1155;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IDropERC20, IDropERC20Interface } from \"../IDropERC20\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"claimConditions\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"ClaimConditionsUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"maxTotalSupply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxTotalSupplyUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxWalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"claimConditionIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"claimer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityClaimed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensClaimed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"proofs\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"proofMaxQuantityPerTransaction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claim\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"phases\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"resetClaimEligibility\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setClaimConditions\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IDropERC20__factory {\n  static readonly abi = _abi;\n  static createInterface(): IDropERC20Interface {\n    return new utils.Interface(_abi) as IDropERC20Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IDropERC20 {\n    return new Contract(address, _abi, signerOrProvider) as IDropERC20;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IDropERC721, IDropERC721Interface } from \"../IDropERC721\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"claimConditions\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"ClaimConditionsUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"maxTotalSupply\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxTotalSupplyUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxWalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"revealedURI\",\n        type: \"string\",\n      },\n    ],\n    name: \"NFTRevealed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"claimConditionIndex\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"claimer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityClaimed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensClaimed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endTokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"baseURI\",\n        type: \"string\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"encryptedBaseURI\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"TokensLazyMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"count\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"WalletClaimCountUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"proofs\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"proofMaxQuantityPerTransaction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claim\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"baseURIForTokens\",\n        type: \"string\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"encryptedBaseURI\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"lazyMint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"startTimestamp\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"maxClaimableSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"supplyClaimed\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityLimitPerTransaction\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"waitTimeInSecondsBetweenClaims\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"merkleRoot\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IDropClaimCondition.ClaimCondition[]\",\n        name: \"phases\",\n        type: \"tuple[]\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"resetClaimEligibility\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setClaimConditions\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IDropERC721__factory {\n  static readonly abi = _abi;\n  static createInterface(): IDropERC721Interface {\n    return new utils.Interface(_abi) as IDropERC721Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IDropERC721 {\n    return new Contract(address, _abi, signerOrProvider) as IDropERC721;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IMultiwrap, IMultiwrapInterface } from \"../IMultiwrap\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wrapper\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"sentTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdOfShares\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"sharesUnwrapped\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc721AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc721TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc20AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"erc20AmountsToWrap\",\n            type: \"uint256[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct MultiTokenTransferLib.MultiToken\",\n        name: \"wrappedContents\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensUnwrapped\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wrapper\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdOfShares\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc721AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc721TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc20AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"erc20AmountsToWrap\",\n            type: \"uint256[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct MultiTokenTransferLib.MultiToken\",\n        name: \"wrappedContents\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensWrapped\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountToRedeem\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_sendTo\",\n        type: \"address\",\n      },\n    ],\n    name: \"unwrap\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc721AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc721TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc20AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"erc20AmountsToWrap\",\n            type: \"uint256[]\",\n          },\n        ],\n        internalType: \"struct MultiTokenTransferLib.MultiToken\",\n        name: \"wrappedContents\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"shares\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"uriForShares\",\n        type: \"string\",\n      },\n    ],\n    name: \"wrap\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nexport class IMultiwrap__factory {\n  static readonly abi = _abi;\n  static createInterface(): IMultiwrapInterface {\n    return new utils.Interface(_abi) as IMultiwrapInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IMultiwrap {\n    return new Contract(address, _abi, signerOrProvider) as IMultiwrap;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IPack, IPackInterface } from \"../IPack\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n        ],\n        internalType: \"struct IPack.PackContents\",\n        name: \"contents\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"string\",\n        name: \"uri\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"openStartTimestamp\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"nftsPerOpen\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"createPack\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"packId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountToOpen\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"openPack\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IPack__factory {\n  static readonly abi = _abi;\n  static createInterface(): IPackInterface {\n    return new utils.Interface(_abi) as IPackInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): IPack {\n    return new Contract(address, _abi, signerOrProvider) as IPack;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IThirdwebContract,\n  IThirdwebContractInterface,\n} from \"../IThirdwebContract\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IThirdwebContract__factory {\n  static readonly abi = _abi;\n  static createInterface(): IThirdwebContractInterface {\n    return new utils.Interface(_abi) as IThirdwebContractInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IThirdwebContract {\n    return new Contract(address, _abi, signerOrProvider) as IThirdwebContract;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IThirdwebOwnable,\n  IThirdwebOwnableInterface,\n} from \"../IThirdwebOwnable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IThirdwebOwnable__factory {\n  static readonly abi = _abi;\n  static createInterface(): IThirdwebOwnableInterface {\n    return new utils.Interface(_abi) as IThirdwebOwnableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IThirdwebOwnable {\n    return new Contract(address, _abi, signerOrProvider) as IThirdwebOwnable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IThirdwebPlatformFee,\n  IThirdwebPlatformFeeInterface,\n} from \"../IThirdwebPlatformFee\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IThirdwebPlatformFee__factory {\n  static readonly abi = _abi;\n  static createInterface(): IThirdwebPlatformFeeInterface {\n    return new utils.Interface(_abi) as IThirdwebPlatformFeeInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IThirdwebPlatformFee {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IThirdwebPlatformFee;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IThirdwebPrimarySale,\n  IThirdwebPrimarySaleInterface,\n} from \"../IThirdwebPrimarySale\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IThirdwebPrimarySale__factory {\n  static readonly abi = _abi;\n  static createInterface(): IThirdwebPrimarySaleInterface {\n    return new utils.Interface(_abi) as IThirdwebPrimarySaleInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IThirdwebPrimarySale {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IThirdwebPrimarySale;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IThirdwebRoyalty,\n  IThirdwebRoyaltyInterface,\n} from \"../IThirdwebRoyalty\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IThirdwebRoyalty__factory {\n  static readonly abi = _abi;\n  static createInterface(): IThirdwebRoyaltyInterface {\n    return new utils.Interface(_abi) as IThirdwebRoyaltyInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IThirdwebRoyalty {\n    return new Contract(address, _abi, signerOrProvider) as IThirdwebRoyalty;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { ITWFee, ITWFeeInterface } from \"../ITWFee\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_proxy\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_type\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ITWFee__factory {\n  static readonly abi = _abi;\n  static createInterface(): ITWFeeInterface {\n    return new utils.Interface(_abi) as ITWFeeInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ITWFee {\n    return new Contract(address, _abi, signerOrProvider) as ITWFee;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IWETH, IWETHInterface } from \"../IWETH\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IWETH__factory {\n  static readonly abi = _abi;\n  static createInterface(): IWETHInterface {\n    return new utils.Interface(_abi) as IWETHInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): IWETH {\n    return new Contract(address, _abi, signerOrProvider) as IWETH;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { IMarketplace, IMarketplaceInterface } from \"../IMarketplace\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"timeBuffer\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"bidBufferBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AuctionBuffersUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"closer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"bool\",\n        name: \"cancelled\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"auctionCreator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"winningBidder\",\n        type: \"address\",\n      },\n    ],\n    name: \"AuctionClosed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"assetContract\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"lister\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"listingId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOwner\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"assetContract\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"reservePricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"buyoutPricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum IMarketplace.TokenType\",\n            name: \"tokenType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"enum IMarketplace.ListingType\",\n            name: \"listingType\",\n            type: \"uint8\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IMarketplace.Listing\",\n        name: \"listing\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"ListingAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"listingCreator\",\n        type: \"address\",\n      },\n    ],\n    name: \"ListingRemoved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"listingCreator\",\n        type: \"address\",\n      },\n    ],\n    name: \"ListingUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"offeror\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"enum IMarketplace.ListingType\",\n        name: \"listingType\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityWanted\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"totalOfferAmount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"currency\",\n        type: \"address\",\n      },\n    ],\n    name: \"NewOffer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"assetContract\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"lister\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"buyer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityBought\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"totalPricePaid\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"NewSale\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_offeror\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_totalPrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"acceptOffer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_buyFor\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_totalPrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"buy\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"cancelDirectListing\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_closeFor\",\n        type: \"address\",\n      },\n    ],\n    name: \"closeAuction\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"assetContract\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"secondsUntilEndTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityToList\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currencyToAccept\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"reservePricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"buyoutPricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum IMarketplace.ListingType\",\n            name: \"listingType\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct IMarketplace.ListingParameters\",\n        name: \"_params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"createListing\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantityWanted\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_expirationTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"offer\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantityToList\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_reservePricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_buyoutPricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currencyToAccept\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_startTime\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_secondsUntilEndTime\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"updateListing\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nexport class IMarketplace__factory {\n  static readonly abi = _abi;\n  static createInterface(): IMarketplaceInterface {\n    return new utils.Interface(_abi) as IMarketplaceInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IMarketplace {\n    return new Contract(address, _abi, signerOrProvider) as IMarketplace;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { ITokenERC1155, ITokenERC1155Interface } from \"../ITokenERC1155\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdMinted\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"uri\",\n        type: \"string\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityMinted\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdMinted\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct ITokenERC1155.MintRequest\",\n        name: \"mintRequest\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensMintedWithSignature\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"burnBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"uri\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mintTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC1155.MintRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mintWithSignature\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"supply\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC1155.MintRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"verify\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ITokenERC1155__factory {\n  static readonly abi = _abi;\n  static createInterface(): ITokenERC1155Interface {\n    return new utils.Interface(_abi) as ITokenERC1155Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ITokenERC1155 {\n    return new Contract(address, _abi, signerOrProvider) as ITokenERC1155;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { ITokenERC20, ITokenERC20Interface } from \"../ITokenERC20\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityMinted\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct ITokenERC20.MintRequest\",\n        name: \"mintRequest\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensMintedWithSignature\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burnFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mintTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC20.MintRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mintWithSignature\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC20.MintRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"verify\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ITokenERC20__factory {\n  static readonly abi = _abi;\n  static createInterface(): ITokenERC20Interface {\n    return new utils.Interface(_abi) as ITokenERC20Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ITokenERC20 {\n    return new Contract(address, _abi, signerOrProvider) as ITokenERC20;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type { ITokenERC721, ITokenERC721Interface } from \"../ITokenERC721\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdMinted\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"TokensMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdMinted\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct ITokenERC721.MintRequest\",\n        name: \"mintRequest\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensMintedWithSignature\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"mintTo\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC721.MintRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mintWithSignature\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC721.MintRequest\",\n        name: \"req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"verify\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ITokenERC721__factory {\n  static readonly abi = _abi;\n  static createInterface(): ITokenERC721Interface {\n    return new utils.Interface(_abi) as ITokenERC721Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ITokenERC721 {\n    return new Contract(address, _abi, signerOrProvider) as ITokenERC721;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  CurrencyTransferLib,\n  CurrencyTransferLibInterface,\n} from \"../CurrencyTransferLib\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"NATIVE_TOKEN\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6088610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806331f7d964146038575b600080fd5b605273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f3fea164736f6c634300080c000a\";\n\ntype CurrencyTransferLibConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: CurrencyTransferLibConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class CurrencyTransferLib__factory extends ContractFactory {\n  constructor(...args: CurrencyTransferLibConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"CurrencyTransferLib\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<CurrencyTransferLib> {\n    return super.deploy(overrides || {}) as Promise<CurrencyTransferLib>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): CurrencyTransferLib {\n    return super.attach(address) as CurrencyTransferLib;\n  }\n  connect(signer: Signer): CurrencyTransferLib__factory {\n    return super.connect(signer) as CurrencyTransferLib__factory;\n  }\n  static readonly contractName: \"CurrencyTransferLib\";\n  public readonly contractName: \"CurrencyTransferLib\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): CurrencyTransferLibInterface {\n    return new utils.Interface(_abi) as CurrencyTransferLibInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): CurrencyTransferLib {\n    return new Contract(address, _abi, signerOrProvider) as CurrencyTransferLib;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Marketplace, MarketplaceInterface } from \"../Marketplace\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_nativeTokenWrapper\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_thirdwebFee\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"timeBuffer\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"bidBufferBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AuctionBuffersUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"closer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"bool\",\n        name: \"cancelled\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"auctionCreator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"winningBidder\",\n        type: \"address\",\n      },\n    ],\n    name: \"AuctionClosed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"assetContract\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"lister\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"listingId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"tokenOwner\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"assetContract\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"reservePricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"buyoutPricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum IMarketplace.TokenType\",\n            name: \"tokenType\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"enum IMarketplace.ListingType\",\n            name: \"listingType\",\n            type: \"uint8\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IMarketplace.Listing\",\n        name: \"listing\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"ListingAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"listingCreator\",\n        type: \"address\",\n      },\n    ],\n    name: \"ListingRemoved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"listingCreator\",\n        type: \"address\",\n      },\n    ],\n    name: \"ListingUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"offeror\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"enum IMarketplace.ListingType\",\n        name: \"listingType\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityWanted\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"totalOfferAmount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"currency\",\n        type: \"address\",\n      },\n    ],\n    name: \"NewOffer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"assetContract\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"lister\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"buyer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityBought\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"totalPricePaid\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"NewSale\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_BPS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_offeror\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_pricePerToken\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"acceptOffer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"bidBufferBps\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_buyFor\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantityToBuy\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_totalPrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"buy\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"cancelDirectListing\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_closeFor\",\n        type: \"address\",\n      },\n    ],\n    name: \"closeAuction\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"assetContract\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"secondsUntilEndTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantityToList\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currencyToAccept\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"reservePricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"buyoutPricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"enum IMarketplace.ListingType\",\n            name: \"listingType\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct IMarketplace.ListingParameters\",\n        name: \"_params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"createListing\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"listings\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenOwner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"assetContract\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"startTime\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"endTime\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"quantity\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reservePricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"buyoutPricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum IMarketplace.TokenType\",\n        name: \"tokenType\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"enum IMarketplace.ListingType\",\n        name: \"listingType\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantityWanted\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_expirationTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"offer\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"offers\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"offeror\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"quantityWanted\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expirationTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155BatchReceived\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_timeBuffer\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_bidBufferBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setAuctionBuffers\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"thirdwebFee\",\n    outputs: [\n      {\n        internalType: \"contract ITWFee\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"timeBuffer\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalListings\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_quantityToList\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_reservePricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_buyoutPricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_currencyToAccept\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_startTime\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_secondsUntilEndTime\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"updateListing\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"winningBid\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"listingId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"offeror\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"quantityWanted\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"currency\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"pricePerToken\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expirationTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60c06040523480156200001157600080fd5b506040516200656f3803806200656f83398101604081905262000034916200015f565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b62000115565b620000c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000e6576000805461ffff19166101011790555b6001600160a01b0380831660a052831660805280156200010c576000805461ff00191690555b50505062000197565b60006200012d306200013360201b62002ac41760201c565b15905090565b6001600160a01b03163b151590565b80516001600160a01b03811681146200015a57600080fd5b919050565b600080604083850312156200017357600080fd5b6200017e8362000142565b91506200018e6020840162000142565b90509250929050565b60805160a05161639d620001d26000396000818161069e01526148e40152600081816114160152818161322a0152614a82015261639d6000f3fe60806040526004361061026e5760003560e01c8063a217fddf11610153578063d45573f6116100cb578063ea0e02411161007f578063ec91f2a411610064578063ec91f2a4146108ff578063f23a6e6114610921578063fd967f471461094d57600080fd5b8063ea0e024114610877578063ebdfbce51461089757600080fd5b8063d547741f116100b0578063d547741f1461078e578063de74e57b146107ae578063e8a3d4851461085557600080fd5b8063d45573f6146106c0578063d4ac9b8c146106f857600080fd5b8063c4b5b15f11610122578063ca15c87311610107578063ca15c87314610639578063cb2ef6f714610659578063cf8267b11461068c57600080fd5b8063c4b5b15f14610602578063c78b616c1461062257600080fd5b8063a217fddf14610574578063ac9650d814610589578063b13c0e63146105b6578063bc197c81146105d657600080fd5b80635fef45e7116101e65780638c8a84e2116101b557806391d148541161019a57806391d14854146104f2578063938e3d7b14610538578063a0a8e4601461055857600080fd5b80638c8a84e21461049a5780639010d07c146104ba57600080fd5b80635fef45e7146104345780636bab66ae146104475780637506c84a146104675780637687ab021461048757600080fd5b8063296f4e161161023d57806336568abe1161022257806336568abe146103945780634e03f28d146103b4578063572b6c05146103fb57600080fd5b8063296f4e16146103545780632f2ff15d1461037457600080fd5b806301ffc9a71461027a578063150b7a02146102af5780631e7ac488146102f4578063248a9ca31461031657600080fd5b3661027557005b600080fd5b34801561028657600080fd5b5061029a6102953660046154db565b610963565b60405190151581526020015b60405180910390f35b3480156102bb57600080fd5b506102db6102ca36600461556e565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016102a6565b34801561030057600080fd5b5061031461030f3660046155e1565b6109a9565b005b34801561032257600080fd5b5061034661033136600461560d565b600090815260fb602052604090206001015490565b6040519081526020016102a6565b34801561036057600080fd5b5061031461036f3660046156a6565b610a8d565b34801561038057600080fd5b5061031461038f366004615732565b610fac565b3480156103a057600080fd5b506103146103af366004615732565b610fd9565b3480156103c057600080fd5b50610162546103e29068010000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016102a6565b34801561040757600080fd5b5061029a610416366004615762565b6001600160a01b031660009081526065602052604090205460ff1690565b61031461044236600461577f565b611075565b34801561045357600080fd5b50610314610462366004615732565b611471565b34801561047357600080fd5b5061031461048236600461560d565b6117ef565b6103146104953660046157c8565b611a65565b3480156104a657600080fd5b506103146104b5366004615896565b611ca3565b3480156104c657600080fd5b506104da6104d536600461598e565b611e55565b6040516001600160a01b0390911681526020016102a6565b3480156104fe57600080fd5b5061029a61050d366004615732565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561054457600080fd5b506103146105533660046159b0565b611e75565b34801561056457600080fd5b50604051600281526020016102a6565b34801561058057600080fd5b50610346600081565b34801561059557600080fd5b506105a96105a43660046159f2565b611e96565b6040516102a69190615abf565b3480156105c257600080fd5b506103146105d1366004615b21565b611f8b565b3480156105e257600080fd5b506102db6105f1366004615bef565b63bc197c8160e01b95945050505050565b34801561060e57600080fd5b5061031461061d366004615c9d565b6123ff565b34801561062e57600080fd5b5061034661015f5481565b34801561064557600080fd5b5061034661065436600461560d565b612923565b34801561066557600080fd5b507f4d61726b6574706c616365000000000000000000000000000000000000000000610346565b34801561069857600080fd5b506104da7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106cc57600080fd5b5061016154604080516001600160a01b0383168152600160a01b90920461ffff166020830152016102a6565b34801561070457600080fd5b5061075561071336600461560d565b6101656020526000908152604090208054600182015460028301546003840154600485015460059095015493946001600160a01b039384169492939091169186565b604080519687526001600160a01b03958616602088015286019390935292166060840152608083019190915260a082015260c0016102a6565b34801561079a57600080fd5b506103146107a9366004615732565b61293b565b3480156107ba57600080fd5b5061083d6107c936600461560d565b61016360205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a909a015498996001600160a01b03988916999789169896979596949593949092169290919060ff808216916101009004168c565b6040516102a69c9b9a99989796959493929190615d3d565b34801561086157600080fd5b5061086a612963565b6040516102a69190615dc1565b34801561088357600080fd5b5061031461089236600461598e565b6129f2565b3480156108a357600080fd5b506107556108b2366004615732565b61016460209081526000928352604080842090915290825290208054600182015460028301546003840154600485015460059095015493946001600160a01b039384169492939091169186565b34801561090b57600080fd5b50610162546103e29067ffffffffffffffff1681565b34801561092d57600080fd5b506102db61093c366004615dd4565b63f23a6e6160e01b95945050505050565b34801561095957600080fd5b506103e261271081565b60006001600160e01b03198216630271189760e51b148061099457506001600160e01b03198216630a85bd0160e11b145b806109a357506109a382612ad3565b92915050565b60006109bc816109b7612af8565b612b07565b612710821115610a135760405162461bcd60e51b815260206004820152600d60248201527f627073203c3d2031303030302e0000000000000000000000000000000000000060448201526064015b60405180910390fd5b61016180546001600160e01b031916600160a01b67ffffffffffffffff8516026001600160a01b031916176001600160a01b03851690811790915560408051918252602082018490527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f1830491015b60405180910390a1505050565b61015f8054906001906000610aa28385615e53565b9091555060009050610ab2612af8565b90506000610ac38460000151612b87565b90506000610ad5828660800151612ccf565b905060008111610b125760405162461bcd60e51b81526020600482015260086024820152675155414e5449545960c01b6044820152606401610a0a565b600080527f0bf587d4e74e99cde8c6e4c054a5635772877ff68dbace54cfa272aabdba99186020527f2e5a8a6546a6579ddcdee1c230e851e90e02911b1edbb4e6bce29e62ce9ef8cf5460ff1680610b915750610b917ff94103142c1baabe9ac2b5d1487bf783de9e69cfeea9a72f5c9c94afd7877b8c61050d612af8565b610bdd5760405162461bcd60e51b815260206004820152600760248201527f214c4953544552000000000000000000000000000000000000000000000000006044820152606401610a0a565b600080527feecdd96d2384df3dcc3b798a06e1b5425b0048600906bcf4c21166279a6e5cdb6020527f4be4ab7155dfb840c7e9b0c93044a57446f8382ea3b9bde86d10b5704d906e775460ff1680610c6d575084516001600160a01b031660009081527feecdd96d2384df3dcc3b798a06e1b5425b0048600906bcf4c21166279a6e5cdb602052604090205460ff165b610cb95760405162461bcd60e51b815260206004820152600660248201527f21415353455400000000000000000000000000000000000000000000000000006044820152606401610a0a565b604085015142811015610d0857610e10610cd38242615e6b565b10610d055760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610a0a565b50425b610d1d84876000015188602001518587612d06565b6000604051806101800160405280878152602001866001600160a01b0316815260200188600001516001600160a01b0316815260200188602001518152602001838152602001886060015184610d739190615e53565b81526020018481526020018860a001516001600160a01b031681526020018860c0015181526020018860e001518152602001856001811115610db757610db7615cfc565b81526020018861010001516001811115610dd357610dd3615cfc565b9052600087815261016360209081526040918290208351815590830151600180830180546001600160a01b03199081166001600160a01b0394851617909155938501516002840180548616918416919091179055606085015160038401556080850151600484015560a0850151600584015560c0850151600684015560e085015160078401805490951692169190911790925561010083015160088201556101208301516009820155610140830151600a82018054949550859492939192909160ff19909116908381811115610eab57610eab615cfc565b0217905550610160820151600a8201805461ff001916610100836001811115610ed657610ed6615cfc565b021790555060019150610ee69050565b8161016001516001811115610efd57610efd615cfc565b1415610f53578061010001518161012001511015610f475760405162461bcd60e51b81526020600482015260076024820152665245534552564560c81b6044820152606401610a0a565b610f5385308584612ff8565b846001600160a01b031687600001516001600160a01b0316877f0c5bc74ccdf848b38eb526a154b85085e1d61addf1d100cba2074e039c0b634084604051610f9b9190615e82565b60405180910390a450505050505050565b600082815260fb6020526040902060010154610fca816109b7612af8565b610fd4838361314e565b505050565b610fe1612af8565b6001600160a01b0316816001600160a01b0316146110675760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610a0a565b6110718282613171565b5050565b600260015414156110c85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a0a565b60026001819055600086815261016360205260409020015485906001600160a01b031661111d5760405162461bcd60e51b8152602060048201526003602482015262444e4560e81b6044820152606401610a0a565b600086815261016360209081526040808320815161018081018352815481526001808301546001600160a01b039081169583019590955260028301548516938201939093526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015490931660e084015260088101546101008401526009810154610120840152600a810154909161014084019160ff16908111156111cd576111cd615cfc565b60018111156111de576111de615cfc565b8152602001600a820160019054906101000a900460ff16600181111561120657611206615cfc565b600181111561121757611217615cfc565b815250509050428160a001511180156112335750428160800151105b61127f5760405162461bcd60e51b815260206004820152601160248201527f696e616374697665206c697374696e672e0000000000000000000000000000006044820152606401610a0a565b60006040518060c0016040528089815260200161129a612af8565b6001600160a01b039081168252602082018a905288166040820152606081018790526080018590529050600182610160015160018111156112dd576112dd615cfc565b141561137d578160e001516001600160a01b031681606001516001600160a01b0316146113565760405162461bcd60e51b815260206004820152602160248201527f6d7573742075736520617070726f7665642063757272656e637920746f2062696044820152601960fa1b6064820152608401610a0a565b6113698261014001518360c00151612ccf565b60408201526113788282613194565b611463565b6000826101600151600181111561139657611396615cfc565b14156114635734156113ea5760405162461bcd60e51b815260206004820152600f60248201527f6e6f2076616c7565206e656564656400000000000000000000000000000000006044820152606401610a0a565b6001600160a01b03861673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146114145785611436565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b031660608201526101408201516114549088612ccf565b60408201526114638282613591565b505060018055505050505050565b600260015414156114c45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a0a565b60026001819055600083815261016360205260409020015482906001600160a01b03166115195760405162461bcd60e51b8152602060048201526003602482015262444e4560e81b6044820152606401610a0a565b600083815261016360209081526040808320815161018081018352815481526001808301546001600160a01b039081169583019590955260028301548516938201939093526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015490931660e084015260088101546101008401526009810154610120840152600a810154909161014084019160ff16908111156115c9576115c9615cfc565b60018111156115da576115da615cfc565b8152602001600a820160019054906101000a900460ff16600181111561160257611602615cfc565b600181111561161357611613615cfc565b90525090506001816101600151600181111561163157611631615cfc565b1461167e5760405162461bcd60e51b815260206004820152600f60248201527f6e6f7420616e2061756374696f6e2e00000000000000000000000000000000006044820152606401610a0a565b600084815261016560209081526040808320815160c0810183528154815260018201546001600160a01b039081169482019490945260028201549281019290925260038101549092166060820152600482015460808083019190915260059092015460a082015290830151909190421080611704575060208201516001600160a01b0316155b9050801561171a5761171583613731565b6117e3565b428360a00151106117935760405162461bcd60e51b815260206004820152602960248201527f63616e6e6f7420636c6f73652061756374696f6e206265666f7265206974206860448201527f617320656e6465642e00000000000000000000000000000000000000000000006064820152608401610a0a565b82602001516001600160a01b0316856001600160a01b031614156117bb576117bb838361389d565b81602001516001600160a01b0316856001600160a01b031614156117e3576117e38383613ac2565b50506001805550505050565b806117f8612af8565b600082815261016360205260409020600101546001600160a01b0390811691161461184e5760405162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b6044820152606401610a0a565b600082815261016360209081526040808320815161018081018352815481526001808301546001600160a01b039081169583019590955260028301548516938201939093526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015490931660e084015260088101546101008401526009810154610120840152600a810154909161014084019160ff16908111156118fe576118fe615cfc565b600181111561190f5761190f615cfc565b8152602001600a820160019054906101000a900460ff16600181111561193757611937615cfc565b600181111561194857611948615cfc565b90525090506000816101600151600181111561196657611966615cfc565b146119b35760405162461bcd60e51b815260206004820152600760248201527f21444952454354000000000000000000000000000000000000000000000000006044820152606401610a0a565b6000838152610163602090815260408083208381556001810180546001600160a01b0319908116909155600282018054821690556003820185905560048201859055600582018590556006820185905560078201805490911690556008810184905560098101849055600a01805461ffff191690559083015190516001600160a01b039091169185917f58b0852506006c4be6c7ae72afcd195d9e64d7f5d8947905e914b778e47b7cf39190a3505050565b60026001541415611ab85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a0a565b60026001819055600086815261016360205260409020015485906001600160a01b0316611b0d5760405162461bcd60e51b8152602060048201526003602482015262444e4560e81b6044820152606401610a0a565b600086815261016360209081526040808320815161018081018352815481526001808301546001600160a01b039081169583019590955260028301548516938201939093526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015490931660e084015260088101546101008401526009810154610120840152600a810154909161014084019160ff1690811115611bbd57611bbd615cfc565b6001811115611bce57611bce615cfc565b8152602001600a820160019054906101000a900460ff166001811115611bf657611bf6615cfc565b6001811115611c0757611c07615cfc565b90525090506000611c16612af8565b90508160e001516001600160a01b0316856001600160a01b0316148015611c4c575085826101200151611c499190615f4b565b84145b611c815760405162461bcd60e51b815260206004820152600660248201526521505249434560d01b6044820152606401610a0a565b6114638282898560e001518a876101200151611c9d9190615f4b565b8b613c43565b600054610100900460ff16611cbe5760005460ff1615611cc2565b303b155b611d345760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610a0a565b600054610100900460ff16158015611d56576000805461ffff19166101011790555b611d5e613de2565b611d6784613e57565b61016280546fffffffffffffffffffffffffffffffff19166901f400000000000003841790558451611da1906101609060208801906153ce565b5061016180546001600160e01b031916600160a01b67ffffffffffffffff8516026001600160a01b031916176001600160a01b038516179055611de5600087613ed6565b611e107ff94103142c1baabe9ac2b5d1487bf783de9e69cfeea9a72f5c9c94afd7877b8c6000613ed6565b611e3b7f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae66000613ed6565b8015611e4d576000805461ff00191690555b505050505050565b600082815261012d60205260408120611e6e9083613ee0565b9392505050565b6000611e83816109b7612af8565b611e906101608484615452565b50505050565b60608167ffffffffffffffff811115611eb157611eb1615626565b604051908082528060200260200182016040528015611ee457816020015b6060815260200190600190039081611ecf5790505b50905060005b82811015611f8457611f5430858584818110611f0857611f08615f6a565b9050602002810190611f1a9190615f80565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613eec92505050565b828281518110611f6657611f66615f6a565b60200260200101819052508080611f7c90615fc7565b915050611eea565b5092915050565b60026001541415611fde5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a0a565b600260015583611fec612af8565b600082815261016360205260409020600101546001600160a01b039081169116146120425760405162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b6044820152606401610a0a565b6000858152610163602052604090206002015485906001600160a01b03166120925760405162461bcd60e51b8152602060048201526003602482015262444e4560e81b6044820152606401610a0a565b600061016460008881526020019081526020016000206000876001600160a01b03166001600160a01b031681526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282015481526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016004820154815260200160058201548152505090506000610163600089815260200190815260200160002060405180610180016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016008820154815260200160098201548152602001600a820160009054906101000a900460ff16600181111561227757612277615cfc565b600181111561228857612288615cfc565b8152602001600a820160019054906101000a900460ff1660018111156122b0576122b0615cfc565b60018111156122c1576122c1615cfc565b81525050905081606001516001600160a01b0316866001600160a01b03161480156122ef5750816080015185145b6123245760405162461bcd60e51b815260206004820152600660248201526521505249434560d01b6044820152606401610a0a565b428260a00151116123775760405162461bcd60e51b815260206004820152600760248201527f45585049524544000000000000000000000000000000000000000000000000006044820152606401610a0a565b6000888152610164602090815260408083206001600160a01b038b1684529091528082208281556001810180546001600160a01b0319908116909155600282018490556003820180549091169055600481018390556005019190915560608301519083015160808401516114639284928b928392916123f591615f4b565b8760400151613c43565b86612408612af8565b600082815261016360205260409020600101546001600160a01b0390811691161461245e5760405162461bcd60e51b815260206004820152600660248201526510a7aba722a960d11b6044820152606401610a0a565b600088815261016360209081526040808320815161018081018352815481526001808301546001600160a01b039081169583019590955260028301548516938201939093526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015490931660e084015260088101546101008401526009810154610120840152600a810154909161014084019160ff169081111561250e5761250e615cfc565b600181111561251f5761251f615cfc565b8152602001600a820160019054906101000a900460ff16600181111561254757612547615cfc565b600181111561255857612558615cfc565b815250509050600061256f8261014001518a612ccf565b905060006001836101600151600181111561258c5761258c615cfc565b149050816125c75760405162461bcd60e51b81526020600482015260086024820152675155414e5449545960c01b6044820152606401610a0a565b801561265a57826080015142106126205760405162461bcd60e51b815260206004820152600760248201527f53544152544544000000000000000000000000000000000000000000000000006044820152606401610a0a565b8888101561265a5760405162461bcd60e51b81526020600482015260076024820152665245534552564560c81b6044820152606401610a0a565b428610156126a557610e1061266f8742615e6b565b106126a15760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610a0a565b4295505b600086156126b357866126b9565b83608001515b90506040518061018001604052808d81526020016126d5612af8565b6001600160a01b0316815260200185604001516001600160a01b03168152602001856060015181526020018281526020018760001461271d576127188884615e53565b612723565b8560a001515b8152602001848152602001896001600160a01b031681526020018b81526020018a8152602001856101400151600181111561276057612760615cfc565b8152602001856101600151600181111561277c5761277c615cfc565b905260008d815261016360209081526040918290208351815590830151600180830180546001600160a01b03199081166001600160a01b0394851617909155938501516002840180548616918416919091179055606085015160038401556080850151600484015560a0850151600584015560c0850151600684015560e085015160078401805490951692169190911790925561010083015160088201556101208301516009820155610140830151600a8201805492939192909160ff1990911690838181111561284f5761284f615cfc565b0217905550610160820151600a8201805461ff00191661010083600181111561287a5761287a615cfc565b0217905550505060c084015183146128da5781156128a6576128a63085602001518660c0015187612ff8565b6128c484602001518560400151866060015186886101400151612d06565b81156128da576128da8460200151308587612ff8565b83602001516001600160a01b03168c7fbbea26162edf2bc6a0255bf144ec4dd044302a301ef7d32daa835a2ddacfdef060405160405180910390a3505050505050505050505050565b600081815261012d602052604081206109a390613ff7565b600082815260fb6020526040902060010154612959816109b7612af8565b610fd48383613171565b610160805461297190615fe2565b80601f016020809104026020016040519081016040528092919081815260200182805461299d90615fe2565b80156129ea5780601f106129bf576101008083540402835291602001916129ea565b820191906000526020600020905b8154815290600101906020018083116129cd57829003601f168201915b505050505081565b6000612a00816109b7612af8565b6127108210612a515760405162461bcd60e51b815260206004820152600c60248201527f696e76616c6964204250532e00000000000000000000000000000000000000006044820152606401610a0a565b610162805467ffffffffffffffff84811668010000000000000000026fffffffffffffffffffffffffffffffff19909216908616171790556040517f441ed6470e96704c3f8c9e70c209107078aab3f17311385e886081b91aa7508890610a809085908590918252602082015260400190565b6001600160a01b03163b151590565b60006001600160e01b03198216635a05180f60e01b14806109a357506109a382614001565b6000612b02614036565b905090565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1661107157612b45816001600160a01b03166014614060565b612b50836020614060565b604051602001612b61929190616039565b60408051601f198184030181529082905262461bcd60e51b8252610a0a91600401615dc1565b6040516301ffc9a760e01b8152636cdb3d1360e11b60048201526000906001600160a01b038316906301ffc9a790602401602060405180830381865afa158015612bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf991906160ba565b15612c0657506000919050565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa158015612c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c7591906160ba565b15612c8257506001919050565b60405162461bcd60e51b815260206004820181905260248201527f746f6b656e206d7573742062652045524331313535206f72204552433732312e6044820152606401610a0a565b919050565b600081612cde575060006109a3565b6001836001811115612cf257612cf2615cfc565b14612cfd5781611e6e565b50600192915050565b30600080836001811115612d1c57612d1c615cfc565b1415612e1657604051627eeac760e11b81526001600160a01b0388811660048301526024820187905285919088169062fdd58e90604401602060405180830381865afa158015612d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d9491906160dc565b10158015612e0f575060405163e985e9c560e01b81526001600160a01b038881166004830152838116602483015287169063e985e9c590604401602060405180830381865afa158015612deb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e0f91906160ba565b9050612fa2565b6001836001811115612e2a57612e2a615cfc565b1415612fa2576040516331a9108f60e11b8152600481018690526001600160a01b038089169190881690636352211e90602401602060405180830381865afa158015612e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e9e91906160f5565b6001600160a01b0316148015612f9f575060405163020604bf60e21b8152600481018690526001600160a01b03808416919088169063081812fc90602401602060405180830381865afa158015612ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f1d91906160f5565b6001600160a01b03161480612f9f575060405163e985e9c560e01b81526001600160a01b038881166004830152838116602483015287169063e985e9c590604401602060405180830381865afa158015612f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f9f91906160ba565b90505b80612fef5760405162461bcd60e51b815260206004820152600760248201527f2142414c4e4654000000000000000000000000000000000000000000000000006044820152606401610a0a565b50505050505050565b6000816101400151600181111561301157613011615cfc565b14156130a65760408082015160608301519151637921219560e11b81526001600160a01b038781166004830152868116602483015260448201939093526064810185905260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b15801561308957600080fd5b505af115801561309d573d6000803e3d6000fd5b50505050611e90565b600181610140015160018111156130bf576130bf615cfc565b1415611e905760408082015160608301519151635c46a7ef60e11b81526001600160a01b03878116600483015286811660248301526044820193909352608060648201526000608482015291169063b88d4fde9060a401600060405180830381600087803b15801561313057600080fd5b505af1158015613144573d6000803e3d6000fd5b5050505050505050565b6131588282614209565b600082815261012d60205260409020610fd490826142ac565b61317b82826142c1565b600082815261012d60205260409020610fd49082614362565b8151600090815261016560209081526040808320815160c0810183528154815260018201546001600160a01b039081169482019490945260028201549281018390526003820154909316606084015260048101546080840181905260059091015460a08401529192916132079190615f4b565b905060008360400151846080015161321f9190615f4b565b6101208601519091507f0000000000000000000000000000000000000000000000000000000000000000901580159061326c57508560c001518661012001516132689190615f4b565b8210155b156132805761327b8686613ac2565b6134ab565b61329f8660c001518761010001516132989190615f4b565b8484614377565b6132eb5760405162461bcd60e51b815260206004820152601060248201527f6e6f742077696e6e696e67206269642e000000000000000000000000000000006044820152606401610a0a565b85516000908152610165602090815260409182902087518155908701516001820180546001600160a01b03199081166001600160a01b039384161790915592880151600283015560608801516003830180549094169116179091556080860151600482015560a080870151600590920191909155610162549087015167ffffffffffffffff9091169061337f904290615e6b565b116134ab576101625460a08701805167ffffffffffffffff909216916133a6908390615e53565b9052508551600090815261016360209081526040918290208851815590880151600180830180546001600160a01b03199081166001600160a01b0394851617909155938a0151600284018054861691841691909117905560608a0151600384015560808a0151600484015560a08a0151600584015560c08a0151600684015560e08a015160078401805490951692169190911790925561010088015160088201556101208801516009820155610140880151600a820180548a9460ff1990911690838181111561347857613478615cfc565b0217905550610160820151600a8201805461ff0019166101008360018111156134a3576134a3615cfc565b021790555050505b60208401516001600160a01b0316158015906134c75750600083115b156134e1576134e18660e0015130866020015186856143d9565b6134f68660e0015186602001513085856143d9565b856101600151600181111561350d5761350d615cfc565b85602001516001600160a01b031687600001517f8a412352601a288b3de40254a9de2ab14a497aa3638a7e558480680a56e2705d886040015189604001518a6080015161355a9190615f4b565b6060808c01516040805194855260208501939093526001600160a01b031691830191909152015b60405180910390a4505050505050565b8160c001518160400151111580156135ad575060008260c00151115b6135f95760405162461bcd60e51b815260206004820152601f60248201527f696e73756666696369656e7420746f6b656e7320696e206c697374696e672e006044820152606401610a0a565b61361f816020015182606001518360400151846080015161361a9190615f4b565b61455a565b815160009081526101646020908152604080832082850180516001600160a01b0390811686529190935292819020845181559151600180840180549286166001600160a01b03199384161790559185015160028401556060850151600384018054919095169116179092556080830151600482015560a0830151600590910155610160830151908111156136b5576136b5615cfc565b81602001516001600160a01b031683600001517f8a412352601a288b3de40254a9de2ab14a497aa3638a7e558480680a56e2705d8460400151856040015186608001516137029190615f4b565b6060878101516040805194855260208501939093526001600160a01b0316838301529051918290030190a45050565b613739612af8565b8151600090815261016360205260409020600101546001600160a01b039081169116146137b35760405162461bcd60e51b815260206004820152602260248201527f63616c6c6572206973206e6f7420746865206c697374696e672063726561746f604482015261391760f11b6064820152608401610a0a565b805160009081526101636020908152604082208281556001810180546001600160a01b031990811690915560028201805482169055600382018490556004820184905560058201849055600682018490556007820180549091169055600881018390556009810192909255600a909101805461ffff1916905581015160c082015161384091309184612ff8565b600161384a612af8565b8251602080850151604080516001600160a01b0392831681526000938101939093529316927f572cdc5ca5e918473319d0f4737494e4709ac879a7d0bcd11ce1bef24b24e81d910160405180910390a450565b60008260c0015182608001516138b39190615f4b565b600060c085018181524260a087019081528651835261016360209081526040938490208851815590880151600180830180546001600160a01b039384166001600160a01b031991821617909155958a015160028401805491841691881691909117905560608a0151600384015560808a01516004840155925160058301559251600682015560e08801516007820180549190941694169390931790915561010086015160088301556101208601516009830155610140860151600a8301805494955087949192909160ff191690838181111561399157613991615cfc565b0217905550610160820151600a8201805461ff0019166101008360018111156139bc576139bc615cfc565b02179055505060006080840181815285518252610165602090815260409283902086518155818701516001820180546001600160a01b03199081166001600160a01b039384161790915594880151600283015560608801516003830180549096169116179093559051600483015560a085015160059092019190915584015160e0850151613a4f92503091908487614888565b6000613a59612af8565b6001600160a01b031684600001517f572cdc5ca5e918473319d0f4737494e4709ac879a7d0bcd11ce1bef24b24e81d86602001518660200151604051613ab59291906001600160a01b0392831681529116602082015260400190565b60405180910390a4505050565b604081810180514260a086810191825260008085528751815261016560209081528682208851815581890151600180830180546001600160a01b03199081166001600160a01b039485161790915598516002808501919091556060808d0151600380870180548e16928716929092179091556080808f0151600480890191909155998f01516005978801558f5189526101638852978d90208f518155968f015187850180548e169187169190911790559b8e015191860180548c16928516929092179091558c015199840199909955928a01519382019390935592519183019190915560c0870151600683015560e087015160078301805490951691161790925561010085015160088301556101208501516009830155610140850151600a83018054929487949360ff1916908381811115613c0057613c00615cfc565b0217905550610160820151600a8201805461ff001916610100836001811115613c2b57613c2b615cfc565b0217905550905050613a4f3083602001518386612ff8565b613c508686838686614b0d565b808660c001818151613c629190615e6b565b9052508551600090815261016360209081526040918290208851815590880151600180830180546001600160a01b03199081166001600160a01b0394851617909155938a0151600284018054861691841691909117905560608a0151600384015560808a0151600484015560a08a0151600584015560c08a0151600684015560e08a015160078401805490951692169190911790925561010088015160088201556101208801516009820155610140880151600a820180548a9460ff19909116908381811115613d3457613d34615cfc565b0217905550610160820151600a8201805461ff001916610100836001811115613d5f57613d5f615cfc565b0217905550905050613d7885876020015185858a614888565b613d888660200151858389612ff8565b602080870151604080890151895182516001600160a01b038a81168252958101879052928301879052928416931691907f306e6cde5eb293794d557a3a6c844de939e6206b05e6910451c512852bf654a590606001613581565b600054610100900460ff16613e4d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a0a565b613e55614ce7565b565b600054610100900460ff16613ec25760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a0a565b613eca614d58565b613ed381614dc3565b50565b611071828261314e565b6000611e6e8383614e96565b60606001600160a01b0383163b613f6b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610a0a565b600080846001600160a01b031684604051613f869190616112565b600060405180830381855af49150503d8060008114613fc1576040519150601f19603f3d011682016040523d82523d6000602084013e613fc6565b606091505b5091509150613fee828260405180606001604052806027815260200161636a60279139614ec0565b95945050505050565b60006109a3825490565b60006001600160e01b03198216637965db0b60e01b14806109a357506301ffc9a760e01b6001600160e01b03198316146109a3565b3360009081526065602052604081205460ff161561405b575060131936013560601c90565b503390565b6060600061406f836002615f4b565b61407a906002615e53565b67ffffffffffffffff81111561409257614092615626565b6040519080825280601f01601f1916602001820160405280156140bc576020820181803683370190505b509050600360fc1b816000815181106140d7576140d7615f6a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061410657614106615f6a565b60200101906001600160f81b031916908160001a905350600061412a846002615f4b565b614135906001615e53565b90505b60018111156141ba577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061417657614176615f6a565b1a60f81b82828151811061418c5761418c615f6a565b60200101906001600160f81b031916908160001a90535060049490941c936141b38161612e565b9050614138565b508315611e6e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610a0a565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1661107157600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055614268612af8565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611e6e836001600160a01b038416614ef9565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff161561107157600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff1916905561431e612af8565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000611e6e836001600160a01b038416614f48565b600082614388575082811015611e6e565b82821180156143d157506101625468010000000000000000900467ffffffffffffffff16836127106143ba8286615e6b565b6143c49190615f4b565b6143ce9190616145565b10155b949350505050565b816143e357614553565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415614547576001600160a01b03841630141561448357604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b15801561445b57600080fd5b505af115801561446f573d6000803e3d6000fd5b5050505061447e83838361503b565b614553565b6001600160a01b03831630141561453c573482146144e35760405162461bcd60e51b815260206004820152601360248201527f6d73672e76616c756520213d20616d6f756e74000000000000000000000000006044820152606401610a0a565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561451e57600080fd5b505af1158015614532573d6000803e3d6000fd5b5050505050614553565b61447e83838361503b565b61455385858585615100565b5050505050565b60006040516020016145b5907f2142414c3230202d696e73756666696369656e742062616c616e6365206f722081527f616c6c6f77616e6365202d202e000000000000000000000000000000000000006020820152602d0190565b60408051601f19818403018152908290526bffffffffffffffffffffffff19606087901b1660208301529060340160408051601f19818403018152908290526bffffffffffffffffffffffff19606087901b1660208301529060340160408051601f1981840301815282825260208301879052910160408051808303601f19018152908290526370a0823160e01b82526001600160a01b0389811660048401529091908816906370a0823190602401602060405180830381865afa158015614681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146a591906160dc565b6040516020016146b791815260200190565b60408051808303601f1901815290829052636eb1769f60e11b82526001600160a01b038a8116600484015230602484015290919089169063dd62ed3e90604401602060405180830381865afa158015614714573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061473891906160dc565b60405160200161474a91815260200190565b60408051601f198184030181529082905261476c969594939291602001616167565b60408051808303601f19018152908290526370a0823160e01b82526001600160a01b0386811660048401529092508391908516906370a0823190602401602060405180830381865afa1580156147c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147ea91906160dc565b101580156148695750604051636eb1769f60e11b81526001600160a01b03858116600483015230602483015283919085169063dd62ed3e90604401602060405180830381865afa158015614842573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061486691906160dc565b10155b81906145535760405162461bcd60e51b8152600401610a0a9190615dc1565b61016154600090612710906148ae90600160a01b900467ffffffffffffffff1685615f4b565b6148b89190616145565b60405163085b49ad60e41b81523060048201526001602482015290915060009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906385b49ad0906044016040805180830381865afa15801561492a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061494e9190616325565b909250905060006127106149628388615f4b565b61496c9190616145565b905060008086604001516001600160a01b0316632a55205a88606001518a6040518363ffffffff1660e01b81526004016149b0929190918252602082015260400190565b6040805180830381865afa9250505080156149e8575060408051601f3d908101601f191682019092526149e591810190616325565b60015b6149f157614a7c565b6001600160a01b03821615801590614a095750600081115b15614a79578985614a1a8a84615e53565b614a249190615e53565b1115614a725760405162461bcd60e51b815260206004820152601560248201527f66656573206578636565642074686520707269636500000000000000000000006044820152606401610a0a565b8192508093505b50505b610161547f000000000000000000000000000000000000000000000000000000000000000090614aba908b908e906001600160a01b03168a856143d9565b614ac78a8d8486856143d9565b614ad48a8d8887856143d9565b614aff8a8d8d87614ae5888d615e53565b614aef9190615e53565b614af9908e615e6b565b856143d9565b505050505050505050505050565b60008561016001516001811115614b2657614b26615cfc565b14614b735760405162461bcd60e51b815260206004820152601860248201527f63616e6e6f74206275792066726f6d206c697374696e672e00000000000000006044820152606401610a0a565b60008560c00151118015614b875750600083115b8015614b9757508460c001518311155b614be35760405162461bcd60e51b815260206004820152601960248201527f696e76616c696420616d6f756e74206f6620746f6b656e732e000000000000006044820152606401610a0a565b8460a0015142108015614bf95750846080015142115b614c455760405162461bcd60e51b815260206004820152601760248201527f6e6f742077697468696e2073616c652077696e646f772e0000000000000000006044820152606401610a0a565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415614cbe57803414614cb95760405162461bcd60e51b815260206004820152601260248201527f6d73672e76616c756520213d20707269636500000000000000000000000000006044820152606401610a0a565b614cc9565b614cc984838361455a565b61455385602001518660400151876060015186896101400151612d06565b600054610100900460ff16614d525760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a0a565b60018055565b600054610100900460ff16613e555760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a0a565b600054610100900460ff16614e2e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a0a565b60005b815181101561107157600160656000848481518110614e5257614e52615f6a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580614e8e81615fc7565b915050614e31565b6000826000018281548110614ead57614ead615f6a565b9060005260206000200154905092915050565b60608315614ecf575081611e6e565b825115614edf5782518084602001fd5b8160405162461bcd60e51b8152600401610a0a9190615dc1565b6000818152600183016020526040812054614f40575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556109a3565b5060006109a3565b60008181526001830160205260408120548015615031576000614f6c600183615e6b565b8554909150600090614f8090600190615e6b565b9050818114614fe5576000866000018281548110614fa057614fa0615f6a565b9060005260206000200154905080876000018481548110614fc357614fc3615f6a565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080614ff657614ff6616353565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506109a3565b60009150506109a3565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114615088576040519150601f19603f3d011682016040523d82523d6000602084013e61508d565b606091505b5050905080611e9057816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156150d157600080fd5b505af11580156150e5573d6000803e3d6000fd5b50611e90935050506001600160a01b0384169050858561515e565b816001600160a01b0316836001600160a01b0316141561511f57611e90565b6001600160a01b038316301415615149576151446001600160a01b038516838361515e565b611e90565b611e906001600160a01b0385168484846151d6565b6040516001600160a01b038316602482015260448101829052610fd490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915261520e565b6040516001600160a01b0380851660248301528316604482015260648101829052611e909085906323b872dd60e01b9060840161518a565b6000615263826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166152f39092919063ffffffff16565b805190915015610fd4578080602001905181019061528191906160ba565b610fd45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610a0a565b60606143d18484600085856001600160a01b0385163b6153555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a0a565b600080866001600160a01b031685876040516153719190616112565b60006040518083038185875af1925050503d80600081146153ae576040519150601f19603f3d011682016040523d82523d6000602084013e6153b3565b606091505b50915091506153c3828286614ec0565b979650505050505050565b8280546153da90615fe2565b90600052602060002090601f0160209004810192826153fc5760008555615442565b82601f1061541557805160ff1916838001178555615442565b82800160010185558215615442579182015b82811115615442578251825591602001919060010190615427565b5061544e9291506154c6565b5090565b82805461545e90615fe2565b90600052602060002090601f0160209004810192826154805760008555615442565b82601f106154995782800160ff19823516178555615442565b82800160010185558215615442579182015b828111156154425782358255916020019190600101906154ab565b5b8082111561544e57600081556001016154c7565b6000602082840312156154ed57600080fd5b81356001600160e01b031981168114611e6e57600080fd5b6001600160a01b0381168114613ed357600080fd5b8035612cca81615505565b60008083601f84011261553757600080fd5b50813567ffffffffffffffff81111561554f57600080fd5b60208301915083602082850101111561556757600080fd5b9250929050565b60008060008060006080868803121561558657600080fd5b853561559181615505565b945060208601356155a181615505565b935060408601359250606086013567ffffffffffffffff8111156155c457600080fd5b6155d088828901615525565b969995985093965092949392505050565b600080604083850312156155f457600080fd5b82356155ff81615505565b946020939093013593505050565b60006020828403121561561f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561566057615660615626565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561568f5761568f615626565b604052919050565b803560028110612cca57600080fd5b600061012082840312156156b957600080fd5b6156c161563c565b6156ca8361551a565b81526020830135602082015260408301356040820152606083013560608201526080830135608082015261570060a0840161551a565b60a082015260c083013560c082015260e083013560e0820152610100615727818501615697565b908201529392505050565b6000806040838503121561574557600080fd5b82359150602083013561575781615505565b809150509250929050565b60006020828403121561577457600080fd5b8135611e6e81615505565b600080600080600060a0868803121561579757600080fd5b853594506020860135935060408601356157b081615505565b94979396509394606081013594506080013592915050565b600080600080600060a086880312156157e057600080fd5b8535945060208601356157f281615505565b935060408601359250606086013561580981615505565b949793965091946080013592915050565b600067ffffffffffffffff83111561583457615834615626565b615847601f8401601f1916602001615666565b905082815283838301111561585b57600080fd5b828260208301376000602084830101529392505050565b600067ffffffffffffffff82111561588c5761588c615626565b5060051b60200190565b600080600080600060a086880312156158ae57600080fd5b85356158b981615505565b945060208681013567ffffffffffffffff808211156158d757600080fd5b818901915089601f8301126158eb57600080fd5b6158f98a833585850161581a565b9650604089013591508082111561590f57600080fd5b508701601f8101891361592157600080fd5b803561593461592f82615872565b615666565b81815260059190911b8201830190838101908b83111561595357600080fd5b928401925b8284101561597a57833561596b81615505565b82529284019290840190615958565b80975050505050506158096060870161551a565b600080604083850312156159a157600080fd5b50508035926020909101359150565b600080602083850312156159c357600080fd5b823567ffffffffffffffff8111156159da57600080fd5b6159e685828601615525565b90969095509350505050565b60008060208385031215615a0557600080fd5b823567ffffffffffffffff80821115615a1d57600080fd5b818501915085601f830112615a3157600080fd5b813581811115615a4057600080fd5b8660208260051b8501011115615a5557600080fd5b60209290920196919550909350505050565b60005b83811015615a82578181015183820152602001615a6a565b83811115611e905750506000910152565b60008151808452615aab816020860160208601615a67565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015615b1457603f19888603018452615b02858351615a93565b94509285019290850190600101615ae6565b5092979650505050505050565b60008060008060808587031215615b3757600080fd5b843593506020850135615b4981615505565b92506040850135615b5981615505565b9396929550929360600135925050565b600082601f830112615b7a57600080fd5b81356020615b8a61592f83615872565b82815260059290921b84018101918181019086841115615ba957600080fd5b8286015b84811015615bc45780358352918301918301615bad565b509695505050505050565b600082601f830112615be057600080fd5b611e6e8383356020850161581a565b600080600080600060a08688031215615c0757600080fd5b8535615c1281615505565b94506020860135615c2281615505565b9350604086013567ffffffffffffffff80821115615c3f57600080fd5b615c4b89838a01615b69565b94506060880135915080821115615c6157600080fd5b615c6d89838a01615b69565b93506080880135915080821115615c8357600080fd5b50615c9088828901615bcf565b9150509295509295909350565b600080600080600080600060e0888a031215615cb857600080fd5b873596506020880135955060408801359450606088013593506080880135615cdf81615505565b9699959850939692959460a0840135945060c09093013592915050565b634e487b7160e01b600052602160045260246000fd5b60028110613ed357634e487b7160e01b600052602160045260246000fd5b615d3981615d12565b9052565b6000610180820190508d82526001600160a01b03808e166020840152808d1660408401528b60608401528a60808401528960a08401528860c084015280881660e0840152508561010083015284610120830152615d9984615d12565b83610140830152615da983615d12565b826101608301529d9c50505050505050505050505050565b602081526000611e6e6020830184615a93565b600080600080600060a08688031215615dec57600080fd5b8535615df781615505565b94506020860135615e0781615505565b93506040860135925060608601359150608086013567ffffffffffffffff811115615e3157600080fd5b615c9088828901615bcf565b634e487b7160e01b600052601160045260246000fd5b60008219821115615e6657615e66615e3d565b500190565b600082821015615e7d57615e7d615e3d565b500390565b81518152602080830151610180830191615ea6908401826001600160a01b03169052565b506040830151615ec160408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e0830151615f0460e08401826001600160a01b03169052565b506101008381015190830152610120808401519083015261014080840151615f2e82850182615d30565b505061016080840151615f4382850182615d30565b505092915050565b6000816000190483118215151615615f6557615f65615e3d565b500290565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112615f9757600080fd5b83018035915067ffffffffffffffff821115615fb257600080fd5b60200191503681900382131561556757600080fd5b6000600019821415615fdb57615fdb615e3d565b5060010190565b600181811c90821680615ff657607f821691505b6020821081141561601757634e487b7160e01b600052602260045260246000fd5b50919050565b6000815161602f818560208601615a67565b9290920192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351616071816017850160208801615a67565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516160ae816028840160208801615a67565b01602801949350505050565b6000602082840312156160cc57600080fd5b81518015158114611e6e57600080fd5b6000602082840312156160ee57600080fd5b5051919050565b60006020828403121561610757600080fd5b8151611e6e81615505565b60008251616124818460208701615a67565b9190910192915050565b60008161613d5761613d615e3d565b506000190190565b60008261616257634e487b7160e01b600052601260045260246000fd5b500490565b60008751616179818460208c01615a67565b7f202d205f61646472546f436865636b3a0000000000000000000000000000000090830190815287516161b3816010840160208c01615a67565b7f202d205f63757272656e63793a200000000000000000000000000000000000006010929091019182015286516161f181601e840160208b01615a67565b7f202d205f63757272656e6379416d6f756e74546f436865636b416761696e7374601e9290910191820152600160fd1b603e820152855161623981603f840160208a01615a67565b7f202d20204945524332305570677261646561626c65285f63757272656e637929603f92909101918201527f2e62616c616e63654f66285f61646472546f436865636b293a20000000000000605f82015261631861631261629d607984018861601d565b7f202d20204945524332305570677261646561626c65285f63757272656e63792981527f2e616c6c6f77616e6365285f61646472546f436865636b2c206164647265737360208201527f287468697329293a200000000000000000000000000000000000000000000000604082015260490190565b8561601d565b9998505050505050505050565b6000806040838503121561633857600080fd5b825161634381615505565b6020939093015192949293505050565b634e487b7160e01b600052603160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a\";\n\ntype MarketplaceConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: MarketplaceConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Marketplace__factory extends ContractFactory {\n  constructor(...args: MarketplaceConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Marketplace\";\n  }\n\n  deploy(\n    _nativeTokenWrapper: string,\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Marketplace> {\n    return super.deploy(\n      _nativeTokenWrapper,\n      _thirdwebFee,\n      overrides || {}\n    ) as Promise<Marketplace>;\n  }\n  getDeployTransaction(\n    _nativeTokenWrapper: string,\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _nativeTokenWrapper,\n      _thirdwebFee,\n      overrides || {}\n    );\n  }\n  attach(address: string): Marketplace {\n    return super.attach(address) as Marketplace;\n  }\n  connect(signer: Signer): Marketplace__factory {\n    return super.connect(signer) as Marketplace__factory;\n  }\n  static readonly contractName: \"Marketplace\";\n  public readonly contractName: \"Marketplace\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MarketplaceInterface {\n    return new utils.Interface(_abi) as MarketplaceInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Marketplace {\n    return new Contract(address, _abi, signerOrProvider) as Marketplace;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Mock, MockInterface } from \"../Mock\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"erc1155\",\n    outputs: [\n      {\n        internalType: \"contract IERC1155\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"erc20\",\n    outputs: [\n      {\n        internalType: \"contract IERC20\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"erc721\",\n    outputs: [\n      {\n        internalType: \"contract IERC721\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5060a08061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063785e9e86146041578063bca6ce6414606f578063d56022d7146081575b600080fd5b6000546053906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6001546053906001600160a01b031681565b6002546053906001600160a01b03168156fea164736f6c634300080c000a\";\n\ntype MockConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: MockConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Mock__factory extends ContractFactory {\n  constructor(...args: MockConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Mock\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Mock> {\n    return super.deploy(overrides || {}) as Promise<Mock>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Mock {\n    return super.attach(address) as Mock;\n  }\n  connect(signer: Signer): Mock__factory {\n    return super.connect(signer) as Mock__factory;\n  }\n  static readonly contractName: \"Mock\";\n  public readonly contractName: \"Mock\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MockInterface {\n    return new utils.Interface(_abi) as MockInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Mock {\n    return new Contract(address, _abi, signerOrProvider) as Mock;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  Signer,\n  utils,\n  Contract,\n  ContractFactory,\n  Overrides,\n  BytesLike,\n  BigNumberish,\n} from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { MockContract, MockContractInterface } from \"../MockContract\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_name\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"_version\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b506040516100ff3803806100ff83398101604081905261002f9161004d565b6000919091556001805460ff191660ff909216919091179055610083565b6000806040838503121561006057600080fd5b82519150602083015160ff8116811461007857600080fd5b809150509250929050565b606e806100916000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a0a8e460146037578063cb2ef6f7146051575b600080fd5b60015460405160ff90911681526020015b60405180910390f35b600054604051908152602001604856fea164736f6c634300080c000a\";\n\ntype MockContractConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: MockContractConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class MockContract__factory extends ContractFactory {\n  constructor(...args: MockContractConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"MockContract\";\n  }\n\n  deploy(\n    _name: BytesLike,\n    _version: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<MockContract> {\n    return super.deploy(\n      _name,\n      _version,\n      overrides || {}\n    ) as Promise<MockContract>;\n  }\n  getDeployTransaction(\n    _name: BytesLike,\n    _version: BigNumberish,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_name, _version, overrides || {});\n  }\n  attach(address: string): MockContract {\n    return super.attach(address) as MockContract;\n  }\n  connect(signer: Signer): MockContract__factory {\n    return super.connect(signer) as MockContract__factory;\n  }\n  static readonly contractName: \"MockContract\";\n  public readonly contractName: \"MockContract\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MockContractInterface {\n    return new utils.Interface(_abi) as MockContractInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MockContract {\n    return new Contract(address, _abi, signerOrProvider) as MockContract;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Multiwrap, MultiwrapInterface } from \"../Multiwrap\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wrapper\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"sentTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdOfShares\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"sharesUnwrapped\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc721AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc721TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc20AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"erc20AmountsToWrap\",\n            type: \"uint256[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct MultiTokenTransferLib.MultiToken\",\n        name: \"wrappedContents\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensUnwrapped\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wrapper\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdOfShares\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc721AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc721TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc20AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"erc20AmountsToWrap\",\n            type: \"uint256[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct MultiTokenTransferLib.MultiToken\",\n        name: \"wrappedContents\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensWrapped\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"burnBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"nextTokenIdToMint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155BatchReceived\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalShares\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amountToRedeem\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_sendTo\",\n        type: \"address\",\n      },\n    ],\n    name: \"unwrap\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address[]\",\n            name: \"erc1155AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc1155AmountsToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc721AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[][]\",\n            name: \"erc721TokensToWrap\",\n            type: \"uint256[][]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"erc20AssetContracts\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"erc20AmountsToWrap\",\n            type: \"uint256[]\",\n          },\n        ],\n        internalType: \"struct MultiTokenTransferLib.MultiToken\",\n        name: \"_wrappedContents\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_shares\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_uriForShares\",\n        type: \"string\",\n      },\n    ],\n    name: \"wrap\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50615b7080620000216000396000f3fe6080604052600436106102d05760003560e01c80639010d07c11610179578063bc197c81116100d6578063d547741f1161008a578063f23a6e6111610064578063f23a6e61146108f9578063f242432a14610925578063f5298aca1461094557600080fd5b8063d547741f1461087a578063e8a3d4851461089a578063e985e9c5146108af57600080fd5b8063ca15c873116100bb578063ca15c87314610814578063cb2ef6f714610834578063cde144671461086757600080fd5b8063bc197c81146107ba578063bd85b039146107e657600080fd5b8063a0a8e4601161012d578063a22cb46511610112578063a22cb46514610735578063ac9650d814610755578063b24f2d391461078257600080fd5b8063a0a8e46014610704578063a217fddf1461072057600080fd5b8063938e3d7b1161015e578063938e3d7b146106af57806395d89b41146106cf5780639bcf7a15146106e457600080fd5b80639010d07c1461064957806391d148541461066957600080fd5b80632f2ff15d11610232578063572b6c05116101e65780636b20c454116101c05780636b20c454146105dc578063754b8fe7146105fc5780638da5cb5b1461061c57600080fd5b8063572b6c05146105635780635b952ae41461059c578063600dd5ea146105bc57600080fd5b80633b1475a7116102175780633b1475a7146104dd5780634cc157df146104f45780634e1273f41461053657600080fd5b80632f2ff15d1461049d57806336568abe146104bd57600080fd5b806313f2dad011610289578063248a9ca31161026e578063248a9ca31461040e5780632a55205a1461043e5780632eb2c2d61461047d57600080fd5b806313f2dad01461039c578063150b7a02146103ca57600080fd5b806306fdde03116102ba57806306fdde03146103385780630e89341c1461035a57806313af40351461037a57600080fd5b8062fdd58e146102d557806301ffc9a714610308575b600080fd5b3480156102e157600080fd5b506102f56102f0366004614541565b610965565b6040519081526020015b60405180910390f35b34801561031457600080fd5b50610328610323366004614583565b610a14565b60405190151581526020016102ff565b34801561034457600080fd5b5061034d610a5a565b6040516102ff91906145f8565b34801561036657600080fd5b5061034d61037536600461460b565b610ae9565b34801561038657600080fd5b5061039a610395366004614624565b610b8c565b005b3480156103a857600080fd5b506102f56103b736600461460b565b6102306020526000908152604090205481565b3480156103d657600080fd5b506103f56103e5366004614721565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016102ff565b34801561041a57600080fd5b506102f561042936600461460b565b600090815260fb602052604090206001015490565b34801561044a57600080fd5b5061045e61045936600461478d565b610c92565b604080516001600160a01b0390931683526020830191909152016102ff565b34801561048957600080fd5b5061039a610498366004614844565b610ccf565b3480156104a957600080fd5b5061039a6104b83660046148f2565b610d83565b3480156104c957600080fd5b5061039a6104d83660046148f2565b610db0565b3480156104e957600080fd5b506102f561022a5481565b34801561050057600080fd5b5061051461050f36600461460b565b610e4c565b604080516001600160a01b03909316835261ffff9091166020830152016102ff565b34801561054257600080fd5b50610556610551366004614991565b610ec5565b6040516102ff9190614a30565b34801561056f57600080fd5b5061032861057e366004614624565b6001600160a01b031660009081526065602052604090205460ff1690565b3480156105a857600080fd5b5061039a6105b7366004614a43565b611003565b3480156105c857600080fd5b5061039a6105d7366004614541565b611590565b3480156105e857600080fd5b5061039a6105f7366004614a7c565b61167b565b34801561060857600080fd5b5061039a610617366004614af2565b611713565b34801561062857600080fd5b5061063161190f565b6040516001600160a01b0390911681526020016102ff565b34801561065557600080fd5b5061063161066436600461478d565b61196a565b34801561067557600080fd5b506103286106843660046148f2565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156106bb57600080fd5b5061039a6106ca366004614c13565b61198a565b3480156106db57600080fd5b5061034d6119ab565b3480156106f057600080fd5b5061039a6106ff366004614c55565b6119b9565b34801561071057600080fd5b50604051600181526020016102ff565b34801561072c57600080fd5b506102f5600081565b34801561074157600080fd5b5061039a610750366004614c9b565b611aa3565b34801561076157600080fd5b50610775610770366004614cc9565b611ab5565b6040516102ff9190614d3e565b34801561078e57600080fd5b5061022b5461022c546001600160a01b03909116906fffffffffffffffffffffffffffffffff16610514565b3480156107c657600080fd5b506103f56107d5366004614844565b63bc197c8160e01b95945050505050565b3480156107f257600080fd5b506102f561080136600461460b565b61022f6020526000908152604090205481565b34801561082057600080fd5b506102f561082f36600461460b565b611baa565b34801561084057600080fd5b507f4d756c74697772617000000000000000000000000000000000000000000000006102f5565b6102f5610875366004614da0565b611bc2565b34801561088657600080fd5b5061039a6108953660046148f2565b611d14565b3480156108a657600080fd5b5061034d611d3c565b3480156108bb57600080fd5b506103286108ca366004614e18565b6001600160a01b0391821660009081526101f66020908152604080832093909416825291909152205460ff1690565b34801561090557600080fd5b506103f5610914366004614e46565b63f23a6e6160e01b95945050505050565b34801561093157600080fd5b5061039a610940366004614e46565b611d4a565b34801561095157600080fd5b5061039a610960366004614eaf565b611df7565b60006001600160a01b0383166109e85760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526101f5602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610a1f82611e8f565b80610a3a57506001600160e01b03198216636cdb3d1360e11b145b80610a0e57506001600160e01b0319821663152a902d60e11b1492915050565b6102278054610a6890614ee4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9490614ee4565b8015610ae15780601f10610ab657610100808354040283529160200191610ae1565b820191906000526020600020905b815481529060010190602001808311610ac457829003601f168201915b505050505081565b600081815261023160205260409020805460609190610b0790614ee4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3390614ee4565b8015610b805780601f10610b5557610100808354040283529160200191610b80565b820191906000526020600020905b815481529060010190602001808311610b6357829003601f168201915b50505050509050919050565b6000610b9f81610b9a611ecf565b611ed9565b6001600160a01b03821660009081527fc88390e7e62175be0932452175b6a7222b6b094ab0ef984a5153c620345d8975602052604090205460ff16610c265760405162461bcd60e51b815260206004820152601b60248201527f6e6577206f776e6572206e6f74206d6f64756c652061646d696e2e000000000060448201526064016109df565b61022954604080516001600160a01b03928316815291841660208301527f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76910160405180910390a15061022980546001600160a01b0319166001600160a01b0392909216919091179055565b600080600080610ca186610e4c565b90945084925061ffff169050612710610cba8287614f35565b610cc49190614f6a565b925050509250929050565b610cd7611ecf565b6001600160a01b0316856001600160a01b03161480610cfd5750610cfd856108ca611ecf565b610d6f5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016109df565b610d7c8585858585611f59565b5050505050565b600082815260fb6020526040902060010154610da181610b9a611ecf565b610dab83836121d5565b505050565b610db8611ecf565b6001600160a01b0316816001600160a01b031614610e3e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016109df565b610e4882826121f8565b5050565b600081815261022e60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610e945780516020820151610ebb565b61022b5461022c546001600160a01b03909116906fffffffffffffffffffffffffffffffff165b9250925050915091565b60608151835114610f3e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016109df565b6000835167ffffffffffffffff811115610f5a57610f5a614641565b604051908082528060200260200182016040528015610f83578160200160208202803683370190505b50905060005b8451811015610ffb57610fce858281518110610fa757610fa7614f7e565b6020026020010151858381518110610fc157610fc1614f7e565b6020026020010151610965565b828281518110610fe057610fe0614f7e565b6020908102919091010152610ff481614f94565b9050610f89565b509392505050565b600260335414156110565760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109df565b600260335561022a5483106110ad5760405162461bcd60e51b815260206004820152600f60248201527f696e76616c696420746f6b656e4964000000000000000000000000000000000060448201526064016109df565b816110bf6110b9611ecf565b85610965565b101561110d5760405162461bcd60e51b815260206004820152601a60248201527f756e7772617070696e67206d6f7265207468616e206f776e656400000000000060448201526064016109df565b600083815261023060209081526040808320546102328352818420825181546101009581028201860190945260e08101848152929588871495909491938492909184919084018282801561118a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161116c575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156112245760008481526020908190208301805460408051828502810185019091528181529283018282801561121057602002820191906000526020600020905b8154815260200190600101908083116111fc575b5050505050815260200190600101906111b8565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156112bd576000848152602090819020830180546040805182850281018501909152818152928301828280156112a957602002820191906000526020600020905b815481526020019060010190808311611295575b505050505081526020019060010190611251565b5050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561131e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611300575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156113b8576000848152602090819020830180546040805182850281018501909152818152928301828280156113a457602002820191906000526020600020905b815481526020019060010190808311611390575b50505050508152602001906001019061134c565b5050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561141957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116113fb575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561147157602002820191906000526020600020905b81548152602001906001019080831161145d575b505050505081525050905061148e611487611ecf565b8787611df7565b600086815261022f602052604090205461151357600086815261023260205260408120906114bc82826143b6565b6114ca6001830160006143d4565b6114d86002830160006143d4565b6114e66003830160006143b6565b6114f46004830160006143d4565b6115026005830160006143b6565b6115106006830160006143b6565b50505b81156115295761152430858361221b565b611536565b611536308583888761223c565b8561153f611ecf565b6001600160a01b03167fbea23a5d5d2f9f8870c832f365d0da18b82c673d11b74920d8f613fda6b898bf86888560405161157b9392919061503d565b60405180910390a35050600160335550505050565b600061159e81610b9a611ecf565b6127108211156115f05760405162461bcd60e51b815260206004820152601260248201527f65786365656420726f79616c747920627073000000000000000000000000000060448201526064016109df565b61022b80546001600160a01b0319166001600160a01b03851690811790915561022c80546fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff851617905560408051918252602082018490527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb910160405180910390a1505050565b611683611ecf565b6001600160a01b0316836001600160a01b031614806116a957506116a9836108ca611ecf565b6117085760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b60648201526084016109df565b610dab8383836123b7565b600054610100900460ff1661172e5760005460ff1615611732565b303b155b6117a45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016109df565b600054610100900460ff161580156117c6576000805461ffff19166101011790555b6117ce61260a565b6117d78461267f565b6117ef604051806020016040528060008152506126fe565b8651611803906102279060208a01906143f2565b508551611818906102289060208901906143f2565b5061022b80546001600160a01b0319166001600160a01b03851617905561022c80546fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff841617905584516118779061022d9060208801906143f2565b5061022980546001600160a01b0319166001600160a01b038a1617905561189f600089612772565b6118c97f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a689612772565b6118f37f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c89612772565b8015611905576000805461ff00191690555b5050505050505050565b610229546001600160a01b031660009081527fc88390e7e62175be0932452175b6a7222b6b094ab0ef984a5153c620345d8975602052604081205460ff166119575750600090565b610229546001600160a01b03165b905090565b600082815261012d60205260408120611983908361277c565b9392505050565b600061199881610b9a611ecf565b6119a561022d8484614476565b50505050565b6102288054610a6890614ee4565b60006119c781610b9a611ecf565b612710821115611a195760405162461bcd60e51b815260206004820152601260248201527f65786365656420726f79616c747920627073000000000000000000000000000060448201526064016109df565b6040805180820182526001600160a01b03858116808352602080840187815260008a815261022e8352869020945185546001600160a01b031916941693909317845591516001909301929092558251918252810184905285917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a250505050565b610e48611aae611ecf565b8383612788565b60608167ffffffffffffffff811115611ad057611ad0614641565b604051908082528060200260200182016040528015611b0357816020015b6060815260200190600190039081611aee5790505b50905060005b82811015611ba357611b7330858584818110611b2757611b27614f7e565b9050602002810190611b399190615121565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061287e92505050565b828281518110611b8557611b85614f7e565b60200260200101819052508080611b9b90614f94565b915050611b09565b5092915050565b600081815261012d60205260408120610a0e90612989565b600060026033541415611c175760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109df565b50600260335561022a8054906001906000611c328385615168565b9091555050600081815261023160205260409020611c51908484614476565b506000818152610232602052604090208590611c6d8282615384565b905050611c92611c7b611ecf565b828660405180602001604052806000815250612993565b600081815261023060205260409020849055611cbe611caf611ecf565b30611cb988615540565b61221b565b80611cc7611ecf565b6001600160a01b03167f35369f28fefabac32c27a961cff17f3d99cfa3b8afd4ba90032933b91ae2512f87604051611cff919061578c565b60405180910390a36001603355949350505050565b600082815260fb6020526040902060010154611d3281610b9a611ecf565b610dab83836121f8565b61022d8054610a6890614ee4565b611d52611ecf565b6001600160a01b0316856001600160a01b03161480611d785750611d78856108ca611ecf565b611dea5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016109df565b610d7c8585858585612ab1565b611dff611ecf565b6001600160a01b0316836001600160a01b03161480611e255750611e25836108ca611ecf565b611e845760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b60648201526084016109df565b610dab838383612c60565b60006001600160e01b03198216636cdb3d1360e11b1480611ec057506001600160e01b031982166303a24d0760e21b145b80610a0e5750610a0e82612dea565b6000611965612e0f565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff16610e4857611f17816001600160a01b03166014612e3c565b611f22836020612e3c565b604051602001611f339291906158ad565b60408051601f198184030181529082905262461bcd60e51b82526109df916004016145f8565b8151835114611fbb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016109df565b6001600160a01b03841661201f5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016109df565b6000612029611ecf565b9050612039818787878787612fe5565b60005b845181101561216757600085828151811061205957612059614f7e565b60200260200101519050600085838151811061207757612077614f7e565b60209081029190910181015160008481526101f5835260408082206001600160a01b038e16835290935291909120549091508181101561210c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016109df565b60008381526101f5602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061214c908490615168565b925050819055505050508061216090614f94565b905061203c565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516121b792919061592e565b60405180910390a46121cd818787878787613243565b505050505050565b6121df82826133e9565b600082815261012d60205260409020610dab908261348c565b61220282826134a1565b600082815261012d60205260409020610dab9082613542565b612226838383613557565b61223183838361379a565b610dab838383613937565b82515115801561224f5750606083015151155b61229b5760405162461bcd60e51b815260206004820152601760248201527f63616e6e6f7420756e777261702062792073686172657300000000000000000060448201526064016109df565b60c08301515160a08401515114801561236a5760005b8460a001515181101561236857828560c0015182815181106122d5576122d5614f7e565b60200260200101516122e79190615953565b159150816122f457612368565b600083858760c00151848151811061230e5761230e614f7e565b60200260200101516123209190614f35565b61232a9190614f6a565b90506123558660a00151838151811061234557612345614f7e565b60200260200101518989846139fe565b50612361600182615168565b90506122b1565b505b806121cd5760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642065726332302077726170000000000000000000000000000060448201526064016109df565b6001600160a01b0383166124195760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016109df565b805182511461247b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016109df565b6000612485611ecf565b90506124a581856000868660405180602001604052806000815250612fe5565b60005b83518110156125ab5760008482815181106124c5576124c5614f7e565b6020026020010151905060008483815181106124e3576124e3614f7e565b60209081029190910181015160008481526101f5835260408082206001600160a01b038c1683529093529190912054909150818110156125715760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016109df565b60009283526101f5602090815260408085206001600160a01b038b16865290915290922091039055806125a381614f94565b9150506124a8565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516125fc92919061592e565b60405180910390a450505050565b600054610100900460ff166126755760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109df565b61267d613a48565b565b600054610100900460ff166126ea5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109df565b6126f2613aba565b6126fb81613b25565b50565b600054610100900460ff166127695760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109df565b6126fb81613bf8565b610e4882826121d5565b60006119838383613c6c565b816001600160a01b0316836001600160a01b031614156128105760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016109df565b6001600160a01b0383811660008181526101f66020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606001600160a01b0383163b6128fd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016109df565b600080846001600160a01b0316846040516129189190615967565b600060405180830381855af49150503d8060008114612953576040519150601f19603f3d011682016040523d82523d6000602084013e612958565b606091505b50915091506129808282604051806060016040528060278152602001615b3d60279139613c96565b95945050505050565b6000610a0e825490565b6001600160a01b0384166129f35760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016109df565b60006129fd611ecf565b9050612a1e81600087612a0f88613ccf565b612a1888613ccf565b87612fe5565b60008481526101f5602090815260408083206001600160a01b038916845290915281208054859290612a51908490615168565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d7c81600087878787613d1a565b6001600160a01b038416612b155760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016109df565b6000612b1f611ecf565b9050612b30818787612a0f88613ccf565b60008481526101f5602090815260408083206001600160a01b038a16845290915290205483811015612bb75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016109df565b60008581526101f5602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290612bf7908490615168565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612c57828888888888613d1a565b50505050505050565b6001600160a01b038316612cc25760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016109df565b6000612ccc611ecf565b9050612cfc81856000612cde87613ccf565b612ce787613ccf565b60405180602001604052806000815250612fe5565b60008381526101f5602090815260408083206001600160a01b038816845290915290205482811015612d7c5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016109df565b60008481526101f5602090815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b60006001600160e01b03198216630271189760e51b1480610a0e5750610a0e82613e16565b3360009081526065602052604081205460ff1615612e34575060131936013560601c90565b503390565b90565b60606000612e4b836002614f35565b612e56906002615168565b67ffffffffffffffff811115612e6e57612e6e614641565b6040519080825280601f01601f191660200182016040528015612e98576020820181803683370190505b509050600360fc1b81600081518110612eb357612eb3614f7e565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612ee257612ee2614f7e565b60200101906001600160f81b031916908160001a9053506000612f06846002614f35565b612f11906001615168565b90505b6001811115612f96577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110612f5257612f52614f7e565b1a60f81b828281518110612f6857612f68614f7e565b60200101906001600160f81b031916908160001a90535060049490941c93612f8f81615983565b9050612f14565b5083156119835760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016109df565b600080527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a13126020527f70e64e82d0337f3fa9071fdb3266f859725ed1fc29697b2e6e986b76cffbfb085460ff1615801561304757506001600160a01b03851615155b801561305b57506001600160a01b03841615155b15613135576001600160a01b03851660009081527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a1312602052604090205460ff16806130dd57506001600160a01b03841660009081527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a1312602052604090205460ff165b6131355760405162461bcd60e51b8152602060048201526024808201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526332b9399760e11b60648201526084016109df565b6001600160a01b0385166131bd5760005b83518110156131bb5782818151811061316157613161614f7e565b602002602001015161022f600086848151811061318057613180614f7e565b6020026020010151815260200190815260200160002060008282546131a59190615168565b909155506131b4905081614f94565b9050613146565b505b6001600160a01b0384166121cd5760005b8351811015612c57578281815181106131e9576131e9614f7e565b602002602001015161022f600086848151811061320857613208614f7e565b60200260200101518152602001908152602001600020600082825461322d919061599a565b9091555061323c905081614f94565b90506131ce565b6001600160a01b0384163b156121cd5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061328790899089908890889088906004016159b1565b6020604051808303816000875af19250505080156132c2575060408051601f3d908101601f191682019092526132bf91810190615a0f565b60015b613378576132ce615a2c565b806308c379a0141561330857506132e3615a47565b806132ee575061330a565b8060405162461bcd60e51b81526004016109df91906145f8565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016109df565b6001600160e01b0319811663bc197c8160e01b14612c575760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016109df565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff16610e4857600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055613448611ecf565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611983836001600160a01b038416613e3b565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1615610e4857600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191690556134fe611ecf565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000611983836001600160a01b038416613e8a565b600080600083602001515184600001515114801561357b5750604084015151845151145b9050801561374d57600092505b83515183101561374d57836040015183815181106135a8576135a8614f7e565b602002602001015151846020015184815181106135c7576135c7614f7e565b602002602001015151149050806135dd5761374d565b6000846000015184815181106135f5576135f5614f7e565b60200260200101519050600092505b8460200151848151811061361a5761361a614f7e565b60200260200101515183101561373a57806001600160a01b031663f242432a88888860200151888151811061365157613651614f7e565b6020026020010151878151811061366a5761366a614f7e565b60200260200101518960400151898151811061368857613688614f7e565b602002602001015188815181106136a1576136a1614f7e565b60209081029190910101516040516001600160e01b031960e087901b1681526001600160a01b0394851660048201529390921660248401526044830152606482015260a06084820152600060a482015260c401600060405180830381600087803b15801561370e57600080fd5b505af1158015613722573d6000803e3d6000fd5b505050506001836137339190615168565b9250613604565b50613746600184615168565b9250613588565b806121cd5760405162461bcd60e51b815260206004820152601460248201527f696e76616c69642065726331313535207772617000000000000000000000000060448201526064016109df565b60808101515160608201515160009182911480156138ea57600092505b8360600151518310156138ea576000846060015184815181106137dc576137dc614f7e565b60200260200101519050600092505b8460800151848151811061380157613801614f7e565b6020026020010151518310156138d757806001600160a01b03166342842e0e88888860800151888151811061383857613838614f7e565b6020026020010151878151811061385157613851614f7e565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156138ab57600080fd5b505af11580156138bf573d6000803e3d6000fd5b505050506001836138d09190615168565b92506137eb565b506138e3600184615168565b92506137b7565b806121cd5760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642065726337323120777261700000000000000000000000000060448201526064016109df565b60c08101515160a08201515160009114806139945760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642065726332302077726170000000000000000000000000000060448201526064016109df565b600091505b8260a0015151821015610d7c576139ec8360a0015183815181106139bf576139bf614f7e565b602002602001015186868660c0015186815181106139df576139df614f7e565b60200260200101516139fe565b6139f7600183615168565b9150613999565b80613a08576119a5565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613a3c57613a378282613f7d565b6119a5565b6119a584848484614020565b600054610100900460ff16613ab35760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109df565b6001603355565b600054610100900460ff1661267d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109df565b600054610100900460ff16613b905760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109df565b60005b8151811015610e4857600160656000848481518110613bb457613bb4614f7e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580613bf081614f94565b915050613b93565b600054610100900460ff16613c635760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016109df565b6126fb81614079565b6000826000018281548110613c8357613c83614f7e565b9060005260206000200154905092915050565b60608315613ca5575081611983565b825115613cb55782518084602001fd5b8160405162461bcd60e51b81526004016109df91906145f8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110613d0957613d09614f7e565b602090810291909101015292915050565b6001600160a01b0384163b156121cd5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190613d5e9089908990889088908890600401615ad1565b6020604051808303816000875af1925050508015613d99575060408051601f3d908101601f19168201909252613d9691810190615a0f565b60015b613da5576132ce615a2c565b6001600160e01b0319811663f23a6e6160e01b14612c575760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016109df565b60006001600160e01b03198216635a05180f60e01b1480610a0e5750610a0e8261408d565b6000818152600183016020526040812054613e8257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a0e565b506000610a0e565b60008181526001830160205260408120548015613f73576000613eae60018361599a565b8554909150600090613ec29060019061599a565b9050818114613f27576000866000018281548110613ee257613ee2614f7e565b9060005260206000200154905080876000018481548110613f0557613f05614f7e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080613f3857613f38615b09565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610a0e565b6000915050610a0e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613fca576040519150601f19603f3d011682016040523d82523d6000602084013e613fcf565b606091505b5050905080610dab5760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c65640000000060448201526064016109df565b816001600160a01b0316836001600160a01b0316141561403f576119a5565b6001600160a01b03831630141561406457613a376001600160a01b03851683836140c2565b6119a56001600160a01b03851684848461413a565b8051610e48906101f79060208401906143f2565b60006001600160e01b03198216637965db0b60e01b1480610a0e57506301ffc9a760e01b6001600160e01b0319831614610a0e565b6040516001600160a01b038316602482015260448101829052610dab90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152614172565b6040516001600160a01b03808516602483015283166044820152606481018290526119a59085906323b872dd60e01b906084016140ee565b60006141c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166142579092919063ffffffff16565b805190915015610dab57808060200190518101906141e59190615b1f565b610dab5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016109df565b6060614266848460008561426e565b949350505050565b6060824710156142e65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016109df565b6001600160a01b0385163b61433d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109df565b600080866001600160a01b031685876040516143599190615967565b60006040518083038185875af1925050503d8060008114614396576040519150601f19603f3d011682016040523d82523d6000602084013e61439b565b606091505b50915091506143ab828286613c96565b979650505050505050565b50805460008255906000526020600020908101906126fb91906144ea565b50805460008255906000526020600020908101906126fb91906144ff565b8280546143fe90614ee4565b90600052602060002090601f0160209004810192826144205760008555614466565b82601f1061443957805160ff1916838001178555614466565b82800160010185558215614466579182015b8281111561446657825182559160200191906001019061444b565b506144729291506144ea565b5090565b82805461448290614ee4565b90600052602060002090601f0160209004810192826144a45760008555614466565b82601f106144bd5782800160ff19823516178555614466565b82800160010185558215614466579182015b828111156144665782358255916020019190600101906144cf565b5b8082111561447257600081556001016144eb565b8082111561447257600061451382826143b6565b506001016144ff565b6001600160a01b03811681146126fb57600080fd5b803561453c8161451c565b919050565b6000806040838503121561455457600080fd5b823561455f8161451c565b946020939093013593505050565b6001600160e01b0319811681146126fb57600080fd5b60006020828403121561459557600080fd5b81356119838161456d565b60005b838110156145bb5781810151838201526020016145a3565b838111156119a55750506000910152565b600081518084526145e48160208601602086016145a0565b601f01601f19169290920160200192915050565b60208152600061198360208301846145cc565b60006020828403121561461d57600080fd5b5035919050565b60006020828403121561463657600080fd5b81356119838161451c565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561467d5761467d614641565b6040525050565b60405160e0810167ffffffffffffffff811182821017156146a7576146a7614641565b60405290565b600082601f8301126146be57600080fd5b813567ffffffffffffffff8111156146d8576146d8614641565b6040516146ef601f8301601f191660200182614657565b81815284602083860101111561470457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561473757600080fd5b84356147428161451c565b935060208501356147528161451c565b925060408501359150606085013567ffffffffffffffff81111561477557600080fd5b614781878288016146ad565b91505092959194509250565b600080604083850312156147a057600080fd5b50508035926020909101359150565b600067ffffffffffffffff8211156147c9576147c9614641565b5060051b60200190565b600082601f8301126147e457600080fd5b813560206147f1826147af565b6040516147fe8282614657565b83815260059390931b850182019282810191508684111561481e57600080fd5b8286015b848110156148395780358352918301918301614822565b509695505050505050565b600080600080600060a0868803121561485c57600080fd5b85356148678161451c565b945060208601356148778161451c565b9350604086013567ffffffffffffffff8082111561489457600080fd5b6148a089838a016147d3565b945060608801359150808211156148b657600080fd5b6148c289838a016147d3565b935060808801359150808211156148d857600080fd5b506148e5888289016146ad565b9150509295509295909350565b6000806040838503121561490557600080fd5b8235915060208301356149178161451c565b809150509250929050565b600082601f83011261493357600080fd5b81356020614940826147af565b60405161494d8282614657565b83815260059390931b850182019282810191508684111561496d57600080fd5b8286015b848110156148395780356149848161451c565b8352918301918301614971565b600080604083850312156149a457600080fd5b823567ffffffffffffffff808211156149bc57600080fd5b6149c886838701614922565b935060208501359150808211156149de57600080fd5b506149eb858286016147d3565b9150509250929050565b600081518084526020808501945080840160005b83811015614a2557815187529582019590820190600101614a09565b509495945050505050565b60208152600061198360208301846149f5565b600080600060608486031215614a5857600080fd5b83359250602084013591506040840135614a718161451c565b809150509250925092565b600080600060608486031215614a9157600080fd5b8335614a9c8161451c565b9250602084013567ffffffffffffffff80821115614ab957600080fd5b614ac5878388016147d3565b93506040860135915080821115614adb57600080fd5b50614ae8868287016147d3565b9150509250925092565b600080600080600080600060e0888a031215614b0d57600080fd5b614b1688614531565b9650602088013567ffffffffffffffff80821115614b3357600080fd5b614b3f8b838c016146ad565b975060408a0135915080821115614b5557600080fd5b614b618b838c016146ad565b965060608a0135915080821115614b7757600080fd5b614b838b838c016146ad565b955060808a0135915080821115614b9957600080fd5b50614ba68a828b01614922565b935050614bb560a08901614531565b915060c0880135905092959891949750929550565b60008083601f840112614bdc57600080fd5b50813567ffffffffffffffff811115614bf457600080fd5b602083019150836020828501011115614c0c57600080fd5b9250929050565b60008060208385031215614c2657600080fd5b823567ffffffffffffffff811115614c3d57600080fd5b614c4985828601614bca565b90969095509350505050565b600080600060608486031215614c6a57600080fd5b833592506020840135614c7c8161451c565b929592945050506040919091013590565b80151581146126fb57600080fd5b60008060408385031215614cae57600080fd5b8235614cb98161451c565b9150602083013561491781614c8d565b60008060208385031215614cdc57600080fd5b823567ffffffffffffffff80821115614cf457600080fd5b818501915085601f830112614d0857600080fd5b813581811115614d1757600080fd5b8660208260051b8501011115614d2c57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614d9357603f19888603018452614d818583516145cc565b94509285019290850190600101614d65565b5092979650505050505050565b60008060008060608587031215614db657600080fd5b843567ffffffffffffffff80821115614dce57600080fd5b9086019060e08289031215614de257600080fd5b9094506020860135935060408601359080821115614dff57600080fd5b50614e0c87828801614bca565b95989497509550505050565b60008060408385031215614e2b57600080fd5b8235614e368161451c565b915060208301356149178161451c565b600080600080600060a08688031215614e5e57600080fd5b8535614e698161451c565b94506020860135614e798161451c565b93506040860135925060608601359150608086013567ffffffffffffffff811115614ea357600080fd5b6148e5888289016146ad565b600080600060608486031215614ec457600080fd5b8335614ecf8161451c565b95602085013595506040909401359392505050565b600181811c90821680614ef857607f821691505b60208210811415614f1957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615614f4f57614f4f614f1f565b500290565b634e487b7160e01b600052601260045260246000fd5b600082614f7957614f79614f54565b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415614fa857614fa8614f1f565b5060010190565b600081518084526020808501945080840160005b83811015614a255781516001600160a01b031687529582019590820190600101614fc3565b600081518084526020808501808196508360051b8101915082860160005b8581101561503057828403895261501e8483516149f5565b98850198935090840190600101615006565b5091979650505050505050565b6001600160a01b0384168152826020820152606060408201526000825160e0606084015261506f610140840182614faf565b90506020840151605f198085840301608086015261508d8383614fe8565b925060408601519150808584030160a08601526150aa8383614fe8565b925060608601519150808584030160c08601526150c78383614faf565b925060808601519150808584030160e08601526150e48383614fe8565b925060a0860151915080858403016101008601526151028383614faf565b925060c086015191508085840301610120860152506143ab82826149f5565b6000808335601e1984360301811261513857600080fd5b83018035915067ffffffffffffffff82111561515357600080fd5b602001915036819003821315614c0c57600080fd5b6000821982111561517b5761517b614f1f565b500190565b6000808335601e1984360301811261519757600080fd5b83018035915067ffffffffffffffff8211156151b257600080fd5b6020019150600581901b3603821315614c0c57600080fd5b81831015610dab576000818152602081208481019084015b808210156121cd578282556001820191506151e2565b6801000000000000000083111561521157615211614641565b80548382556152218482846151ca565b50818160005260208060002060005b86811015612c575783356152438161451c565b82546001600160a01b0319166001600160a01b03919091161782559282019260019182019101615230565b805460008083558115610dab57828152602081208281015b80821015610d7c57828255600182019150615286565b680100000000000000008311156152b5576152b5614641565b80548382556152c58482846151ca565b50818160005260208060002060005b86811015612c57578335825592820192600191820191016152d4565b6801000000000000000083111561530957615309614641565b805483825580841015615345576000828152602090208481019082015b80821015615342576153378261526e565b600182019150615326565b50505b5060008181526020812083915b858110156121cd576153648386615180565b61536f81838661529c565b50506020929092019160019182019101615352565b61538e8283615180565b680100000000000000008111156153a7576153a7614641565b82548184556153b78282866151ca565b508260005260208060002060005b838110156154035784356153d88161451c565b82546001600160a01b0319166001600160a01b039190911617825593820193600191820191016153c5565b505061541181860186615180565b93509150506154248282600186016152f0565b50506154336040830183615180565b6154418183600286016152f0565b50506154506060830183615180565b61545e8183600386016151f8565b505061546d6080830183615180565b61547b8183600486016152f0565b505061548a60a0830183615180565b6154988183600586016151f8565b50506154a760c0830183615180565b6119a581836006860161529c565b600082601f8301126154c657600080fd5b813560206154d3826147af565b6040516154e08282614657565b83815260059390931b850182019282810191508684111561550057600080fd5b8286015b8481101561483957803567ffffffffffffffff8111156155245760008081fd5b6155328986838b01016147d3565b845250918301918301615504565b600060e0823603121561555257600080fd5b61555a614684565b823567ffffffffffffffff8082111561557257600080fd5b61557e36838701614922565b8352602085013591508082111561559457600080fd5b6155a0368387016154b5565b602084015260408501359150808211156155b957600080fd5b6155c5368387016154b5565b604084015260608501359150808211156155de57600080fd5b6155ea36838701614922565b6060840152608085013591508082111561560357600080fd5b61560f368387016154b5565b608084015260a085013591508082111561562857600080fd5b61563436838701614922565b60a084015260c085013591508082111561564d57600080fd5b5061565a368286016147d3565b60c08301525092915050565b6000808335601e1984360301811261567d57600080fd5b830160208101925035905067ffffffffffffffff81111561569d57600080fd5b8060051b3603831315614c0c57600080fd5b8183526000602080850194508260005b85811015614a255781356156d28161451c565b6001600160a01b0316875295820195908201906001016156bf565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561571f57600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835260006020808501808196508560051b810191508460005b8781101561503057828403895261576d8288615666565b6157788682846156ed565b9a87019a9550505090840190600101615756565b60208152600061579c8384615666565b60e060208501526157b2610100850182846156af565b9150506157c26020850185615666565b601f19808685030160408701526157da84838561573c565b93506157e96040880188615666565b935091508086850301606087015261580284848461573c565b93506158116060880188615666565b935091508086850301608087015261582a8484846156af565b93506158396080880188615666565b93509150808685030160a087015261585284848461573c565b935061586160a0880188615666565b93509150808685030160c087015261587a8484846156af565b935061588960c0880188615666565b93509150808685030160e0870152506158a38383836156ed565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516158e58160178501602088016145a0565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516159228160288401602088016145a0565b01602801949350505050565b60408152600061594160408301856149f5565b828103602084015261298081856149f5565b60008261596257615962614f54565b500690565b600082516159798184602087016145a0565b9190910192915050565b60008161599257615992614f1f565b506000190190565b6000828210156159ac576159ac614f1f565b500390565b60006001600160a01b03808816835280871660208401525060a060408301526159dd60a08301866149f5565b82810360608401526159ef81866149f5565b90508281036080840152615a0381856145cc565b98975050505050505050565b600060208284031215615a2157600080fd5b81516119838161456d565b600060033d1115612e395760046000803e5060005160e01c90565b600060443d1015615a555790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715615a8557505050505090565b8285019150815181811115615a9d5750505050505090565b843d8701016020828501011115615ab75750505050505090565b615ac660208286010187614657565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526143ab60a08301846145cc565b634e487b7160e01b600052603160045260246000fd5b600060208284031215615b3157600080fd5b815161198381614c8d56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a\";\n\ntype MultiwrapConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: MultiwrapConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Multiwrap__factory extends ContractFactory {\n  constructor(...args: MultiwrapConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Multiwrap\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Multiwrap> {\n    return super.deploy(overrides || {}) as Promise<Multiwrap>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Multiwrap {\n    return super.attach(address) as Multiwrap;\n  }\n  connect(signer: Signer): Multiwrap__factory {\n    return super.connect(signer) as Multiwrap__factory;\n  }\n  static readonly contractName: \"Multiwrap\";\n  public readonly contractName: \"Multiwrap\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MultiwrapInterface {\n    return new utils.Interface(_abi) as MultiwrapInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Multiwrap {\n    return new Contract(address, _abi, signerOrProvider) as Multiwrap;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  ERC1155PresetUpgradeable,\n  ERC1155PresetUpgradeableInterface,\n} from \"../ERC1155PresetUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"burnBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mintBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155BatchReceived\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n\ntype ERC1155PresetUpgradeableConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ERC1155PresetUpgradeableConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class ERC1155PresetUpgradeable__factory extends ContractFactory {\n  constructor(...args: ERC1155PresetUpgradeableConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"ERC1155PresetUpgradeable\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ERC1155PresetUpgradeable> {\n    return super.deploy(overrides || {}) as Promise<ERC1155PresetUpgradeable>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): ERC1155PresetUpgradeable {\n    return super.attach(address) as ERC1155PresetUpgradeable;\n  }\n  connect(signer: Signer): ERC1155PresetUpgradeable__factory {\n    return super.connect(signer) as ERC1155PresetUpgradeable__factory;\n  }\n  static readonly contractName: \"ERC1155PresetUpgradeable\";\n  public readonly contractName: \"ERC1155PresetUpgradeable\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ERC1155PresetUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC1155PresetUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC1155PresetUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC1155PresetUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  PaymentSplitterUpgradeable,\n  PaymentSplitterUpgradeableInterface,\n} from \"../PaymentSplitterUpgradeable\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"contract IERC20Upgradeable\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ERC20PaymentReleased\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"shares\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PayeeAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PaymentReceived\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PaymentReleased\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"payee\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"payeeCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address payable\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"release\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20Upgradeable\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"release\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20Upgradeable\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"released\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"released\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"shares\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20Upgradeable\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"totalReleased\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalReleased\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalShares\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50610c8d806100206000396000f3fe6080604052600436106100b45760003560e01c80638b83209b11610069578063ce7c2ac21161004e578063ce7c2ac214610231578063d79779b214610267578063e33b7de31461029d57600080fd5b80638b83209b146101c35780639852595c146101fb57600080fd5b80633a98ef391161009a5780633a98ef3914610148578063406072a91461015d57806348b75044146101a357600080fd5b8062dbe10914610102578063191655871461012657600080fd5b366100fd577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b34801561010e57600080fd5b506037545b6040519081526020015b60405180910390f35b34801561013257600080fd5b50610146610141366004610abb565b6102b2565b005b34801561015457600080fd5b50603354610113565b34801561016957600080fd5b50610113610178366004610ad8565b6001600160a01b03918216600090815260396020908152604080832093909416825291909152205490565b3480156101af57600080fd5b506101466101be366004610ad8565b610468565b3480156101cf57600080fd5b506101e36101de366004610b11565b6106c4565b6040516001600160a01b03909116815260200161011d565b34801561020757600080fd5b50610113610216366004610abb565b6001600160a01b031660009081526036602052604090205490565b34801561023d57600080fd5b5061011361024c366004610abb565b6001600160a01b031660009081526035602052604090205490565b34801561027357600080fd5b50610113610282366004610abb565b6001600160a01b031660009081526038602052604090205490565b3480156102a957600080fd5b50603454610113565b6001600160a01b03811660009081526035602052604090205461032b5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b600061033660345490565b6103409047610b40565b9050600061036d8383610368866001600160a01b031660009081526036602052604090205490565b6106f4565b9050806103d05760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610322565b6001600160a01b038316600090815260366020526040812080548392906103f8908490610b40565b9250508190555080603460008282546104119190610b40565b909155506104219050838261073c565b604080516001600160a01b0385168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1505050565b6001600160a01b0381166000908152603560205260409020546104dc5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b6064820152608401610322565b6001600160a01b0382166000908152603860205260408120546040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190610b58565b6105679190610b40565b905060006105a0838361036887876001600160a01b03918216600090815260396020908152604080832093909416825291909152205490565b9050806106035760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610322565b6001600160a01b0380851660009081526039602090815260408083209387168352929052908120805483929061063a908490610b40565b90915550506001600160a01b03841660009081526038602052604081208054839290610667908490610b40565b90915550610678905084848361085a565b604080516001600160a01b038581168252602082018490528616917f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a910160405180910390a250505050565b6000603782815481106106d9576106d9610b71565b6000918252602090912001546001600160a01b031692915050565b6033546001600160a01b0384166000908152603560205260408120549091839161071e9086610b87565b6107289190610ba6565b6107329190610bc8565b90505b9392505050565b8047101561078c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610322565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107d9576040519150601f19603f3d011682016040523d82523d6000602084013e6107de565b606091505b50509050806108555760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610322565b505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610855928692916000916108ff91851690849061098f565b805190915015610855578080602001905181019061091d9190610bdf565b6108555760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610322565b60606107328484600085856001600160a01b0385163b6109f15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610322565b600080866001600160a01b03168587604051610a0d9190610c31565b60006040518083038185875af1925050503d8060008114610a4a576040519150601f19603f3d011682016040523d82523d6000602084013e610a4f565b606091505b5091509150610a5f828286610a6a565b979650505050505050565b60608315610a79575081610735565b825115610a895782518084602001fd5b8160405162461bcd60e51b81526004016103229190610c4d565b6001600160a01b0381168114610ab857600080fd5b50565b600060208284031215610acd57600080fd5b813561073581610aa3565b60008060408385031215610aeb57600080fd5b8235610af681610aa3565b91506020830135610b0681610aa3565b809150509250929050565b600060208284031215610b2357600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b5357610b53610b2a565b500190565b600060208284031215610b6a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610ba157610ba1610b2a565b500290565b600082610bc357634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610bda57610bda610b2a565b500390565b600060208284031215610bf157600080fd5b8151801515811461073557600080fd5b60005b83811015610c1c578181015183820152602001610c04565b83811115610c2b576000848401525b50505050565b60008251610c43818460208701610c01565b9190910192915050565b6020815260008251806020840152610c6c816040850160208701610c01565b601f01601f1916919091016040019291505056fea164736f6c634300080c000a\";\n\ntype PaymentSplitterUpgradeableConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: PaymentSplitterUpgradeableConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class PaymentSplitterUpgradeable__factory extends ContractFactory {\n  constructor(...args: PaymentSplitterUpgradeableConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"PaymentSplitterUpgradeable\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<PaymentSplitterUpgradeable> {\n    return super.deploy(overrides || {}) as Promise<PaymentSplitterUpgradeable>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): PaymentSplitterUpgradeable {\n    return super.attach(address) as PaymentSplitterUpgradeable;\n  }\n  connect(signer: Signer): PaymentSplitterUpgradeable__factory {\n    return super.connect(signer) as PaymentSplitterUpgradeable__factory;\n  }\n  static readonly contractName: \"PaymentSplitterUpgradeable\";\n  public readonly contractName: \"PaymentSplitterUpgradeable\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): PaymentSplitterUpgradeableInterface {\n    return new utils.Interface(_abi) as PaymentSplitterUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): PaymentSplitterUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as PaymentSplitterUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  ERC2771ContextUpgradeable,\n  ERC2771ContextUpgradeableInterface,\n} from \"../ERC2771ContextUpgradeable\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class ERC2771ContextUpgradeable__factory {\n  static readonly abi = _abi;\n  static createInterface(): ERC2771ContextUpgradeableInterface {\n    return new utils.Interface(_abi) as ERC2771ContextUpgradeableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ERC2771ContextUpgradeable {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ERC2771ContextUpgradeable;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Pack, PackInterface } from \"../Pack\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_vrfCoordinator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_linkToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_thirdwebFee\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"packId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"rewardContract\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"creator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"packTotalSupply\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"address\",\n            name: \"creator\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"openStart\",\n            type: \"uint256\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct Pack.PackState\",\n        name: \"packState\",\n        type: \"tuple\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"source\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"tokenIds\",\n            type: \"uint256[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"amountsPacked\",\n            type: \"uint256[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"rewardsPerOpen\",\n            type: \"uint256\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct Pack.Rewards\",\n        name: \"rewards\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"PackAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"packId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"opener\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"requestId\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"rewardContract\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"rewardIds\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"PackOpenFulfilled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"packId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"opener\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"requestId\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"PackOpenRequested\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"burnBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"currentRequestId\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_packId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPackWithRewards\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"address\",\n            name: \"creator\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"openStart\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Pack.PackState\",\n        name: \"pack\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"packTotalSupply\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"source\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"tokenIds\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amountsPacked\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_royaltyBps\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_fees\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"_keyHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mintBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"nextTokenId\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"_ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"_values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155BatchReceived\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_packId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"openPack\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"packs\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"uri\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address\",\n        name: \"creator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"openStart\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"randomnessRequests\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"packId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"opener\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"requestId\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"randomness\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"rawFulfillRandomness\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"rewards\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"source\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"rewardsPerOpen\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_newFees\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setChainlinkFees\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"thirdwebFee\",\n    outputs: [\n      {\n        internalType: \"contract ITWFee\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawLink\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n\ntype PackConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: PackConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Pack__factory extends ContractFactory {\n  constructor(...args: PackConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Pack\";\n  }\n\n  deploy(\n    _vrfCoordinator: string,\n    _linkToken: string,\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Pack> {\n    return super.deploy(\n      _vrfCoordinator,\n      _linkToken,\n      _thirdwebFee,\n      overrides || {}\n    ) as Promise<Pack>;\n  }\n  getDeployTransaction(\n    _vrfCoordinator: string,\n    _linkToken: string,\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _vrfCoordinator,\n      _linkToken,\n      _thirdwebFee,\n      overrides || {}\n    );\n  }\n  attach(address: string): Pack {\n    return super.attach(address) as Pack;\n  }\n  connect(signer: Signer): Pack__factory {\n    return super.connect(signer) as Pack__factory;\n  }\n  static readonly contractName: \"Pack\";\n  public readonly contractName: \"Pack\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): PackInterface {\n    return new utils.Interface(_abi) as PackInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Pack {\n    return new Contract(address, _abi, signerOrProvider) as Pack;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Split, SplitInterface } from \"../Split\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_thirdwebFee\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"contract IERC20Upgradeable\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ERC20PaymentReleased\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"shares\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PayeeAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PaymentReceived\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PaymentReleased\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20Upgradeable\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"distribute\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"distribute\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_payees\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"_shares\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"payee\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"payeeCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address payable\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"release\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20Upgradeable\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"release\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20Upgradeable\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"released\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"released\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"shares\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"thirdwebFee\",\n    outputs: [\n      {\n        internalType: \"contract ITWFee\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IERC20Upgradeable\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"totalReleased\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalReleased\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalShares\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a06040523480156200001157600080fd5b5060405162002c4e38038062002c4e83398101604081905262000034916200013b565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b6200010e565b620000c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000e6576000805461ffff19166101011790555b6001600160a01b038216608052801562000106576000805461ff00191690555b50506200016d565b600062000126306200012c60201b62000c451760201c565b15905090565b6001600160a01b03163b151590565b6000602082840312156200014e57600080fd5b81516001600160a01b03811681146200016657600080fd5b9392505050565b608051612ab762000197600039600081816105e601528181610dea01526111a20152612ab76000f3fe6080604052600436106101c55760003560e01c8063938e3d7b116100f7578063cb2ef6f711610095578063d79779b211610064578063d79779b214610628578063e33b7de31461065f578063e4fc6b6d14610675578063e8a3d4851461068a57600080fd5b8063cb2ef6f71461056a578063ce7c2ac21461059d578063cf8267b1146105d4578063d547741f1461060857600080fd5b8063a217fddf116100d1578063a217fddf146104e8578063ac9650d8146104fd578063b1a144371461052a578063ca15c8731461054a57600080fd5b8063938e3d7b146104755780639852595c14610495578063a0a8e460146104cc57600080fd5b8063406072a91161016457806363453ae11161013e57806363453ae1146103b75780638b83209b146103d75780639010d07c1461040f57806391d148541461042f57600080fd5b8063406072a91461031757806348b750441461035e578063572b6c051461037e57600080fd5b8063248a9ca3116101a0578063248a9ca3146102915780632f2ff15d146102c157806336568abe146102e15780633a98ef391461030157600080fd5b8062dbe1091461021a57806301ffc9a71461023f578063191655871461026f57600080fd5b36610215577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be7706101f36106ac565b604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b34801561022657600080fd5b50610131545b6040519081526020015b60405180910390f35b34801561024b57600080fd5b5061025f61025a36600461232b565b6106bb565b6040519015158152602001610236565b34801561027b57600080fd5b5061028f61028a36600461236a565b6106e6565b005b34801561029d57600080fd5b5061022c6102ac366004612387565b600090815260c9602052604090206001015490565b3480156102cd57600080fd5b5061028f6102dc3660046123a0565b61075d565b3480156102ed57600080fd5b5061028f6102fc3660046123a0565b61078f565b34801561030d57600080fd5b5061012d5461022c565b34801561032357600080fd5b5061022c6103323660046123d0565b6001600160a01b0391821660009081526101336020908152604080832093909416825291909152205490565b34801561036a57600080fd5b5061028f6103793660046123d0565b610827565b34801561038a57600080fd5b5061025f61039936600461236a565b6001600160a01b031660009081526065602052604090205460ff1690565b3480156103c357600080fd5b5061028f6103d236600461236a565b610896565b3480156103e357600080fd5b506103f76103f2366004612387565b6108d4565b6040516001600160a01b039091168152602001610236565b34801561041b57600080fd5b506103f761042a3660046123fe565b610905565b34801561043b57600080fd5b5061025f61044a3660046123a0565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561048157600080fd5b5061028f610490366004612420565b610924565b3480156104a157600080fd5b5061022c6104b036600461236a565b6001600160a01b03166000908152610130602052604090205490565b3480156104d857600080fd5b5060405160018152602001610236565b3480156104f457600080fd5b5061022c600081565b34801561050957600080fd5b5061051d610518366004612492565b610945565b604051610236919061254d565b34801561053657600080fd5b5061028f6105453660046126e9565b610a3a565b34801561055657600080fd5b5061022c610565366004612387565b610b3a565b34801561057657600080fd5b507f53706c697400000000000000000000000000000000000000000000000000000061022c565b3480156105a957600080fd5b5061022c6105b836600461236a565b6001600160a01b0316600090815261012f602052604090205490565b3480156105e057600080fd5b506103f77f000000000000000000000000000000000000000000000000000000000000000081565b34801561061457600080fd5b5061028f6106233660046123a0565b610b51565b34801561063457600080fd5b5061022c61064336600461236a565b6001600160a01b03166000908152610132602052604090205490565b34801561066b57600080fd5b5061012e5461022c565b34801561068157600080fd5b5061028f610b79565b34801561069657600080fd5b5061069f610bb6565b60405161023691906127fd565b60006106b6610c54565b905090565b60006001600160e01b03198216635a05180f60e01b14806106e057506106e082610c7e565b92915050565b60006106f182610cb3565b9050806107595760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b60648201526084015b60405180910390fd5b5050565b600082815260c960205260409020600101546107808161077b6106ac565b610f01565b61078a8383610f81565b505050565b6107976106ac565b6001600160a01b0316816001600160a01b03161461081d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610750565b6107598282610fa3565b60006108338383610fc5565b90508061078a5760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610750565b60006108a26101315490565b905060005b8181101561078a576108c1836108bc836108d4565b610fc5565b50806108cc81612826565b9150506108a7565b600061013182815481106108ea576108ea612841565b6000918252602090912001546001600160a01b031692915050565b600082815260fb6020526040812061091d90836112c0565b9392505050565b60006109328161077b6106ac565b61093f61015f848461221e565b50505050565b60608167ffffffffffffffff811115610960576109606125af565b60405190808252806020026020018201604052801561099357816020015b606081526020019060019003908161097e5790505b50905060005b82811015610a3357610a03308585848181106109b7576109b7612841565b90506020028101906109c99190612857565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112cc92505050565b828281518110610a1557610a15612841565b60200260200101819052508080610a2b90612826565b915050610999565b5092915050565b600054610100900460ff16610a555760005460ff1615610a59565b303b155b610acb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610750565b600054610100900460ff16158015610aed576000805461ffff19166101011790555b610af6846113d7565b610b008383611456565b8451610b149061015f9060208801906122a2565b50610b206000876114d3565b8015610b32576000805461ff00191690555b505050505050565b600081815260fb602052604081206106e0906114dd565b600082815260c96020526040902060010154610b6f8161077b6106ac565b61078a8383610fa3565b6000610b856101315490565b905060005b8181101561075957610ba3610b9e826108d4565b610cb3565b5080610bae81612826565b915050610b8a565b61015f8054610bc4906128a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf0906128a5565b8015610c3d5780601f10610c1257610100808354040283529160200191610c3d565b820191906000526020600020905b815481529060010190602001808311610c2057829003601f168201915b505050505081565b6001600160a01b03163b151590565b3360009081526065602052604081205460ff1615610c79575060131936013560601c90565b503390565b60006001600160e01b03198216637965db0b60e01b14806106e057506301ffc9a760e01b6001600160e01b03198316146106e0565b6001600160a01b038116600090815261012f60205260408120548110610d2a5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b6064820152608401610750565b6000610d3661012e5490565b610d4090476128e0565b90506000610d6e8483610d69876001600160a01b03166000908152610130602052604090205490565b6114e7565b905080610d7f575060009392505050565b6001600160a01b0384166000908152610130602052604081208054839290610da89084906128e0565b925050819055508061012e6000828254610dc291906128e0565b909155505060405163085b49ad60e41b815230600482015260026024820152600090819081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906385b49ad0906044016040805180830381865afa158015610e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5c91906128f8565b90925090506001600160a01b03821615801590610e795750600081115b15610ea157612710610e8b8286612926565b610e959190612945565b9250610ea1828461152f565b610eb487610eaf8587612967565b61152f565b604080516001600160a01b0389168152602081018690527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1509195945050505050565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661075957610f3f816001600160a01b03166014611648565b610f4a836020611648565b604051602001610f5b92919061297e565b60408051601f198184030181529082905262461bcd60e51b8252610750916004016127fd565b610f8b82826117f1565b600082815260fb6020526040902061078a9082611894565b610fad82826118a9565b600082815260fb6020526040902061078a908261194a565b6001600160a01b038116600090815261012f6020526040812054811061103c5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b6064820152608401610750565b6001600160a01b038316600090815261013260205260408120546040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa15801561109a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110be91906129ff565b6110c891906128e0565b905060006111028483610d6988886001600160a01b0391821660009081526101336020908152604080832093909416825291909152205490565b905080611114576000925050506106e0565b6001600160a01b038086166000908152610133602090815260408083209388168352929052908120805483929061114c9084906128e0565b90915550506001600160a01b038516600090815261013260205260408120805483929061117a9084906128e0565b909155505060405163085b49ad60e41b815230600482015260026024820152600090819081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906385b49ad0906044016040805180830381865afa1580156111f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121491906128f8565b90925090506001600160a01b038216158015906112315750600081115b1561125a576127106112438286612926565b61124d9190612945565b925061125a88838561195f565b61126e88886112698688612967565b61195f565b604080516001600160a01b038981168252602082018790528a16917f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a910160405180910390a250919695505050505050565b600061091d83836119c6565b60606001600160a01b0383163b61134b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610750565b600080846001600160a01b0316846040516113669190612a18565b600060405180830381855af49150503d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b50915091506113ce8282604051806060016040528060278152602001612a84602791396119f0565b95945050505050565b600054610100900460ff166114425760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610750565b61144a611a29565b61145381611a96565b50565b600054610100900460ff166114c15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610750565b6114c9611a29565b6107598282611b69565b6107598282610f81565b60006106e0825490565b61012d546001600160a01b038416600090815261012f6020526040812054909183916115139086612926565b61151d9190612945565b6115279190612967565b949350505050565b8047101561157f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610750565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146115cc576040519150601f19603f3d011682016040523d82523d6000602084013e6115d1565b606091505b505090508061078a5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610750565b60606000611657836002612926565b6116629060026128e0565b67ffffffffffffffff81111561167a5761167a6125af565b6040519080825280601f01601f1916602001820160405280156116a4576020820181803683370190505b509050600360fc1b816000815181106116bf576116bf612841565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106116ee576116ee612841565b60200101906001600160f81b031916908160001a9053506000611712846002612926565b61171d9060016128e0565b90505b60018111156117a2577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061175e5761175e612841565b1a60f81b82828151811061177457611774612841565b60200101906001600160f81b031916908160001a90535060049490941c9361179b81612a34565b9050611720565b50831561091d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610750565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661075957600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff191660011790556118506106ac565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061091d836001600160a01b038416611cf6565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff161561075957600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff191690556119066106ac565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061091d836001600160a01b038416611d45565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261078a908490611e38565b60008260000182815481106119dd576119dd612841565b9060005260206000200154905092915050565b606083156119ff57508161091d565b825115611a0f5782518084602001fd5b8160405162461bcd60e51b815260040161075091906127fd565b600054610100900460ff16611a945760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610750565b565b600054610100900460ff16611b015760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610750565b60005b815181101561075957600160656000848481518110611b2557611b25612841565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580611b6181612826565b915050611b04565b600054610100900460ff16611bd45760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610750565b8051825114611c4b5760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e64207368617260448201527f6573206c656e677468206d69736d6174636800000000000000000000000000006064820152608401610750565b6000825111611c9c5760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f207061796565730000000000006044820152606401610750565b60005b825181101561078a57611ce4838281518110611cbd57611cbd612841565b6020026020010151838381518110611cd757611cd7612841565b6020026020010151611f1d565b80611cee81612826565b915050611c9f565b6000818152600183016020526040812054611d3d575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556106e0565b5060006106e0565b60008181526001830160205260408120548015611e2e576000611d69600183612967565b8554909150600090611d7d90600190612967565b9050818114611de2576000866000018281548110611d9d57611d9d612841565b9060005260206000200154905080876000018481548110611dc057611dc0612841565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611df357611df3612a4b565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506106e0565b60009150506106e0565b6000611e8d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121439092919063ffffffff16565b80519091501561078a5780806020019051810190611eab9190612a61565b61078a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610750565b6001600160a01b038216611f995760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201527f7a65726f206164647265737300000000000000000000000000000000000000006064820152608401610750565b60008111611fe95760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a207368617265732061726520300000006044820152606401610750565b6001600160a01b038216600090815261012f6020526040902054156120765760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201527f20686173207368617265730000000000000000000000000000000000000000006064820152608401610750565b6101318054600181019091557fbd987ad6ccdb7c7567f7335ea839f95dc944431abcf935b6924f70215963db730180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038416908117909155600090815261012f6020526040902081905561012d546120f99082906128e0565b61012d55604080516001600160a01b0384168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b60606115278484600085856001600160a01b0385163b6121a55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610750565b600080866001600160a01b031685876040516121c19190612a18565b60006040518083038185875af1925050503d80600081146121fe576040519150601f19603f3d011682016040523d82523d6000602084013e612203565b606091505b50915091506122138282866119f0565b979650505050505050565b82805461222a906128a5565b90600052602060002090601f01602090048101928261224c5760008555612292565b82601f106122655782800160ff19823516178555612292565b82800160010185558215612292579182015b82811115612292578235825591602001919060010190612277565b5061229e929150612316565b5090565b8280546122ae906128a5565b90600052602060002090601f0160209004810192826122d05760008555612292565b82601f106122e957805160ff1916838001178555612292565b82800160010185558215612292579182015b828111156122925782518255916020019190600101906122fb565b5b8082111561229e5760008155600101612317565b60006020828403121561233d57600080fd5b81356001600160e01b03198116811461091d57600080fd5b6001600160a01b038116811461145357600080fd5b60006020828403121561237c57600080fd5b813561091d81612355565b60006020828403121561239957600080fd5b5035919050565b600080604083850312156123b357600080fd5b8235915060208301356123c581612355565b809150509250929050565b600080604083850312156123e357600080fd5b82356123ee81612355565b915060208301356123c581612355565b6000806040838503121561241157600080fd5b50508035926020909101359150565b6000806020838503121561243357600080fd5b823567ffffffffffffffff8082111561244b57600080fd5b818501915085601f83011261245f57600080fd5b81358181111561246e57600080fd5b86602082850101111561248057600080fd5b60209290920196919550909350505050565b600080602083850312156124a557600080fd5b823567ffffffffffffffff808211156124bd57600080fd5b818501915085601f8301126124d157600080fd5b8135818111156124e057600080fd5b8660208260051b850101111561248057600080fd5b60005b838110156125105781810151838201526020016124f8565b8381111561093f5750506000910152565b600081518084526125398160208601602086016124f5565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156125a257603f19888603018452612590858351612521565b94509285019290850190600101612574565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156125ee576125ee6125af565b604052919050565b600067ffffffffffffffff821115612610576126106125af565b5060051b60200190565b600082601f83011261262b57600080fd5b8135602061264061263b836125f6565b6125c5565b82815260059290921b8401810191818101908684111561265f57600080fd5b8286015b8481101561268357803561267681612355565b8352918301918301612663565b509695505050505050565b600082601f83011261269f57600080fd5b813560206126af61263b836125f6565b82815260059290921b840181019181810190868411156126ce57600080fd5b8286015b8481101561268357803583529183019183016126d2565b600080600080600060a0868803121561270157600080fd5b853561270c81612355565b945060208681013567ffffffffffffffff8082111561272a57600080fd5b818901915089601f83011261273e57600080fd5b813581811115612750576127506125af565b612762601f8201601f191685016125c5565b8181528b8583860101111561277657600080fd5b818585018683013760009181019094018190529296506040890135929150808311156127a0578182fd5b6127ac8a848b0161261a565b955060608901359250808311156127c1578182fd5b6127cd8a848b0161261a565b945060808901359250808311156127e2578182fd5b50506127f08882890161268e565b9150509295509295909350565b60208152600061091d6020830184612521565b634e487b7160e01b600052601160045260246000fd5b600060001982141561283a5761283a612810565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261286e57600080fd5b83018035915067ffffffffffffffff82111561288957600080fd5b60200191503681900382131561289e57600080fd5b9250929050565b600181811c908216806128b957607f821691505b602082108114156128da57634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156128f3576128f3612810565b500190565b6000806040838503121561290b57600080fd5b825161291681612355565b6020939093015192949293505050565b600081600019048311821515161561294057612940612810565b500290565b60008261296257634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561297957612979612810565b500390565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516129b68160178501602088016124f5565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516129f38160288401602088016124f5565b01602801949350505050565b600060208284031215612a1157600080fd5b5051919050565b60008251612a2a8184602087016124f5565b9190910192915050565b600081612a4357612a43612810565b506000190190565b634e487b7160e01b600052603160045260246000fd5b600060208284031215612a7357600080fd5b8151801515811461091d57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a\";\n\ntype SplitConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: SplitConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Split__factory extends ContractFactory {\n  constructor(...args: SplitConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Split\";\n  }\n\n  deploy(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Split> {\n    return super.deploy(_thirdwebFee, overrides || {}) as Promise<Split>;\n  }\n  getDeployTransaction(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_thirdwebFee, overrides || {});\n  }\n  attach(address: string): Split {\n    return super.attach(address) as Split;\n  }\n  connect(signer: Signer): Split__factory {\n    return super.connect(signer) as Split__factory;\n  }\n  static readonly contractName: \"Split\";\n  public readonly contractName: \"Split\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): SplitInterface {\n    return new utils.Interface(_abi) as SplitInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Split {\n    return new Contract(address, _abi, signerOrProvider) as Split;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { TokenERC1155, TokenERC1155Interface } from \"../TokenERC1155\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_thirdwebFee\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdMinted\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"uri\",\n        type: \"string\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityMinted\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdMinted\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct ITokenERC1155.MintRequest\",\n        name: \"mintRequest\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensMintedWithSignature\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"TransferBatch\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TransferSingle\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"value\",\n        type: \"string\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"URI\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"accounts\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"balanceOfBatch\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"burnBatch\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_primarySaleRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_royaltyBps\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_platformFeeBps\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mintTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC1155.MintRequest\",\n        name: \"_req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mintWithSignature\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"nextTokenIdToMint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"platformFeeBps\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"platformFeeRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ids\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeBatchTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"saleRecipientForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"thirdwebFee\",\n    outputs: [\n      {\n        internalType: \"contract ITWFee\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"uri\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"tokenId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"pricePerToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC1155.MintRequest\",\n        name: \"_req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"verify\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a06040523480156200001157600080fd5b5060405162005a9138038062005a9183398101604081905262000034916200013b565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b6200010e565b620000c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000e6576000805461ffff19166101011790555b6001600160a01b038216608052801562000106576000805461ff00191690555b50506200016d565b600062000126306200012c60201b62001db41760201c565b15905090565b6001600160a01b03163b151590565b6000602082840312156200014e57600080fd5b81516001600160a01b03811681146200016657600080fd5b9392505050565b60805161590162000190600039600081816108cd015261264d01526159016000f3fe6080604052600436106103075760003560e01c8063938e3d7b1161019a578063ca15c873116100e1578063e8a3d4851161008a578063eb13554f11610064578063eb13554f146109fb578063f242432a14610a1c578063f5298aca14610a3c57600080fd5b8063e8a3d48514610965578063e985e9c51461097a578063ea500d69146109c457600080fd5b8063d45573f6116100bb578063d45573f6146108ef578063d547741f14610925578063e15916341461094557600080fd5b8063ca15c87314610879578063cb2ef6f714610899578063cf8267b1146108bb57600080fd5b8063a22cb46511610143578063b17cd86f1161011d578063b17cd86f146107dd578063b24f2d391461081c578063bd85b0391461084b57600080fd5b8063a22cb46514610770578063ac9650d814610790578063b03f4528146107bd57600080fd5b80639bcf7a15116101745780639bcf7a151461071f578063a0a8e4601461073f578063a217fddf1461075b57600080fd5b8063938e3d7b146106d757806395d89b41146106f757806398a6e9931461070c57600080fd5b80632f2ff15d1161025e578063600dd5ea116102075780638da5cb5b116101e15780638da5cb5b1461065b5780639010d07c1461067057806391d148541461069057600080fd5b8063600dd5ea146105fb5780636b20c4541461061b5780636f4f28371461063b57600080fd5b80634cc157df116102385780634cc157df146105535780634e1273f414610595578063572b6c05146105c257600080fd5b80632f2ff15d146104fc57806336568abe1461051c5780633b1475a71461053c57600080fd5b806313af4035116102c0578063248a9ca31161029a578063248a9ca31461046c5780632a55205a1461049d5780632eb2c2d6146104dc57600080fd5b806313af4035146103ea5780631e7ac4881461040c57806322dcd13e1461042c57600080fd5b806306fdde03116102f157806306fdde031461036f578063079fe40e146103915780630e89341c146103ca57600080fd5b8062fdd58e1461030c57806301ffc9a71461033f575b600080fd5b34801561031857600080fd5b5061032c6103273660046147c7565b610a5c565b6040519081526020015b60405180910390f35b34801561034b57600080fd5b5061035f61035a366004614809565b610b0b565b6040519015158152602001610336565b34801561037b57600080fd5b50610384610b51565b604051610336919061487e565b34801561039d57600080fd5b506101c9546103b2906001600160a01b031681565b6040516001600160a01b039091168152602001610336565b3480156103d657600080fd5b506103846103e5366004614891565b610be0565b3480156103f657600080fd5b5061040a6104053660046148aa565b610c83565b005b34801561041857600080fd5b5061040a6104273660046147c7565b610d81565b34801561043857600080fd5b506101cc5461045490600160801b90046001600160801b031681565b6040516001600160801b039091168152602001610336565b34801561047857600080fd5b5061032c610487366004614891565b600090815261012f602052604090206001015490565b3480156104a957600080fd5b506104bd6104b83660046148c7565b610e58565b604080516001600160a01b039093168352602083019190915201610336565b3480156104e857600080fd5b5061040a6104f7366004614a5f565b610e95565b34801561050857600080fd5b5061040a610517366004614b0d565b610f49565b34801561052857600080fd5b5061040a610537366004614b0d565b610f77565b34801561054857600080fd5b5061032c6101c85481565b34801561055f57600080fd5b5061057361056e366004614891565b611013565b604080516001600160a01b03909316835261ffff909116602083015201610336565b3480156105a157600080fd5b506105b56105b0366004614bac565b611083565b6040516103369190614c4b565b3480156105ce57600080fd5b5061035f6105dd3660046148aa565b6001600160a01b031660009081526099602052604090205460ff1690565b34801561060757600080fd5b5061040a6106163660046147c7565b6111c1565b34801561062757600080fd5b5061040a610636366004614c5e565b61129b565b34801561064757600080fd5b5061040a6106563660046148aa565b611333565b34801561066757600080fd5b506103b261138d565b34801561067c57600080fd5b506103b261068b3660046148c7565b6113e8565b34801561069c57600080fd5b5061035f6106ab366004614b0d565b600091825261012f602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156106e357600080fd5b5061040a6106f2366004614d16565b611408565b34801561070357600080fd5b50610384611429565b61040a61071a366004614d58565b611437565b34801561072b57600080fd5b5061040a61073a366004614dca565b61165b565b34801561074b57600080fd5b5060405160018152602001610336565b34801561076757600080fd5b5061032c600081565b34801561077c57600080fd5b5061040a61078b366004614e10565b611745565b34801561079c57600080fd5b506107b06107ab366004614e3e565b611757565b6040516103369190614eb3565b3480156107c957600080fd5b5061040a6107d8366004614f15565b61184c565b3480156107e957600080fd5b506107fd6107f8366004614d58565b6118fe565b6040805192151583526001600160a01b03909116602083015201610336565b34801561082857600080fd5b506101cb546101cc546001600160a01b03909116906001600160801b0316610573565b34801561085757600080fd5b5061032c610866366004614891565b6101d06020526000908152604090205481565b34801561088557600080fd5b5061032c610894366004614891565b611976565b3480156108a557600080fd5b506b546f6b656e4552433131353560a01b61032c565b3480156108c757600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b3480156108fb57600080fd5b506101ca546101cc546001600160a01b0390911690600160801b90046001600160801b0316610573565b34801561093157600080fd5b5061040a610940366004614b0d565b61198e565b34801561095157600080fd5b5061040a610960366004614f90565b6119b7565b34801561097157600080fd5b50610384611c61565b34801561098657600080fd5b5061035f6109953660046150a3565b6001600160a01b0391821660009081526101946020908152604080832093909416825291909152205460ff1690565b3480156109d057600080fd5b506103b26109df366004614891565b6101d1602052600090815260409020546001600160a01b031681565b348015610a0757600080fd5b506101ca546103b2906001600160a01b031681565b348015610a2857600080fd5b5061040a610a373660046150d1565b611c6f565b348015610a4857600080fd5b5061040a610a5736600461513a565b611d1c565b60006001600160a01b038316610adf5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152610193602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610b1682611dc3565b80610b3157506001600160e01b03198216636cdb3d1360e11b145b80610b0557506001600160e01b0319821663152a902d60e11b1492915050565b6101c58054610b5f9061516f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8b9061516f565b8015610bd85780601f10610bad57610100808354040283529160200191610bd8565b820191906000526020600020905b815481529060010190602001808311610bbb57829003601f168201915b505050505081565b60008181526101cf60205260409020805460609190610bfe9061516f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2a9061516f565b8015610c775780601f10610c4c57610100808354040283529160200191610c77565b820191906000526020600020905b815481529060010190602001808311610c5a57829003601f168201915b50505050509050919050565b6000610c9681610c91611e03565b611e0d565b6001600160a01b03821660009081527fe9104285c6851efcbc5e0e70440200efbdcab556a1c8784776780f8bb44f2931602052604090205460ff16610d1d5760405162461bcd60e51b815260206004820152601b60248201527f6e6577206f776e6572206e6f74206d6f64756c652061646d696e2e00000000006044820152606401610ad6565b6101c780546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691015b60405180910390a1505050565b6000610d8f81610c91611e03565b612710821115610de15760405162461bcd60e51b815260206004820152600d60248201527f627073203c3d2031303030302e000000000000000000000000000000000000006044820152606401610ad6565b6101cc80546001600160801b031667ffffffffffffffff8416600160801b021790556101ca80546001600160a01b0319166001600160a01b03851690811790915560408051918252602082018490527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f183049101610d74565b600080600080610e6786611013565b90945084925061ffff169050612710610e8082876151c0565b610e8a91906151df565b925050509250929050565b610e9d611e03565b6001600160a01b0316856001600160a01b03161480610ec35750610ec385610995611e03565b610f355760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610ad6565b610f428585858585611e8e565b5050505050565b600082815261012f6020526040902060010154610f6881610c91611e03565b610f72838361210a565b505050565b610f7f611e03565b6001600160a01b0316816001600160a01b0316146110055760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610ad6565b61100f828261212d565b5050565b60008181526101d260209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561105b5780516020820151611079565b6101cb546101cc546001600160a01b03909116906001600160801b03165b9250925050915091565b606081518351146110fc5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610ad6565b6000835167ffffffffffffffff811115611118576111186148e9565b604051908082528060200260200182016040528015611141578160200160208202803683370190505b50905060005b84518110156111b95761118c85828151811061116557611165615201565b602002602001015185838151811061117f5761117f615201565b6020026020010151610a5c565b82828151811061119e5761119e615201565b60209081029190910101526111b281615217565b9050611147565b509392505050565b60006111cf81610c91611e03565b6127108211156112215760405162461bcd60e51b815260206004820152601260248201527f65786365656420726f79616c74792062707300000000000000000000000000006044820152606401610ad6565b6101cb80546001600160a01b0319166001600160a01b0385169081179091556101cc80546fffffffffffffffffffffffffffffffff19166001600160801b03851617905560408051918252602082018490527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9101610d74565b6112a3611e03565b6001600160a01b0316836001600160a01b031614806112c957506112c983610995611e03565b6113285760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b6064820152608401610ad6565b610f72838383612150565b600061134181610c91611e03565b6101c980546001600160a01b0319166001600160a01b0384169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b6101c7546001600160a01b031660009081527fe9104285c6851efcbc5e0e70440200efbdcab556a1c8784776780f8bb44f2931602052604081205460ff166113d55750600090565b6101c7546001600160a01b03165b905090565b60008281526101616020526040812061140190836123a3565b9392505050565b600061141681610c91611e03565b6114236101cd8484614695565b50505050565b6101c68054610b5f9061516f565b6002606754141561148a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ad6565b6002606755600061149c8484846123af565b90506000806114ae60208701876148aa565b6001600160a01b0316146114ce576114c960208601866148aa565b6114d6565b6114d6611e03565b905060006000198660800135141561150957506101c880549060019060006114fe8385615232565b909155506115539050565b6101c85486608001351061154c5760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b6044820152606401610ad6565b5060808501355b600061156560408801602089016148aa565b6001600160a01b0316146115d557604051806040016040528087602001602081019061159191906148aa565b6001600160a01b03908116825260408981013560209384015260008581526101d2845220835181546001600160a01b03191692169190911781559101516001909101555b6115f1826115e660a089018961524a565b848a60c001356124ca565b6116026115fd87615291565b6125ce565b80826001600160a01b0316846001600160a01b03167f0b35afaf155daeef41cc46df86f058df2855c57d30ab134647a6b587e7cc8c398960405161164691906153e4565b60405180910390a45050600160675550505050565b600061166981610c91611e03565b6127108211156116bb5760405162461bcd60e51b815260206004820152601260248201527f65786365656420726f79616c74792062707300000000000000000000000000006044820152606401610ad6565b6040805180820182526001600160a01b03858116808352602080840187815260008a81526101d28352869020945185546001600160a01b031916941693909317845591516001909301929092558251918252810184905285917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a250505050565b61100f611750611e03565b83836127e9565b60608167ffffffffffffffff811115611772576117726148e9565b6040519080825280602002602001820160405280156117a557816020015b60608152602001906001900390816117905790505b50905060005b8281101561184557611815308585848181106117c9576117c9615201565b90506020028101906117db919061524a565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506128df92505050565b82828151811061182757611827615201565b6020026020010181905250808061183d90615217565b9150506117ab565b5092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661187981610c91611e03565b60006000198614156118a657506101c8805490600190600061189b8385615232565b909155506118e89050565b6101c85486106118e55760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b6044820152606401610ad6565b50845b6118f587868684876124ca565b50505050505050565b60008061190c8585856129ea565b61016086013560009081526101ce602052604090205490915060ff1615801561196c57506001600160a01b03811660009081527fa2a71de801f4f5af590dd1e71778408c512ca00170a88b45ca00ba943b31e98e602052604090205460ff165b9150935093915050565b600081815261016160205260408120610b0590612a4e565b600082815261012f60205260409020600101546119ad81610c91611e03565b610f72838361212d565b600054610100900460ff166119d25760005460ff16156119d6565b303b155b611a485760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610ad6565b600054610100900460ff16158015611a6a576000805461ffff19166101011790555b611a72612a58565b611ab96040518060400160405280600c81526020016b546f6b656e4552433131353560a01b815250604051806040016040528060018152602001603160f81b815250612abb565b611ac287612b1e565b611ada60405180602001604052806000815250612b8b565b8951611aee906101c59060208d0190614719565b508851611b03906101c69060208c0190614719565b506101cb80546001600160a01b03199081166001600160a01b03888116919091179092556101cc80546fffffffffffffffffffffffffffffffff19166001600160801b0388161790556101ca805482168584161790556101c980549091169188169190911790558751611b7e906101cd9060208b0190614719565b506101cc80546001600160801b03808616600160801b0291161790556101c780546001600160a01b038d166001600160a01b0319909116179055611bc360008c612bed565b611bed7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68c612bed565b611c177f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c8c612bed565b611c427f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c6000612bed565b8015611c54576000805461ff00191690555b5050505050505050505050565b6101cd8054610b5f9061516f565b611c77611e03565b6001600160a01b0316856001600160a01b03161480611c9d5750611c9d85610995611e03565b611d0f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610ad6565b610f428585858585612bf7565b611d24611e03565b6001600160a01b0316836001600160a01b03161480611d4a5750611d4a83610995611e03565b611da95760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b6064820152608401610ad6565b610f72838383612dac565b6001600160a01b03163b151590565b60006001600160e01b03198216636cdb3d1360e11b1480611df457506001600160e01b031982166303a24d0760e21b145b80610b055750610b0582612f36565b60006113e3612f5b565b600082815261012f602090815260408083206001600160a01b038516845290915290205460ff1661100f57611e4c816001600160a01b03166014612f88565b611e57836020612f88565b604051602001611e68929190615513565b60408051601f198184030181529082905262461bcd60e51b8252610ad69160040161487e565b8151835114611ef05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610ad6565b6001600160a01b038416611f545760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610ad6565b6000611f5e611e03565b9050611f6e818787878787613131565b60005b845181101561209c576000858281518110611f8e57611f8e615201565b602002602001015190506000858381518110611fac57611fac615201565b6020908102919091018101516000848152610193835260408082206001600160a01b038e1683529093529190912054909150818110156120415760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610ad6565b6000838152610193602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290612081908490615232565b925050819055505050508061209590615217565b9050611f71565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516120ec929190615594565b60405180910390a461210281878787878761338f565b505050505050565b6121148282613535565b600082815261016160205260409020610f7290826135da565b61213782826135ef565b600082815261016160205260409020610f729082613692565b6001600160a01b0383166121b25760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610ad6565b80518251146122145760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610ad6565b600061221e611e03565b905061223e81856000868660405180602001604052806000815250613131565b60005b835181101561234457600084828151811061225e5761225e615201565b60200260200101519050600084838151811061227c5761227c615201565b6020908102919091018101516000848152610193835260408082206001600160a01b038c16835290935291909120549091508181101561230a5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610ad6565b6000928352610193602090815260408085206001600160a01b038b168652909152909220910390558061233c81615217565b915050612241565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051612395929190615594565b60405180910390a450505050565b600061140183836136a7565b60008060006123bf8686866118fe565b91509150816124105760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610ad6565b42612423610140880161012089016155b9565b6001600160801b031611158015612454575042612448610160880161014089016155b9565b6001600160801b031610155b6124a05760405162461bcd60e51b815260206004820152600f60248201527f72657175657374206578706972656400000000000000000000000000000000006044820152606401610ad6565b61016086013560009081526101ce60205260409020805460ff191660011790559150509392505050565b60008281526101cf6020526040902080546124e49061516f565b1515905061255557826125395760405162461bcd60e51b815260206004820152600a60248201527f656d707479207572692e000000000000000000000000000000000000000000006044820152606401610ad6565b60008281526101cf60205260409020612553908585614695565b505b612570858383604051806020016040528060008152506136d1565b81856001600160a01b03167f04133ee4cb027e1c5fce5e3481289278a93bd16a65a3b65b428a6d239e706bfb6101cf6000868152602001908152602001600020846040516125bf9291906155d4565b60405180910390a35050505050565b60e08101516125da5750565b60008160c001518260e001516125f091906151c0565b6101cc549091506000906127109061261890600160801b90046001600160801b0316846151c0565b61262291906151df565b60405163085b49ad60e41b815230600482015260006024820181905291925081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906385b49ad0906044016040805180830381865afa158015612693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b79190615684565b909250905060006127106126cb83876151c0565b6126d591906151df565b6101008701519091506001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612751578434146127515760405162461bcd60e51b815260206004820152601660248201527f6d7573742073656e6420746f74616c2070726963652e000000000000000000006044820152606401610ad6565b60608601516000906001600160a01b03161561277157866060015161277f565b6101c9546001600160a01b03165b90506127a5876101000151612792611e03565b6101ca546001600160a01b0316886137e0565b6127bd8761010001516127b6611e03565b86856137e0565b6118f58761010001516127ce611e03565b83856127da8a8c6156b2565b6127e491906156b2565b6137e0565b816001600160a01b0316836001600160a01b031614156128715760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610ad6565b6001600160a01b0383811660008181526101946020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606001600160a01b0383163b61295e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610ad6565b600080846001600160a01b03168460405161297991906156c9565b600060405180830381855af49150503d80600081146129b4576040519150601f19603f3d011682016040523d82523d6000602084013e6129b9565b606091505b50915091506129e182826040518060600160405280602781526020016158ce6027913961382a565b95945050505050565b6000612a4683838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a409250612a349150889050613863565b805190602001206139b9565b90613a07565b949350505050565b6000610b05825490565b600054610100900460ff16612ab15760405162461bcd60e51b815260206004820152602b60248201526000805160206158ae83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610ad6565b612ab9613a23565b565b600054610100900460ff16612b145760405162461bcd60e51b815260206004820152602b60248201526000805160206158ae83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610ad6565b61100f8282613a83565b600054610100900460ff16612b775760405162461bcd60e51b815260206004820152602b60248201526000805160206158ae83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610ad6565b612b7f613af6565b612b8881613b4f565b50565b600054610100900460ff16612be45760405162461bcd60e51b815260206004820152602b60248201526000805160206158ae83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610ad6565b612b8881613c10565b61100f828261210a565b6001600160a01b038416612c5b5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610ad6565b6000612c65611e03565b9050612c85818787612c7688613c72565b612c7f88613c72565b87613131565b6000848152610193602090815260408083206001600160a01b038a16845290915290205483811015612d0c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610ad6565b6000858152610193602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290612d4c908490615232565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46118f5828888888888613cbd565b6001600160a01b038316612e0e5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610ad6565b6000612e18611e03565b9050612e4881856000612e2a87613c72565b612e3387613c72565b60405180602001604052806000815250613131565b6000838152610193602090815260408083206001600160a01b038816845290915290205482811015612ec85760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610ad6565b6000848152610193602090815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b60006001600160e01b03198216635a05180f60e01b1480610b055750610b0582613db9565b3360009081526099602052604081205460ff1615612f80575060131936013560601c90565b503390565b90565b60606000612f978360026151c0565b612fa2906002615232565b67ffffffffffffffff811115612fba57612fba6148e9565b6040519080825280601f01601f191660200182016040528015612fe4576020820181803683370190505b509050600360fc1b81600081518110612fff57612fff615201565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061302e5761302e615201565b60200101906001600160f81b031916908160001a90535060006130528460026151c0565b61305d906001615232565b90505b60018111156130e2577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061309e5761309e615201565b1a60f81b8282815181106130b4576130b4615201565b60200101906001600160f81b031916908160001a90535060049490941c936130db816156e5565b9050613060565b5083156114015760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610ad6565b600080527fdf45e191c6a8bff7d5b2484d5c1deccbd5b2abc06a2abf694394baf9d01cb5e56020527f2b85be2befc2dd713b2f771c3d841437400c04e85bacc15958c6dcadb2aa5c045460ff1615801561319357506001600160a01b03851615155b80156131a757506001600160a01b03841615155b15613281576001600160a01b03851660009081527fdf45e191c6a8bff7d5b2484d5c1deccbd5b2abc06a2abf694394baf9d01cb5e5602052604090205460ff168061322957506001600160a01b03841660009081527fdf45e191c6a8bff7d5b2484d5c1deccbd5b2abc06a2abf694394baf9d01cb5e5602052604090205460ff165b6132815760405162461bcd60e51b8152602060048201526024808201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526332b9399760e11b6064820152608401610ad6565b6001600160a01b0385166133095760005b8351811015613307578281815181106132ad576132ad615201565b60200260200101516101d060008684815181106132cc576132cc615201565b6020026020010151815260200190815260200160002060008282546132f19190615232565b90915550613300905081615217565b9050613292565b505b6001600160a01b0384166121025760005b83518110156118f55782818151811061333557613335615201565b60200260200101516101d0600086848151811061335457613354615201565b60200260200101518152602001908152602001600020600082825461337991906156b2565b90915550613388905081615217565b905061331a565b6001600160a01b0384163b156121025760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906133d390899089908890889088906004016156fc565b6020604051808303816000875af192505050801561340e575060408051601f3d908101601f1916820190925261340b9181019061575a565b60015b6134c45761341a615777565b806308c379a01415613454575061342f615792565b8061343a5750613456565b8060405162461bcd60e51b8152600401610ad6919061487e565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610ad6565b6001600160e01b0319811663bc197c8160e01b146118f55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610ad6565b600082815261012f602090815260408083206001600160a01b038516845290915290205460ff1661100f57600082815261012f602090815260408083206001600160a01b03851684529091529020805460ff19166001179055613596611e03565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611401836001600160a01b038416613dee565b600082815261012f602090815260408083206001600160a01b038516845290915290205460ff161561100f57600082815261012f602090815260408083206001600160a01b03851684529091529020805460ff1916905561364e611e03565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000611401836001600160a01b038416613e3d565b60008260000182815481106136be576136be615201565b9060005260206000200154905092915050565b6001600160a01b0384166137315760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610ad6565b600061373b611e03565b905061374d81600087612c7688613c72565b6000848152610193602090815260408083206001600160a01b038916845290915281208054859290613780908490615232565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610f4281600087878787613cbd565b806137ea57611423565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561381e576138198282613f30565b611423565b61142384848484613fd3565b60608315613839575081611401565b8251156138495782518084602001fd5b8160405162461bcd60e51b8152600401610ad6919061487e565b60607fc7a95ef88f83fa833ccfce325157b7111633b181b6a27181b86415d8d501134d61389360208401846148aa565b6138a360408501602086016148aa565b60408501356138b860808701606088016148aa565b60808701356138ca60a089018961524a565b6040516138d892919061581c565b60405190819003902060c089013560e08a01356138fd6101208c016101008d016148aa565b61390f6101408d016101208e016155b9565b6139216101608e016101408f016155b9565b60408051602081019d909d526001600160a01b039b8c16908d0152988a1660608c015260808b019790975294881660a08a015260c089019390935260e08801919091526101008701526101208601529092166101408401526001600160801b039182166101608085019190915291166101808301528301356101a08201526101c0016040516020818303038152906040529050919050565b6000610b056139c661402c565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000613a1685856140a7565b915091506111b981614117565b600054610100900460ff16613a7c5760405162461bcd60e51b815260206004820152602b60248201526000805160206158ae83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610ad6565b6001606755565b600054610100900460ff16613adc5760405162461bcd60e51b815260206004820152602b60248201526000805160206158ae83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610ad6565b815160209283012081519190920120603391909155603455565b600054610100900460ff16612ab95760405162461bcd60e51b815260206004820152602b60248201526000805160206158ae83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610ad6565b600054610100900460ff16613ba85760405162461bcd60e51b815260206004820152602b60248201526000805160206158ae83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610ad6565b60005b815181101561100f57600160996000848481518110613bcc57613bcc615201565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580613c0881615217565b915050613bab565b600054610100900460ff16613c695760405162461bcd60e51b815260206004820152602b60248201526000805160206158ae83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610ad6565b612b88816142d2565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110613cac57613cac615201565b602090810291909101015292915050565b6001600160a01b0384163b156121025760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190613d01908990899088908890889060040161582c565b6020604051808303816000875af1925050508015613d3c575060408051601f3d908101601f19168201909252613d399181019061575a565b60015b613d485761341a615777565b6001600160e01b0319811663f23a6e6160e01b146118f55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610ad6565b60006001600160e01b03198216637965db0b60e01b1480610b0557506301ffc9a760e01b6001600160e01b0319831614610b05565b6000818152600183016020526040812054613e3557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b05565b506000610b05565b60008181526001830160205260408120548015613f26576000613e616001836156b2565b8554909150600090613e75906001906156b2565b9050818114613eda576000866000018281548110613e9557613e95615201565b9060005260206000200154905080876000018481548110613eb857613eb8615201565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080613eeb57613eeb615864565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610b05565b6000915050610b05565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613f7d576040519150601f19603f3d011682016040523d82523d6000602084013e613f82565b606091505b5050905080610f725760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610ad6565b816001600160a01b0316836001600160a01b03161415613ff257611423565b6001600160a01b038316301415614017576138196001600160a01b03851683836142e6565b6114236001600160a01b03851684848461435e565b60006113e37f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61405b60335490565b6034546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000808251604114156140de5760208301516040840151606085015160001a6140d287828585614396565b94509450505050614110565b82516040141561410857602083015160408401516140fd868383614483565b935093505050614110565b506000905060025b9250929050565b600081600481111561412b5761412b61587a565b14156141345750565b60018160048111156141485761414861587a565b14156141965760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610ad6565b60028160048111156141aa576141aa61587a565b14156141f85760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610ad6565b600381600481111561420c5761420c61587a565b14156142655760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610ad6565b60048160048111156142795761427961587a565b1415612b885760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610ad6565b805161100f90610195906020840190614719565b6040516001600160a01b038316602482015260448101829052610f7290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909316929092179091526144d5565b6040516001600160a01b03808516602483015283166044820152606481018290526114239085906323b872dd60e01b90608401614312565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156143cd575060009050600361447a565b8460ff16601b141580156143e557508460ff16601c14155b156143f6575060009050600461447a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561444a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166144735760006001925092505061447a565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816144b960ff86901c601b615232565b90506144c787828885614396565b935093505050935093915050565b600061452a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166145ba9092919063ffffffff16565b805190915015610f7257808060200190518101906145489190615890565b610f725760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610ad6565b6060612a468484600085856001600160a01b0385163b61461c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ad6565b600080866001600160a01b0316858760405161463891906156c9565b60006040518083038185875af1925050503d8060008114614675576040519150601f19603f3d011682016040523d82523d6000602084013e61467a565b606091505b509150915061468a82828661382a565b979650505050505050565b8280546146a19061516f565b90600052602060002090601f0160209004810192826146c35760008555614709565b82601f106146dc5782800160ff19823516178555614709565b82800160010185558215614709579182015b828111156147095782358255916020019190600101906146ee565b5061471592915061478d565b5090565b8280546147259061516f565b90600052602060002090601f0160209004810192826147475760008555614709565b82601f1061476057805160ff1916838001178555614709565b82800160010185558215614709579182015b82811115614709578251825591602001919060010190614772565b5b80821115614715576000815560010161478e565b6001600160a01b0381168114612b8857600080fd5b80356147c2816147a2565b919050565b600080604083850312156147da57600080fd5b82356147e5816147a2565b946020939093013593505050565b6001600160e01b031981168114612b8857600080fd5b60006020828403121561481b57600080fd5b8135611401816147f3565b60005b83811015614841578181015183820152602001614829565b838111156114235750506000910152565b6000815180845261486a816020860160208601614826565b601f01601f19169290920160200192915050565b6020815260006114016020830184614852565b6000602082840312156148a357600080fd5b5035919050565b6000602082840312156148bc57600080fd5b8135611401816147a2565b600080604083850312156148da57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715614925576149256148e9565b6040525050565b604051610180810167ffffffffffffffff81118282101715614950576149506148e9565b60405290565b600067ffffffffffffffff821115614970576149706148e9565b5060051b60200190565b600082601f83011261498b57600080fd5b8135602061499882614956565b6040516149a582826148ff565b83815260059390931b85018201928281019150868411156149c557600080fd5b8286015b848110156149e057803583529183019183016149c9565b509695505050505050565b600082601f8301126149fc57600080fd5b813567ffffffffffffffff811115614a1657614a166148e9565b604051614a2d601f8301601f1916602001826148ff565b818152846020838601011115614a4257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215614a7757600080fd5b8535614a82816147a2565b94506020860135614a92816147a2565b9350604086013567ffffffffffffffff80821115614aaf57600080fd5b614abb89838a0161497a565b94506060880135915080821115614ad157600080fd5b614add89838a0161497a565b93506080880135915080821115614af357600080fd5b50614b00888289016149eb565b9150509295509295909350565b60008060408385031215614b2057600080fd5b823591506020830135614b32816147a2565b809150509250929050565b600082601f830112614b4e57600080fd5b81356020614b5b82614956565b604051614b6882826148ff565b83815260059390931b8501820192828101915086841115614b8857600080fd5b8286015b848110156149e0578035614b9f816147a2565b8352918301918301614b8c565b60008060408385031215614bbf57600080fd5b823567ffffffffffffffff80821115614bd757600080fd5b614be386838701614b3d565b93506020850135915080821115614bf957600080fd5b50614c068582860161497a565b9150509250929050565b600081518084526020808501945080840160005b83811015614c4057815187529582019590820190600101614c24565b509495945050505050565b6020815260006114016020830184614c10565b600080600060608486031215614c7357600080fd5b8335614c7e816147a2565b9250602084013567ffffffffffffffff80821115614c9b57600080fd5b614ca78783880161497a565b93506040860135915080821115614cbd57600080fd5b50614cca8682870161497a565b9150509250925092565b60008083601f840112614ce657600080fd5b50813567ffffffffffffffff811115614cfe57600080fd5b60208301915083602082850101111561411057600080fd5b60008060208385031215614d2957600080fd5b823567ffffffffffffffff811115614d4057600080fd5b614d4c85828601614cd4565b90969095509350505050565b600080600060408486031215614d6d57600080fd5b833567ffffffffffffffff80821115614d8557600080fd5b908501906101808288031215614d9a57600080fd5b90935060208501359080821115614db057600080fd5b50614dbd86828701614cd4565b9497909650939450505050565b600080600060608486031215614ddf57600080fd5b833592506020840135614df1816147a2565b929592945050506040919091013590565b8015158114612b8857600080fd5b60008060408385031215614e2357600080fd5b8235614e2e816147a2565b91506020830135614b3281614e02565b60008060208385031215614e5157600080fd5b823567ffffffffffffffff80821115614e6957600080fd5b818501915085601f830112614e7d57600080fd5b813581811115614e8c57600080fd5b8660208260051b8501011115614ea157600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614f0857603f19888603018452614ef6858351614852565b94509285019290850190600101614eda565b5092979650505050505050565b600080600080600060808688031215614f2d57600080fd5b8535614f38816147a2565b945060208601359350604086013567ffffffffffffffff811115614f5b57600080fd5b614f6788828901614cd4565b96999598509660600135949350505050565b80356001600160801b03811681146147c257600080fd5b6000806000806000806000806000806101408b8d031215614fb057600080fd5b614fb98b6147b7565b995060208b013567ffffffffffffffff80821115614fd657600080fd5b614fe28e838f016149eb565b9a5060408d0135915080821115614ff857600080fd5b6150048e838f016149eb565b995060608d013591508082111561501a57600080fd5b6150268e838f016149eb565b985060808d013591508082111561503c57600080fd5b506150498d828e01614b3d565b96505061505860a08c016147b7565b945061506660c08c016147b7565b935061507460e08c01614f79565b92506150836101008c01614f79565b91506150926101208c016147b7565b90509295989b9194979a5092959850565b600080604083850312156150b657600080fd5b82356150c1816147a2565b91506020830135614b32816147a2565b600080600080600060a086880312156150e957600080fd5b85356150f4816147a2565b94506020860135615104816147a2565b93506040860135925060608601359150608086013567ffffffffffffffff81111561512e57600080fd5b614b00888289016149eb565b60008060006060848603121561514f57600080fd5b833561515a816147a2565b95602085013595506040909401359392505050565b600181811c9082168061518357607f821691505b602082108114156151a457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156151da576151da6151aa565b500290565b6000826151fc57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561522b5761522b6151aa565b5060010190565b60008219821115615245576152456151aa565b500190565b6000808335601e1984360301811261526157600080fd5b83018035915067ffffffffffffffff82111561527c57600080fd5b60200191503681900382131561411057600080fd5b600061018082360312156152a457600080fd5b6152ac61492c565b6152b5836147b7565b81526152c3602084016147b7565b6020820152604083013560408201526152de606084016147b7565b60608201526080830135608082015260a083013567ffffffffffffffff81111561530757600080fd5b615313368286016149eb565b60a08301525060c083013560c082015260e083013560e082015261010061533b8185016147b7565b9082015261012061534d848201614f79565b9082015261014061535f848201614f79565b9082015261016092830135928101929092525090565b6000808335601e1984360301811261538c57600080fd5b830160208101925035905067ffffffffffffffff8111156153ac57600080fd5b80360383131561411057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152615405602082016153f8846147b7565b6001600160a01b03169052565b6000615413602084016147b7565b6001600160a01b03811660408401525060408301356060830152615439606084016147b7565b6001600160a01b038116608084015250608083013560a083015261546060a0840184615375565b6101808060c08601526154786101a0860183856153bb565b925060c086013560e0860152610100915060e08601358286015261549d8287016147b7565b91506101206154b6818701846001600160a01b03169052565b6154c1818801614f79565b9250506101406154db818701846001600160801b03169052565b6154e6818801614f79565b925050610160615500818701846001600160801b03169052565b9590950135939094019290925250919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161554b816017850160208801614826565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351615588816028840160208801614826565b01602801949350505050565b6040815260006155a76040830185614c10565b82810360208401526129e18185614c10565b6000602082840312156155cb57600080fd5b61140182614f79565b60408152600080845481600182811c9150808316806155f457607f831692505b602080841082141561561457634e487b7160e01b86526022600452602486fd5b604088018490526060880182801561563357600181146156445761566f565b60ff1987168252828201975061566f565b60008c81526020902060005b8781101561566957815484820152908601908401615650565b83019850505b50509690960196909652509095945050505050565b6000806040838503121561569757600080fd5b82516156a2816147a2565b6020939093015192949293505050565b6000828210156156c4576156c46151aa565b500390565b600082516156db818460208701614826565b9190910192915050565b6000816156f4576156f46151aa565b506000190190565b60006001600160a01b03808816835280871660208401525060a0604083015261572860a0830186614c10565b828103606084015261573a8186614c10565b9050828103608084015261574e8185614852565b98975050505050505050565b60006020828403121561576c57600080fd5b8151611401816147f3565b600060033d1115612f855760046000803e5060005160e01c90565b600060443d10156157a05790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156157d057505050505090565b82850191508151818111156157e85750505050505090565b843d87010160208285010111156158025750505050505090565b615811602082860101876148ff565b509095945050505050565b8183823760009101908152919050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261468a60a0830184614852565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000602082840312156158a257600080fd5b815161140181614e0256fe496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a\";\n\ntype TokenERC1155ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: TokenERC1155ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class TokenERC1155__factory extends ContractFactory {\n  constructor(...args: TokenERC1155ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"TokenERC1155\";\n  }\n\n  deploy(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<TokenERC1155> {\n    return super.deploy(_thirdwebFee, overrides || {}) as Promise<TokenERC1155>;\n  }\n  getDeployTransaction(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_thirdwebFee, overrides || {});\n  }\n  attach(address: string): TokenERC1155 {\n    return super.attach(address) as TokenERC1155;\n  }\n  connect(signer: Signer): TokenERC1155__factory {\n    return super.connect(signer) as TokenERC1155__factory;\n  }\n  static readonly contractName: \"TokenERC1155\";\n  public readonly contractName: \"TokenERC1155\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): TokenERC1155Interface {\n    return new utils.Interface(_abi) as TokenERC1155Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): TokenERC1155 {\n    return new Contract(address, _abi, signerOrProvider) as TokenERC1155;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { TokenERC20, TokenERC20Interface } from \"../TokenERC20\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_thirdwebFee\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"fromDelegate\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"toDelegate\",\n        type: \"address\",\n      },\n    ],\n    name: \"DelegateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegate\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"previousBalance\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newBalance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DelegateVotesChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"quantityMinted\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TokensMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct ITokenERC20.MintRequest\",\n        name: \"mintRequest\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensMintedWithSignature\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burnFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"pos\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"checkpoints\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"fromBlock\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint224\",\n            name: \"votes\",\n            type: \"uint224\",\n          },\n        ],\n        internalType: \"struct ERC20VotesUpgradeable.Checkpoint\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegates\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastTotalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_primarySaleRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mintTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC20.MintRequest\",\n        name: \"_req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mintWithSignature\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"numCheckpoints\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"quantity\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC20.MintRequest\",\n        name: \"_req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"verify\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n\ntype TokenERC20ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: TokenERC20ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class TokenERC20__factory extends ContractFactory {\n  constructor(...args: TokenERC20ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"TokenERC20\";\n  }\n\n  deploy(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<TokenERC20> {\n    return super.deploy(_thirdwebFee, overrides || {}) as Promise<TokenERC20>;\n  }\n  getDeployTransaction(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_thirdwebFee, overrides || {});\n  }\n  attach(address: string): TokenERC20 {\n    return super.attach(address) as TokenERC20;\n  }\n  connect(signer: Signer): TokenERC20__factory {\n    return super.connect(signer) as TokenERC20__factory;\n  }\n  static readonly contractName: \"TokenERC20\";\n  public readonly contractName: \"TokenERC20\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): TokenERC20Interface {\n    return new utils.Interface(_abi) as TokenERC20Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): TokenERC20 {\n    return new Contract(address, _abi, signerOrProvider) as TokenERC20;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { TokenERC721, TokenERC721Interface } from \"../TokenERC721\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_thirdwebFee\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newRoyaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newRoyaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DefaultRoyalty\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"prevOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PlatformFeeInfoUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"PrimarySaleRecipientUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RoyaltyForToken\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdMinted\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"TokensMinted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"mintedTo\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenIdMinted\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct ITokenERC721.MintRequest\",\n        name: \"mintRequest\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"TokensMintedWithSignature\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDefaultRoyaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlatformFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoyaltyInfoForToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_defaultAdmin\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_royaltyBps\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_platformFeeBps\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"mintTo\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC721.MintRequest\",\n        name: \"_req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mintWithSignature\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenIdMinted\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"nextTokenIdToMint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"platformFeeBps\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"platformFeeRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"primarySaleRecipient\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"salePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"royaltyInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"royaltyAmount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_royaltyRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_royaltyBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setDefaultRoyaltyInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_platformFeeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_platformFeeBps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setPlatformFeeInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_saleRecipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"setPrimarySaleRecipient\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setRoyaltyInfoForToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"thirdwebFee\",\n    outputs: [\n      {\n        internalType: \"contract ITWFee\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"royaltyRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"royaltyBps\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"primarySaleRecipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"string\",\n            name: \"uri\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"price\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"currency\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityStartTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"uint128\",\n            name: \"validityEndTimestamp\",\n            type: \"uint128\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"uid\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct ITokenERC721.MintRequest\",\n        name: \"_req\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_signature\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"verify\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"success\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"address\",\n        name: \"signer\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a06040523480156200001157600080fd5b50604051620052ec380380620052ec83398101604081905262000034916200013b565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b6200010e565b620000c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000e6576000805461ffff19166101011790555b6001600160a01b038216608052801562000106576000805461ff00191690555b50506200016d565b600062000126306200012c60201b62001eb91760201c565b15905090565b6001600160a01b03163b151590565b6000602082840312156200014e57600080fd5b81516001600160a01b03811681146200016657600080fd5b9392505050565b60805161515c620001906000396000818161094901526124b1015261515c6000f3fe6080604052600436106103285760003560e01c80636f4f2837116101a5578063b24f2d39116100ec578063d45573f611610095578063e15916341161006f578063e159163414610a00578063e8a3d48514610a20578063e985e9c514610a35578063eb13554f14610a7f57600080fd5b8063d45573f61461096b578063d547741f146109a1578063de903774146109c157600080fd5b8063ca15c873116100c6578063ca15c873146108f6578063cb2ef6f714610916578063cf8267b11461093757600080fd5b8063b24f2d3914610887578063b88d4fde146108b6578063c87b56dd146108d657600080fd5b806395d89b411161014e578063a217fddf11610128578063a217fddf14610825578063a22cb4651461083a578063ac9650d81461085a57600080fd5b806395d89b41146107d45780639bcf7a15146107e9578063a0a8e4601461080957600080fd5b80639010d07c1161017f5780639010d07c1461074d57806391d148541461076d578063938e3d7b146107b457600080fd5b80636f4f2837146106f857806370a08231146107185780638da5cb5b1461073857600080fd5b80632a55205a1161027457806342842e0e1161021d5780634f6ccce7116101f75780634f6ccce71461065f578063572b6c051461067f578063600dd5ea146106b85780636352211e146106d857600080fd5b806342842e0e146105dd57806342966c68146105fd5780634cc157df1461061d57600080fd5b80632f745c591161024e5780632f745c591461058657806336568abe146105a65780633b1475a7146105c657600080fd5b80632a55205a146105145780632c4510f8146105535780632f2ff15d1461056657600080fd5b806313af4035116102d657806322dcd13e116102b057806322dcd13e1461048357806323b872dd146104c3578063248a9ca3146104e357600080fd5b806313af40351461042d57806318160ddd1461044d5780631e7ac4881461046357600080fd5b8063079fe40e11610307578063079fe40e146103b2578063081812fc146103eb578063095ea7b31461040b57600080fd5b806275a3171461032d57806301ffc9a71461036057806306fdde0314610390575b600080fd5b34801561033957600080fd5b5061034d6103483660046144b7565b610aa0565b6040519081526020015b60405180910390f35b34801561036c57600080fd5b5061038061037b366004614522565b610ae8565b6040519015158152602001610357565b34801561039c57600080fd5b506103a5610b14565b6040516103579190614597565b3480156103be57600080fd5b506101f9546103d3906001600160a01b031681565b6040516001600160a01b039091168152602001610357565b3480156103f757600080fd5b506103d36104063660046145aa565b610ba7565b34801561041757600080fd5b5061042b6104263660046145c3565b610c43565b005b34801561043957600080fd5b5061042b6104483660046145ef565b610d6b565b34801561045957600080fd5b506101c75461034d565b34801561046f57600080fd5b5061042b61047e3660046145c3565b610e64565b34801561048f57600080fd5b506101fc546104ab90600160801b90046001600160801b031681565b6040516001600160801b039091168152602001610357565b3480156104cf57600080fd5b5061042b6104de36600461460c565b610f3b565b3480156104ef57600080fd5b5061034d6104fe3660046145aa565b600090815261012f602052604090206001015490565b34801561052057600080fd5b5061053461052f36600461464d565b610fc9565b604080516001600160a01b039093168352602083019190915201610357565b61034d61056136600461466f565b611006565b34801561057257600080fd5b5061042b6105813660046146d4565b6111ae565b34801561059257600080fd5b5061034d6105a13660046145c3565b6111d7565b3480156105b257600080fd5b5061042b6105c13660046146d4565b611280565b3480156105d257600080fd5b5061034d6101f85481565b3480156105e957600080fd5b5061042b6105f836600461460c565b61131c565b34801561060957600080fd5b5061042b6106183660046145aa565b611337565b34801561062957600080fd5b5061063d6106383660046145aa565b6113c0565b604080516001600160a01b03909316835261ffff909116602083015201610357565b34801561066b57600080fd5b5061034d61067a3660046145aa565b611430565b34801561068b57600080fd5b5061038061069a3660046145ef565b6001600160a01b031660009081526099602052604090205460ff1690565b3480156106c457600080fd5b5061042b6106d33660046145c3565b6114d6565b3480156106e457600080fd5b506103d36106f33660046145aa565b6115b0565b34801561070457600080fd5b5061042b6107133660046145ef565b61163c565b34801561072457600080fd5b5061034d6107333660046145ef565b611696565b34801561074457600080fd5b506103d3611731565b34801561075957600080fd5b506103d361076836600461464d565b61178c565b34801561077957600080fd5b506103806107883660046146d4565b600091825261012f602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156107c057600080fd5b5061042b6107cf366004614704565b6117ac565b3480156107e057600080fd5b506103a56117cd565b3480156107f557600080fd5b5061042b610804366004614746565b6117dd565b34801561081557600080fd5b5060405160018152602001610357565b34801561083157600080fd5b5061034d600081565b34801561084657600080fd5b5061042b61085536600461477b565b6118c7565b34801561086657600080fd5b5061087a6108753660046147a9565b6118d9565b604051610357919061481e565b34801561089357600080fd5b506101fb546101fc546001600160a01b03909116906001600160801b031661063d565b3480156108c257600080fd5b5061042b6108d1366004614949565b6119ce565b3480156108e257600080fd5b506103a56108f13660046145aa565b611a5d565b34801561090257600080fd5b5061034d6109113660046145aa565b611b00565b34801561092257600080fd5b506a546f6b656e45524337323160a81b61034d565b34801561094357600080fd5b506103d37f000000000000000000000000000000000000000000000000000000000000000081565b34801561097757600080fd5b506101fa546101fc546001600160a01b0390911690600160801b90046001600160801b031661063d565b3480156109ad57600080fd5b5061042b6109bc3660046146d4565b611b18565b3480156109cd57600080fd5b506109e16109dc36600461466f565b611b41565b6040805192151583526001600160a01b03909116602083015201610357565b348015610a0c57600080fd5b5061042b610a1b366004614a7e565b611bb9565b348015610a2c57600080fd5b506103a5611e2a565b348015610a4157600080fd5b50610380610a50366004614b91565b6001600160a01b0391821660009081526101986020908152604080832093909416825291909152205460ff1690565b348015610a8b57600080fd5b506101fa546103d3906001600160a01b031681565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610ad481610acf611ec8565b611ed2565b610adf858585611f53565b95945050505050565b6000610af382611fdd565b80610b0e57506001600160e01b0319821663152a902d60e11b145b92915050565b60606101938054610b2490614bbf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5090614bbf565b8015610b9d5780601f10610b7257610100808354040283529160200191610b9d565b820191906000526020600020905b815481529060010190602001808311610b8057829003601f168201915b5050505050905090565b600081815261019560205260408120546001600160a01b0316610c265760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b50600090815261019760205260409020546001600160a01b031690565b6000610c4e826115b0565b9050806001600160a01b0316836001600160a01b03161415610cbc5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610c1d565b806001600160a01b0316610cce611ec8565b6001600160a01b03161480610cea5750610cea81610a50611ec8565b610d5c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610c1d565b610d668383612002565b505050565b6000610d7981610acf611ec8565b6001600160a01b03821660009081527fe9104285c6851efcbc5e0e70440200efbdcab556a1c8784776780f8bb44f2931602052604090205460ff16610e005760405162461bcd60e51b815260206004820152601b60248201527f6e6577206f776e6572206e6f74206d6f64756c652061646d696e2e00000000006044820152606401610c1d565b6101f780546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691015b60405180910390a1505050565b6000610e7281610acf611ec8565b612710821115610ec45760405162461bcd60e51b815260206004820152600d60248201527f627073203c3d2031303030302e000000000000000000000000000000000000006044820152606401610c1d565b6101fc80546001600160801b031667ffffffffffffffff8416600160801b021790556101fa80546001600160a01b0319166001600160a01b03851690811790915560408051918252602082018490527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f183049101610e57565b610f4c610f46611ec8565b82612071565b610fbe5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610c1d565b610d6683838361216a565b600080600080610fd8866113c0565b90945084925061ffff169050612710610ff18287614c10565b610ffb9190614c2f565b925050509250929050565b60006002603354141561105b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610c1d565b6002603355600061106d85858561232c565b905060008061107f60208801886145ef565b6001600160a01b03161461109f5761109a60208701876145ef565b6110a7565b6110a7611ec8565b90506110bf816110ba6080890189614c51565b611f53565b925060006110d360408801602089016145ef565b6001600160a01b0316146111435760405180604001604052808760200160208101906110ff91906145ef565b6001600160a01b0390811682526040898101356020938401526000878152610200845220835181546001600160a01b03191692169190911781559101516001909101555b61115461114f87614c98565b612446565b82816001600160a01b0316836001600160a01b03167f110d160a1bedeea919a88fbc4b2a9fb61b7e664084391b6ca2740db66fef80fe896040516111989190614dd5565b60405180910390a4505060016033559392505050565b600082815261012f60205260409020600101546111cd81610acf611ec8565b610d668383612652565b60006111e283611696565b82106112565760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610c1d565b506001600160a01b039190911660009081526101c560209081526040808320938352929052205490565b611288611ec8565b6001600160a01b0316816001600160a01b03161461130e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610c1d565b6113188282612675565b5050565b610d66838383604051806020016040528060008152506119ce565b611342610f46611ec8565b6113b45760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610c1d565b6113bd81612698565b50565b600081815261020060209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156114085780516020820151611426565b6101fb546101fc546001600160a01b03909116906001600160801b03165b9250925050915091565b600061143c6101c75490565b82106114b05760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610c1d565b6101c782815481106114c4576114c4614ee5565b90600052602060002001549050919050565b60006114e481610acf611ec8565b6127108211156115365760405162461bcd60e51b815260206004820152601260248201527f65786365656420726f79616c74792062707300000000000000000000000000006044820152606401610c1d565b6101fb80546001600160a01b0319166001600160a01b0385169081179091556101fc80546fffffffffffffffffffffffffffffffff19166001600160801b03851617905560408051918252602082018490527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9101610e57565b600081815261019560205260408120546001600160a01b031680610b0e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610c1d565b600061164a81610acf611ec8565b6101f980546001600160a01b0319166001600160a01b0384169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b60006001600160a01b0382166117145760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610c1d565b506001600160a01b03166000908152610196602052604090205490565b6101f7546001600160a01b031660009081527fe9104285c6851efcbc5e0e70440200efbdcab556a1c8784776780f8bb44f2931602052604081205460ff166117795750600090565b6101f7546001600160a01b03165b905090565b6000828152610161602052604081206117a59083612741565b9392505050565b60006117ba81610acf611ec8565b6117c76101fd8484614343565b50505050565b60606101948054610b2490614bbf565b60006117eb81610acf611ec8565b61271082111561183d5760405162461bcd60e51b815260206004820152601260248201527f65786365656420726f79616c74792062707300000000000000000000000000006044820152606401610c1d565b6040805180820182526001600160a01b03858116808352602080840187815260008a81526102008352869020945185546001600160a01b031916941693909317845591516001909301929092558251918252810184905285917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a250505050565b6113186118d2611ec8565b838361274d565b60608167ffffffffffffffff8111156118f4576118f4614880565b60405190808252806020026020018201604052801561192757816020015b60608152602001906001900390816119125790505b50905060005b828110156119c7576119973085858481811061194b5761194b614ee5565b905060200281019061195d9190614c51565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061281d92505050565b8282815181106119a9576119a9614ee5565b602002602001018190525080806119bf90614efb565b91505061192d565b5092915050565b6119df6119d9611ec8565b83612071565b611a515760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610c1d565b6117c78484848461291f565b60008181526101ff60205260409020805460609190611a7b90614bbf565b80601f0160208091040260200160405190810160405280929190818152602001828054611aa790614bbf565b8015611af45780601f10611ac957610100808354040283529160200191611af4565b820191906000526020600020905b815481529060010190602001808311611ad757829003601f168201915b50505050509050919050565b600081815261016160205260408120610b0e906129a8565b600082815261012f6020526040902060010154611b3781610acf611ec8565b610d668383612675565b600080611b4f8585856129b2565b61012086013560009081526101fe602052604090205490915060ff16158015611baf57506001600160a01b03811660009081527fa2a71de801f4f5af590dd1e71778408c512ca00170a88b45ca00ba943b31e98e602052604090205460ff165b9150935093915050565b600054610100900460ff16611bd45760005460ff1615611bd8565b303b155b611c4a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610c1d565b600054610100900460ff16158015611c6c576000805461ffff19166101011790555b611c74612a0e565b611cba6040518060400160405280600b81526020016a546f6b656e45524337323160a81b815250604051806040016040528060018152602001603160f81b815250612a71565b611cc387612ad4565b611ccd8a8a612b3e565b6101fb80546001600160a01b03199081166001600160a01b03888116919091179092556101fc80546fffffffffffffffffffffffffffffffff19166001600160801b0388161790556101fa805482168584161790556101f980549091169188169190911790558751611d47906101fd9060208b01906143c7565b506101fc80546001600160801b03808616600160801b0291161790556101f780546001600160a01b038d166001600160a01b0319909116179055611d8c60008c612ba1565b611db67f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68c612ba1565b611de07f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c8c612ba1565b611e0b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c6000612ba1565b8015611e1d576000805461ff00191690555b5050505050505050505050565b6101fd8054611e3890614bbf565b80601f0160208091040260200160405190810160405280929190818152602001828054611e6490614bbf565b8015611eb15780601f10611e8657610100808354040283529160200191611eb1565b820191906000526020600020905b815481529060010190602001808311611e9457829003601f168201915b505050505081565b6001600160a01b03163b151590565b6000611787612bab565b600082815261012f602090815260408083206001600160a01b038516845290915290205460ff1661131857611f11816001600160a01b03166014612bd5565b611f1c836020612bd5565b604051602001611f2d929190614f16565b60408051601f198184030181529082905262461bcd60e51b8252610c1d91600401614597565b6101f88054906001906000611f688385614f97565b909155505060008181526101ff60205260409020611f87908484614343565b50611f928482612d7e565b80846001600160a01b03167f9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dc8585604051611fce929190614faf565b60405180910390a39392505050565b60006001600160e01b0319821663780e9d6360e01b1480610b0e5750610b0e82612ecf565b60008181526101976020526040902080546001600160a01b0319166001600160a01b0384169081179091558190612038826115b0565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600081815261019560205260408120546001600160a01b03166120eb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610c1d565b60006120f6836115b0565b9050806001600160a01b0316846001600160a01b031614806121315750836001600160a01b031661212684610ba7565b6001600160a01b0316145b8061216257506001600160a01b038082166000908152610198602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661217d826115b0565b6001600160a01b0316146121f95760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610c1d565b6001600160a01b03821661225b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610c1d565b612266838383612f0f565b612271600082612002565b6001600160a01b03831660009081526101966020526040812080546001929061229b908490614fc3565b90915550506001600160a01b0382166000908152610196602052604081208054600192906122ca908490614f97565b90915550506000818152610195602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080600061233c868686611b41565b915091508161238d5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610c1d565b4261239f610100880160e08901614fda565b6001600160801b0316111580156123d05750426123c461012088016101008901614fda565b6001600160801b031610155b61241c5760405162461bcd60e51b815260206004820152600f60248201527f72657175657374206578706972656400000000000000000000000000000000006044820152606401610c1d565b61012086013560009081526101fe60205260409020805460ff191660011790559150509392505050565b60a08101516124525750565b60a08101516101fc546000906127109061247c90600160801b90046001600160801b031684614c10565b6124869190614c2f565b60405163085b49ad60e41b815230600482015260006024820181905291925081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906385b49ad0906044016040805180830381865afa1580156124f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061251b9190614ff5565b9092509050600061271061252f8387614c10565b6125399190614c2f565b60c08701519091506001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156125b4578434146125b45760405162461bcd60e51b815260206004820152601660248201527f6d7573742073656e6420746f74616c2070726963652e000000000000000000006044820152606401610c1d565b60608601516000906001600160a01b0316156125d45786606001516125e2565b6101f9546001600160a01b03165b90506126078760c001516125f4611ec8565b6101fa546001600160a01b03168861306a565b61261e8760c00151612617611ec8565b868561306a565b6126498760c0015161262e611ec8565b838561263a8a8c614fc3565b6126449190614fc3565b61306a565b50505050505050565b61265c82826130b4565b600082815261016160205260409020610d669082613159565b61267f828261316e565b600082815261016160205260409020610d669082613211565b60006126a3826115b0565b90506126b181600084612f0f565b6126bc600083612002565b6001600160a01b0381166000908152610196602052604081208054600192906126e6908490614fc3565b90915550506000828152610195602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006117a58383613226565b816001600160a01b0316836001600160a01b031614156127af5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610c1d565b6001600160a01b0383811660008181526101986020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606001600160a01b0383163b61289c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610c1d565b600080846001600160a01b0316846040516128b79190615023565b600060405180830381855af49150503d80600081146128f2576040519150601f19603f3d011682016040523d82523d6000602084013e6128f7565b606091505b5091509150610adf828260405180606001604052806027815260200161512960279139613250565b61292a84848461216a565b61293684848484613289565b6117c75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610c1d565b6000610b0e825490565b600061216283838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a0892506129fc91508890506133e4565b8051906020012061351e565b9061356c565b600054610100900460ff16612a675760405162461bcd60e51b815260206004820152602b602482015260008051602061510983398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610c1d565b612a6f613590565b565b600054610100900460ff16612aca5760405162461bcd60e51b815260206004820152602b602482015260008051602061510983398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610c1d565b61131882826135f0565b600054610100900460ff16612b2d5760405162461bcd60e51b815260206004820152602b602482015260008051602061510983398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610c1d565b612b35613663565b6113bd816136bc565b600054610100900460ff16612b975760405162461bcd60e51b815260206004820152602b602482015260008051602061510983398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610c1d565b611318828261377d565b6113188282612652565b3360009081526099602052604081205460ff1615612bd0575060131936013560601c90565b503390565b60606000612be4836002614c10565b612bef906002614f97565b67ffffffffffffffff811115612c0757612c07614880565b6040519080825280601f01601f191660200182016040528015612c31576020820181803683370190505b509050600360fc1b81600081518110612c4c57612c4c614ee5565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612c7b57612c7b614ee5565b60200101906001600160f81b031916908160001a9053506000612c9f846002614c10565b612caa906001614f97565b90505b6001811115612d2f577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110612ceb57612ceb614ee5565b1a60f81b828281518110612d0157612d01614ee5565b60200101906001600160f81b031916908160001a90535060049490941c93612d288161503f565b9050612cad565b5083156117a55760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610c1d565b6001600160a01b038216612dd45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610c1d565b600081815261019560205260409020546001600160a01b031615612e3a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610c1d565b612e4660008383612f0f565b6001600160a01b038216600090815261019660205260408120805460019290612e70908490614f97565b90915550506000818152610195602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160e01b031982166380ac58cd60e01b1480612f0057506001600160e01b03198216635b5e139f60e01b145b80610b0e5750610b0e826137ff565b612f1a838383613824565b600080527fdf45e191c6a8bff7d5b2484d5c1deccbd5b2abc06a2abf694394baf9d01cb5e56020527f2b85be2befc2dd713b2f771c3d841437400c04e85bacc15958c6dcadb2aa5c045460ff16158015612f7c57506001600160a01b03831615155b8015612f9057506001600160a01b03821615155b15610d66576001600160a01b03831660009081527fdf45e191c6a8bff7d5b2484d5c1deccbd5b2abc06a2abf694394baf9d01cb5e5602052604090205460ff168061301257506001600160a01b03821660009081527fdf45e191c6a8bff7d5b2484d5c1deccbd5b2abc06a2abf694394baf9d01cb5e5602052604090205460ff165b610d665760405162461bcd60e51b815260206004820152602360248201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526265727360e81b6064820152608401610c1d565b80613074576117c7565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156130a8576130a382826138de565b6117c7565b6117c784848484613981565b600082815261012f602090815260408083206001600160a01b038516845290915290205460ff1661131857600082815261012f602090815260408083206001600160a01b03851684529091529020805460ff19166001179055613115611ec8565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006117a5836001600160a01b0384166139da565b600082815261012f602090815260408083206001600160a01b038516845290915290205460ff161561131857600082815261012f602090815260408083206001600160a01b03851684529091529020805460ff191690556131cd611ec8565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006117a5836001600160a01b038416613a29565b600082600001828154811061323d5761323d614ee5565b9060005260206000200154905092915050565b6060831561325f5750816117a5565b82511561326f5782518084602001fd5b8160405162461bcd60e51b8152600401610c1d9190614597565b60006001600160a01b0384163b156133d957836001600160a01b031663150b7a026132b2611ec8565b8786866040518563ffffffff1660e01b81526004016132d49493929190615056565b6020604051808303816000875af192505050801561330f575060408051601f3d908101601f1916820190925261330c91810190615092565b60015b6133bf573d80801561333d576040519150601f19603f3d011682016040523d82523d6000602084013e613342565b606091505b5080516133b75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610c1d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612162565b506001949350505050565b60607f86633b4ffa94b7c3d316ca70d7d2700f3fdfa7a7806efd31499b513d9176692e61341460208401846145ef565b61342460408501602086016145ef565b604085013561343960808701606088016145ef565b6134466080880188614c51565b6040516134549291906150af565b60405190819003902060a088013561347260e08a0160c08b016145ef565b6134836101008b0160e08c01614fda565b6134956101208c016101008d01614fda565b60408051602081019b909b526001600160a01b03998a16908b015296881660608a0152608089019590955292861660a088015260c087019190915260e08601529092166101008401526001600160801b03918216610120808501919091529116610140830152830135610160820152610180016040516020818303038152906040529050919050565b6000610b0e61352b613b1c565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061357b8585613b97565b9150915061358881613c07565b509392505050565b600054610100900460ff166135e95760405162461bcd60e51b815260206004820152602b602482015260008051602061510983398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610c1d565b6001603355565b600054610100900460ff166136495760405162461bcd60e51b815260206004820152602b602482015260008051602061510983398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610c1d565b815160209283012081519190920120606591909155606655565b600054610100900460ff16612a6f5760405162461bcd60e51b815260206004820152602b602482015260008051602061510983398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610c1d565b600054610100900460ff166137155760405162461bcd60e51b815260206004820152602b602482015260008051602061510983398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610c1d565b60005b81518110156113185760016099600084848151811061373957613739614ee5565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061377581614efb565b915050613718565b600054610100900460ff166137d65760405162461bcd60e51b815260206004820152602b602482015260008051602061510983398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610c1d565b81516137ea906101939060208501906143c7565b508051610d66906101949060208401906143c7565b60006001600160e01b03198216635a05180f60e01b1480610b0e5750610b0e82613dc2565b6001600160a01b0383166138815761387c816101c7805460008381526101c860205260408120829055600182018355919091527fff6df30967a6a678f565c59a19e91e5c0dbb20cfe9f9bf26d7da6dea0fffa24c0155565b6138a4565b816001600160a01b0316836001600160a01b0316146138a4576138a48382613df7565b6001600160a01b0382166138bb57610d6681613e99565b826001600160a01b0316826001600160a01b031614610d6657610d668282613f4e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461392b576040519150601f19603f3d011682016040523d82523d6000602084013e613930565b606091505b5050905080610d665760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610c1d565b816001600160a01b0316836001600160a01b031614156139a0576117c7565b6001600160a01b0383163014156139c5576130a36001600160a01b0385168383613f94565b6117c76001600160a01b03851684848461400c565b6000818152600183016020526040812054613a2157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b0e565b506000610b0e565b60008181526001830160205260408120548015613b12576000613a4d600183614fc3565b8554909150600090613a6190600190614fc3565b9050818114613ac6576000866000018281548110613a8157613a81614ee5565b9060005260206000200154905080876000018481548110613aa457613aa4614ee5565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080613ad757613ad76150bf565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610b0e565b6000915050610b0e565b60006117877f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f613b4b60655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b600080825160411415613bce5760208301516040840151606085015160001a613bc287828585614044565b94509450505050613c00565b825160401415613bf85760208301516040840151613bed868383614131565b935093505050613c00565b506000905060025b9250929050565b6000816004811115613c1b57613c1b6150d5565b1415613c245750565b6001816004811115613c3857613c386150d5565b1415613c865760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610c1d565b6002816004811115613c9a57613c9a6150d5565b1415613ce85760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610c1d565b6003816004811115613cfc57613cfc6150d5565b1415613d555760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610c1d565b6004816004811115613d6957613d696150d5565b14156113bd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610c1d565b60006001600160e01b03198216637965db0b60e01b1480610b0e57506301ffc9a760e01b6001600160e01b0319831614610b0e565b60006001613e0484611696565b613e0e9190614fc3565b60008381526101c66020526040902054909150808214613e64576001600160a01b03841660009081526101c56020908152604080832085845282528083205484845281842081905583526101c690915290208190555b5060009182526101c6602090815260408084208490556001600160a01b0390941683526101c581528383209183525290812055565b6101c754600090613eac90600190614fc3565b60008381526101c860205260408120546101c78054939450909284908110613ed657613ed6614ee5565b90600052602060002001549050806101c78381548110613ef857613ef8614ee5565b60009182526020808320909101929092558281526101c890915260408082208490558582528120556101c7805480613f3257613f326150bf565b6001900381819060005260206000200160009055905550505050565b6000613f5983611696565b6001600160a01b0390931660009081526101c56020908152604080832086845282528083208590559382526101c69052919091209190915550565b6040516001600160a01b038316602482015260448101829052610d6690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152614183565b6040516001600160a01b03808516602483015283166044820152606481018290526117c79085906323b872dd60e01b90608401613fc0565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561407b5750600090506003614128565b8460ff16601b1415801561409357508460ff16601c14155b156140a45750600090506004614128565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156140f8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661412157600060019250925050614128565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161416760ff86901c601b614f97565b905061417587828885614044565b935093505050935093915050565b60006141d8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166142689092919063ffffffff16565b805190915015610d6657808060200190518101906141f691906150eb565b610d665760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610c1d565b60606121628484600085856001600160a01b0385163b6142ca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c1d565b600080866001600160a01b031685876040516142e69190615023565b60006040518083038185875af1925050503d8060008114614323576040519150601f19603f3d011682016040523d82523d6000602084013e614328565b606091505b5091509150614338828286613250565b979650505050505050565b82805461434f90614bbf565b90600052602060002090601f01602090048101928261437157600085556143b7565b82601f1061438a5782800160ff198235161785556143b7565b828001600101855582156143b7579182015b828111156143b757823582559160200191906001019061439c565b506143c392915061443b565b5090565b8280546143d390614bbf565b90600052602060002090601f0160209004810192826143f557600085556143b7565b82601f1061440e57805160ff19168380011785556143b7565b828001600101855582156143b7579182015b828111156143b7578251825591602001919060010190614420565b5b808211156143c3576000815560010161443c565b6001600160a01b03811681146113bd57600080fd5b803561447081614450565b919050565b60008083601f84011261448757600080fd5b50813567ffffffffffffffff81111561449f57600080fd5b602083019150836020828501011115613c0057600080fd5b6000806000604084860312156144cc57600080fd5b83356144d781614450565b9250602084013567ffffffffffffffff8111156144f357600080fd5b6144ff86828701614475565b9497909650939450505050565b6001600160e01b0319811681146113bd57600080fd5b60006020828403121561453457600080fd5b81356117a58161450c565b60005b8381101561455a578181015183820152602001614542565b838111156117c75750506000910152565b6000815180845261458381602086016020860161453f565b601f01601f19169290920160200192915050565b6020815260006117a5602083018461456b565b6000602082840312156145bc57600080fd5b5035919050565b600080604083850312156145d657600080fd5b82356145e181614450565b946020939093013593505050565b60006020828403121561460157600080fd5b81356117a581614450565b60008060006060848603121561462157600080fd5b833561462c81614450565b9250602084013561463c81614450565b929592945050506040919091013590565b6000806040838503121561466057600080fd5b50508035926020909101359150565b60008060006040848603121561468457600080fd5b833567ffffffffffffffff8082111561469c57600080fd5b9085019061014082880312156146b157600080fd5b909350602085013590808211156146c757600080fd5b506144ff86828701614475565b600080604083850312156146e757600080fd5b8235915060208301356146f981614450565b809150509250929050565b6000806020838503121561471757600080fd5b823567ffffffffffffffff81111561472e57600080fd5b61473a85828601614475565b90969095509350505050565b60008060006060848603121561475b57600080fd5b83359250602084013561463c81614450565b80151581146113bd57600080fd5b6000806040838503121561478e57600080fd5b823561479981614450565b915060208301356146f98161476d565b600080602083850312156147bc57600080fd5b823567ffffffffffffffff808211156147d457600080fd5b818501915085601f8301126147e857600080fd5b8135818111156147f757600080fd5b8660208260051b850101111561480c57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561487357603f1988860301845261486185835161456b565b94509285019290850190600101614845565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156148ba576148ba614880565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156148e9576148e9614880565b604052919050565b600067ffffffffffffffff83111561490b5761490b614880565b61491e601f8401601f19166020016148c0565b905082815283838301111561493257600080fd5b828260208301376000602084830101529392505050565b6000806000806080858703121561495f57600080fd5b843561496a81614450565b9350602085013561497a81614450565b925060408501359150606085013567ffffffffffffffff81111561499d57600080fd5b8501601f810187136149ae57600080fd5b6149bd878235602084016148f1565b91505092959194509250565b600082601f8301126149da57600080fd5b6117a5838335602085016148f1565b600082601f8301126149fa57600080fd5b8135602067ffffffffffffffff821115614a1657614a16614880565b8160051b614a258282016148c0565b9283528481018201928281019087851115614a3f57600080fd5b83870192505b84831015614338578235614a5881614450565b82529183019190830190614a45565b80356001600160801b038116811461447057600080fd5b6000806000806000806000806000806101408b8d031215614a9e57600080fd5b614aa78b614465565b995060208b013567ffffffffffffffff80821115614ac457600080fd5b614ad08e838f016149c9565b9a5060408d0135915080821115614ae657600080fd5b614af28e838f016149c9565b995060608d0135915080821115614b0857600080fd5b614b148e838f016149c9565b985060808d0135915080821115614b2a57600080fd5b50614b378d828e016149e9565b965050614b4660a08c01614465565b9450614b5460c08c01614465565b9350614b6260e08c01614a67565b9250614b716101008c01614a67565b9150614b806101208c01614465565b90509295989b9194979a5092959850565b60008060408385031215614ba457600080fd5b8235614baf81614450565b915060208301356146f981614450565b600181811c90821680614bd357607f821691505b60208210811415614bf457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615614c2a57614c2a614bfa565b500290565b600082614c4c57634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e19843603018112614c6857600080fd5b83018035915067ffffffffffffffff821115614c8357600080fd5b602001915036819003821315613c0057600080fd5b60006101408236031215614cab57600080fd5b614cb3614896565b614cbc83614465565b8152614cca60208401614465565b602082015260408301356040820152614ce560608401614465565b6060820152608083013567ffffffffffffffff811115614d0457600080fd5b614d10368286016149c9565b60808301525060a083013560a0820152614d2c60c08401614465565b60c0820152614d3d60e08401614a67565b60e0820152610100614d50818501614a67565b9082015261012092830135928101929092525090565b6000808335601e19843603018112614d7d57600080fd5b830160208101925035905067ffffffffffffffff811115614d9d57600080fd5b803603831315613c0057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152614df660208201614de984614465565b6001600160a01b03169052565b6000614e0460208401614465565b6001600160a01b03811660408401525060408301356060830152614e2a60608401614465565b6001600160a01b038116608084015250614e476080840184614d66565b6101408060a0860152614e5f61016086018385614dac565b925060a086013560c0860152614e7760c08701614465565b6001600160a01b03811660e08701529150614e9460e08701614a67565b9150610100614ead818701846001600160801b03169052565b614eb8818801614a67565b925050610120614ed2818701846001600160801b03169052565b9590950135939094019290925250919050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415614f0f57614f0f614bfa565b5060010190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351614f4e81601785016020880161453f565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351614f8b81602884016020880161453f565b01602801949350505050565b60008219821115614faa57614faa614bfa565b500190565b602081526000612162602083018486614dac565b600082821015614fd557614fd5614bfa565b500390565b600060208284031215614fec57600080fd5b6117a582614a67565b6000806040838503121561500857600080fd5b825161501381614450565b6020939093015192949293505050565b6000825161503581846020870161453f565b9190910192915050565b60008161504e5761504e614bfa565b506000190190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152615088608083018461456b565b9695505050505050565b6000602082840312156150a457600080fd5b81516117a58161450c565b8183823760009101908152919050565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000602082840312156150fd57600080fd5b81516117a58161476d56fe496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a\";\n\ntype TokenERC721ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: TokenERC721ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class TokenERC721__factory extends ContractFactory {\n  constructor(...args: TokenERC721ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"TokenERC721\";\n  }\n\n  deploy(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<TokenERC721> {\n    return super.deploy(_thirdwebFee, overrides || {}) as Promise<TokenERC721>;\n  }\n  getDeployTransaction(\n    _thirdwebFee: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_thirdwebFee, overrides || {});\n  }\n  attach(address: string): TokenERC721 {\n    return super.attach(address) as TokenERC721;\n  }\n  connect(signer: Signer): TokenERC721__factory {\n    return super.connect(signer) as TokenERC721__factory;\n  }\n  static readonly contractName: \"TokenERC721\";\n  public readonly contractName: \"TokenERC721\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): TokenERC721Interface {\n    return new utils.Interface(_abi) as TokenERC721Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): TokenERC721 {\n    return new Contract(address, _abi, signerOrProvider) as TokenERC721;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { TWFactory, TWFactoryInterface } from \"../TWFactory\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_trustedForwarder\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_registry\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"contractType\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"version\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ImplementationAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"isApproved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ImplementationApproved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"proxy\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"deployer\",\n        type: \"address\",\n      },\n    ],\n    name: \"ProxyDeployed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"FACTORY_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_implementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"addImplementation\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"approval\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_implementation\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_toApprove\",\n        type: \"bool\",\n      },\n    ],\n    name: \"approveImplementation\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"currentVersion\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_type\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"deployProxy\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_implementation\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"_salt\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"deployProxyByImplementation\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"deployedProxy\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_type\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"_salt\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"deployProxyDeterministic\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"deployer\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_type\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_version\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getImplementation\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_type\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getLatestImplementation\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"implementation\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"registry\",\n    outputs: [\n      {\n        internalType: \"contract TWRegistry\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60c06040523480156200001157600080fd5b5060405162001f6738038062001f67833981016040819052620000349162000276565b6001600160a01b0382166080526200005760006200005162000099565b620000b5565b620000867fdfbefbf47cfe66b701d8cfdbce1de81c821590819cb07e71cb01b6602fb0ee276200005162000099565b6001600160a01b031660a05250620002ae565b6000620000b0620000c560201b62000d211760201c565b905090565b620000c18282620000fe565b5050565b6080516000906001600160a01b0316331415620000e9575060131936013560601c90565b620000b06200014160201b62000d6b1760201c565b6200011582826200014560201b62000d6f1760201c565b60008281526001602090815260409091206200013c91839062000e0e620001e7821b17901c565b505050565b3390565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000c1576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a362000099565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001fe836001600160a01b03841662000207565b90505b92915050565b6000818152600183016020526040812054620002505750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000201565b50600062000201565b80516001600160a01b03811681146200027157600080fd5b919050565b600080604083850312156200028a57600080fd5b620002958362000259565b9150620002a56020840162000259565b90509250929050565b60805160a051611c7e620002e960003960008181610336015281816106510152610c6f0152600081816103010152610d250152611c7e6000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c80639010d07c116100e3578063c6e2a4001161008c578063dd47595a11610066578063dd47595a1461044f578063e92016a414610483578063ec54d72f146104b757600080fd5b8063c6e2a40014610416578063ca15c87314610429578063d547741f1461043c57600080fd5b8063a217fddf116100bd578063a217fddf146103c5578063ac9650d8146103cd578063b9caf9d9146103ed57600080fd5b80639010d07c1461035857806391d148541461036b5780639430b496146103a257600080fd5b806336568abe1161014557806356fb09581161011f57806356fb0958146102de578063572b6c05146102f15780637b1039991461033157600080fd5b806336568abe146102705780633b426d3f1461028357806344ab6680146102a357600080fd5b80631e5e1e99116101765780631e5e1e9914610225578063248a9ca3146102385780632f2ff15d1461025b57600080fd5b806301ffc9a71461019d57806304a0fb17146101c557806311b804ab146101fa575b600080fd5b6101b06101ab3660046116a3565b6104ca565b60405190151581526020015b60405180910390f35b6101ec7fdfbefbf47cfe66b701d8cfdbce1de81c821590819cb07e71cb01b6602fb0ee2781565b6040519081526020016101bc565b61020d61020836600461178c565b6104f5565b6040516001600160a01b0390911681526020016101bc565b61020d6102333660046117e3565b610705565b6101ec610246366004611816565b60009081526020819052604090206001015490565b61026e61026936600461182f565b610745565b005b61026e61027e36600461182f565b610777565b6101ec610291366004611816565b60036020526000908152604090205481565b61020d6102b1366004611816565b6000908152600460209081526040808320600383528184205484529091529020546001600160a01b031690565b61026e6102ec36600461185b565b610813565b6101b06102ff366004611897565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b61020d7f000000000000000000000000000000000000000000000000000000000000000081565b61020d6103663660046118b2565b6108db565b6101b061037936600461182f565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6101b06103b0366004611897565b60026020526000908152604090205460ff1681565b6101ec600081565b6103e06103db3660046118d4565b6108f3565b6040516101bc91906119a5565b61020d6103fb366004611897565b6005602052600090815260409020546001600160a01b031681565b61026e610424366004611897565b6109e8565b6101ec610437366004611816565b610c2b565b61026e61044a36600461182f565b610c42565b61020d61045d3660046118b2565b60009182526004602090815260408084209284529190529020546001600160a01b031690565b61020d6104913660046118b2565b60046020908152600092835260408084209091529082529020546001600160a01b031681565b61020d6104c5366004611a07565b610c6a565b60006001600160e01b03198216635a05180f60e01b14806104ef57506104ef82610e23565b92915050565b6001600160a01b03831660009081526002602052604081205460ff166105625760405162461bcd60e51b815260206004820152601b60248201527f696d706c656d656e746174696f6e206e6f7420617070726f766564000000000060448201526064015b60405180910390fd5b600061056c610e58565b8360405160200161059b92919060609290921b6bffffffffffffffffffffffff19168252601482015260340190565b6040516020818303038152906040528051906020012090506105bd8582610e62565b91506105c7610e58565b6001600160a01b038381166000908152600560205260409020805473ffffffffffffffffffffffffffffffffffffffff19169290911691909117905561060b610e58565b6040516001600160a01b038481168252918216918716907f9e0862c4ebff2150fbbfd3f8547483f55bdec0c34fd977d3fccaa55d6c4ce7849060200160405180910390a37f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166352c28fab610686610e58565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529085166024820152604401600060405180830381600087803b1580156106cf57600080fd5b505af11580156106e3573d6000803e3d6000fd5b505050506000845111156106fd576106fb8285610f19565b505b509392505050565b6000838152600460209081526040808320600383528184205484529091528120546001600160a01b031661073a8185856104f5565b9150505b9392505050565b60008281526020819052604090206001015461076881610763610e58565b610f5b565b6107728383610fd9565b505050565b61077f610e58565b6001600160a01b0316816001600160a01b0316146108055760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610559565b61080f8282610ffb565b5050565b61083f7fdfbefbf47cfe66b701d8cfdbce1de81c821590819cb07e71cb01b6602fb0ee27610379610e58565b6108785760405162461bcd60e51b815260206004820152600a6024820152693737ba1030b236b4b71760b11b6044820152606401610559565b6001600160a01b038216600081815260026020908152604091829020805460ff19168515159081179091558251938452908301527f46c2f0868ef35772e9324a42eb6fa484490cca8494538a909cf05c897d7d4108910160405180910390a15050565b600082815260016020526040812061073e908361101d565b60608167ffffffffffffffff81111561090e5761090e6116e9565b60405190808252806020026020018201604052801561094157816020015b606081526020019060019003908161092c5790505b50905060005b828110156109e1576109b13085858481811061096557610965611a4e565b90506020028101906109779190611a64565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102992505050565b8282815181106109c3576109c3611a4e565b602002602001018190525080806109d990611ac8565b915050610947565b5092915050565b610a147fdfbefbf47cfe66b701d8cfdbce1de81c821590819cb07e71cb01b6602fb0ee27610379610e58565b610a4d5760405162461bcd60e51b815260206004820152600a6024820152693737ba1030b236b4b71760b11b6044820152606401610559565b60008190506000816001600160a01b031663cb2ef6f76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab69190611ae3565b90506000826001600160a01b031663a0a8e4606040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190611afc565b60008381526003602052604090205490915060ff8082169083161015610b845760405162461bcd60e51b815260206004820152601460248201527f77726f6e67206d6f64756c652076657273696f6e0000000000000000000000006044820152606401610559565b600083815260036020908152604080832060ff861690819055600483528184208185528352818420805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038b169081179091558085526002845293829020805460ff1916600117905581519384529183019190915284917fc39db2d47bafbb20367a9c840abffa57a2bc243c1f1e67c939ea0e89e59ed01a910160405180910390a25050505050565b60008181526001602052604081206104ef9061104e565b600082815260208190526040902060010154610c6081610763610e58565b6107728383610ffb565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166305d85eda610ca4610e58565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c9190611ae3565b9050610d19848483610705565b949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331415610d61575060131936013560601c90565b503390565b905090565b3390565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661080f576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610dca610e58565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061073e836001600160a01b038416611058565b60006001600160e01b03198216637965db0b60e01b14806104ef57506301ffc9a760e01b6001600160e01b03198316146104ef565b6000610d66610d21565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f59150506001600160a01b0381166104ef5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610559565b606061073e83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506110a7565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661080f57610f97816001600160a01b031660146110b6565b610fa28360206110b6565b604051602001610fb3929190611b1f565b60408051601f198184030181529082905262461bcd60e51b825261055991600401611ba0565b610fe38282610d6f565b60008281526001602052604090206107729082610e0e565b611005828261125f565b600082815260016020526040902061077290826112fc565b600061073e8383611311565b606061073e8383604051806060016040528060278152602001611c4b6027913961133b565b60006104ef825490565b600081815260018301602052604081205461109f575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104ef565b5060006104ef565b6060610d19848460008561142f565b606060006110c5836002611bb3565b6110d0906002611bd2565b67ffffffffffffffff8111156110e8576110e86116e9565b6040519080825280601f01601f191660200182016040528015611112576020820181803683370190505b509050600360fc1b8160008151811061112d5761112d611a4e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061115c5761115c611a4e565b60200101906001600160f81b031916908160001a9053506000611180846002611bb3565b61118b906001611bd2565b90505b6001811115611210577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106111cc576111cc611a4e565b1a60f81b8282815181106111e2576111e2611a4e565b60200101906001600160f81b031916908160001a90535060049490941c9361120981611bea565b905061118e565b50831561073e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610559565b6000828152602081815260408083206001600160a01b038516845290915290205460ff161561080f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556112b8610e58565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061073e836001600160a01b038416611577565b600082600001828154811061132857611328611a4e565b9060005260206000200154905092915050565b60606001600160a01b0384163b6113ba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610559565b600080856001600160a01b0316856040516113d59190611c01565b600060405180830381855af49150503d8060008114611410576040519150601f19603f3d011682016040523d82523d6000602084013e611415565b606091505b509150915061142582828661166a565b9695505050505050565b6060824710156114a75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610559565b6001600160a01b0385163b6114fe5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610559565b600080866001600160a01b0316858760405161151a9190611c01565b60006040518083038185875af1925050503d8060008114611557576040519150601f19603f3d011682016040523d82523d6000602084013e61155c565b606091505b509150915061156c82828661166a565b979650505050505050565b6000818152600183016020526040812054801561166057600061159b600183611c1d565b85549091506000906115af90600190611c1d565b90508181146116145760008660000182815481106115cf576115cf611a4e565b90600052602060002001549050808760000184815481106115f2576115f2611a4e565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061162557611625611c34565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104ef565b60009150506104ef565b6060831561167957508161073e565b8251156116895782518084602001fd5b8160405162461bcd60e51b81526004016105599190611ba0565b6000602082840312156116b557600080fd5b81356001600160e01b03198116811461073e57600080fd5b80356001600160a01b03811681146116e457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261171057600080fd5b813567ffffffffffffffff8082111561172b5761172b6116e9565b604051601f8301601f19908116603f01168101908282118183101715611753576117536116e9565b8160405283815286602085880101111561176c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156117a157600080fd5b6117aa846116cd565b9250602084013567ffffffffffffffff8111156117c657600080fd5b6117d2868287016116ff565b925050604084013590509250925092565b6000806000606084860312156117f857600080fd5b83359250602084013567ffffffffffffffff8111156117c657600080fd5b60006020828403121561182857600080fd5b5035919050565b6000806040838503121561184257600080fd5b82359150611852602084016116cd565b90509250929050565b6000806040838503121561186e57600080fd5b611877836116cd565b91506020830135801515811461188c57600080fd5b809150509250929050565b6000602082840312156118a957600080fd5b61073e826116cd565b600080604083850312156118c557600080fd5b50508035926020909101359150565b600080602083850312156118e757600080fd5b823567ffffffffffffffff808211156118ff57600080fd5b818501915085601f83011261191357600080fd5b81358181111561192257600080fd5b8660208260051b850101111561193757600080fd5b60209290920196919550909350505050565b60005b8381101561196457818101518382015260200161194c565b83811115611973576000848401525b50505050565b60008151808452611991816020860160208601611949565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156119fa57603f198886030184526119e8858351611979565b945092850192908501906001016119cc565b5092979650505050505050565b60008060408385031215611a1a57600080fd5b82359150602083013567ffffffffffffffff811115611a3857600080fd5b611a44858286016116ff565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611a7b57600080fd5b83018035915067ffffffffffffffff821115611a9657600080fd5b602001915036819003821315611aab57600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611adc57611adc611ab2565b5060010190565b600060208284031215611af557600080fd5b5051919050565b600060208284031215611b0e57600080fd5b815160ff8116811461073e57600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611b57816017850160208801611949565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611b94816028840160208801611949565b01602801949350505050565b60208152600061073e6020830184611979565b6000816000190483118215151615611bcd57611bcd611ab2565b500290565b60008219821115611be557611be5611ab2565b500190565b600081611bf957611bf9611ab2565b506000190190565b60008251611c13818460208701611949565b9190910192915050565b600082821015611c2f57611c2f611ab2565b500390565b634e487b7160e01b600052603160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a\";\n\ntype TWFactoryConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: TWFactoryConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class TWFactory__factory extends ContractFactory {\n  constructor(...args: TWFactoryConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"TWFactory\";\n  }\n\n  deploy(\n    _trustedForwarder: string,\n    _registry: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<TWFactory> {\n    return super.deploy(\n      _trustedForwarder,\n      _registry,\n      overrides || {}\n    ) as Promise<TWFactory>;\n  }\n  getDeployTransaction(\n    _trustedForwarder: string,\n    _registry: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _trustedForwarder,\n      _registry,\n      overrides || {}\n    );\n  }\n  attach(address: string): TWFactory {\n    return super.attach(address) as TWFactory;\n  }\n  connect(signer: Signer): TWFactory__factory {\n    return super.connect(signer) as TWFactory__factory;\n  }\n  static readonly contractName: \"TWFactory\";\n  public readonly contractName: \"TWFactory\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): TWFactoryInterface {\n    return new utils.Interface(_abi) as TWFactoryInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): TWFactory {\n    return new Contract(address, _abi, signerOrProvider) as TWFactory;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IFeeTierPlacementExtension,\n  IFeeTierPlacementExtensionInterface,\n} from \"../IFeeTierPlacementExtension\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"deployer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"proxy\",\n        type: \"address\",\n      },\n    ],\n    name: \"getFeeTier\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"tierId\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"validUntilTimestamp\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IFeeTierPlacementExtension__factory {\n  static readonly abi = _abi;\n  static createInterface(): IFeeTierPlacementExtensionInterface {\n    return new utils.Interface(_abi) as IFeeTierPlacementExtensionInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IFeeTierPlacementExtension {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IFeeTierPlacementExtension;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { TWFee, TWFeeInterface } from \"../TWFee\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_trustedForwarder\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_factory\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tierId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"feeType\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"FeeTierUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"proxyOrDeployer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tierId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"validUntilTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TierUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_FEE_BPS\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [\n      {\n        internalType: \"contract TWFactory\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"feeInfo\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_proxy\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_feeType\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getFeeInfo\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"bps\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_deployer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_proxy\",\n        type: \"address\",\n      },\n    ],\n    name: \"getFeeTier\",\n    outputs: [\n      {\n        internalType: \"uint128\",\n        name: \"tierId\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"validUntilTimestamp\",\n        type: \"uint128\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_tierId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_feeBps\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_feeRecipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_feeType\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setFeeInfoForTier\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_extension\",\n        type: \"address\",\n      },\n    ],\n    name: \"setFeeTierPlacementExtension\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_proxyOrDeployer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_tierId\",\n        type: \"uint128\",\n      },\n      {\n        internalType: \"uint128\",\n        name: \"_validUntilTimestamp\",\n        type: \"uint128\",\n      },\n    ],\n    name: \"setTier\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tierPlacementExtension\",\n    outputs: [\n      {\n        internalType: \"contract IFeeTierPlacementExtension\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60c06040523480156200001157600080fd5b5060405162001aa738038062001aa78339810160408190526200003491620002a0565b6001600160a01b03808316608052811660a0526200005d600062000057620000c3565b620000df565b6200008c7f4ff1b29862215be122f4c8c8cc8572cede47eb1fdef6a4089fe228921d02432162000057620000c3565b620000bb7fb4cd4a1d3ca8894bcf03d193b5333b5567916dea2b3ce79ec3dfda4cf2470d1c62000057620000c3565b5050620002d8565b6000620000da620000ef60201b62000b1d1760201c565b905090565b620000eb828262000128565b5050565b6080516000906001600160a01b031633141562000113575060131936013560601c90565b620000da6200016b60201b62000b671760201c565b6200013f82826200016f60201b62000b6b1760201c565b60008281526001602090815260409091206200016691839062000c0a62000211821b17901c565b505050565b3390565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000eb576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001cd620000c3565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000228836001600160a01b03841662000231565b90505b92915050565b60008181526001830160205260408120546200027a575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200022b565b5060006200022b565b80516001600160a01b03811681146200029b57600080fd5b919050565b60008060408385031215620002b457600080fd5b620002bf8362000283565b9150620002cf6020840162000283565b90509250929050565b60805160a05161179b6200030c60003960008181610372015261066b01526000818161022d0152610b21015261179b6000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c806391d14854116100cd578063c45a015511610081578063d547741f11610066578063d547741f146103a7578063d55be8c6146103ba578063de7e3fa4146103c257600080fd5b8063c45a01551461036d578063ca15c8731461039457600080fd5b80639b433d3a116100b25780639b433d3a14610332578063a217fddf14610345578063ac9650d81461034d57600080fd5b806391d14854146102e8578063934d520a1461031f57600080fd5b8063572b6c0511610124578063818f834911610109578063818f83491461027057806385b49ad0146102a35780639010d07c146102d557600080fd5b8063572b6c051461021d57806357efce361461025d57600080fd5b80632b3ea950116101555780632b3ea950146101ca5780632f2ff15d146101f557806336568abe1461020a57600080fd5b806301ffc9a714610171578063248a9ca314610199575b600080fd5b61018461017f36600461124f565b61041a565b60405190151581526020015b60405180910390f35b6101bc6101a7366004611279565b60009081526020819052604090206001015490565b604051908152602001610190565b6004546101dd906001600160a01b031681565b6040516001600160a01b039091168152602001610190565b6102086102033660046112aa565b610445565b005b6102086102183660046112aa565b610477565b61018461022b3660046112da565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b61020861026b3660046112da565b610518565b61028361027e3660046112f7565b610556565b604080516001600160801b03938416815292909116602083015201610190565b6102b66102b1366004611325565b610645565b604080516001600160a01b039093168352602083019190915201610190565b6101dd6102e3366004611351565b6107f2565b6101846102f63660046112aa565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61020861032d366004611388565b610811565b6102086103403660046113d3565b6108c8565b6101bc600081565b61036061035b366004611412565b6109e9565b60405161019091906114e3565b6101dd7f000000000000000000000000000000000000000000000000000000000000000081565b6101bc6103a2366004611279565b610ade565b6102086103b53660046112aa565b610af5565b6101bc606481565b6103fd6103d0366004611351565b6003602090815260009283526040808420909152908252902080546001909101546001600160a01b031682565b604080519283526001600160a01b03909116602083015201610190565b60006001600160e01b03198216635a05180f60e01b148061043f575061043f82610c1f565b92915050565b60008281526020819052604090206001015461046881610463610c54565b610c5e565b6104728383610cdc565b505050565b61047f610c54565b6001600160a01b0316816001600160a01b03161461050a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6105148282610cfe565b5050565b600061052681610463610c54565b506004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526002602090815260408083208151808301909252546001600160801b038082168352600160801b90910416918101829052829142116105af578051602082015190935091506105b8565b60009250600091505b6001600160801b0383161580156105d657506001600160801b038216155b1561063d57506001600160a01b0384166000908152600260209081526040918290208251808401909352546001600160801b038082168452600160801b9091041690820181905242116106345780516020820151909350915061063d565b60009250600091505b509250929050565b60405163b9caf9d960e01b81526001600160a01b038381166004830152600091829182917f00000000000000000000000000000000000000000000000000000000000000009091169063b9caf9d990602401602060405180830381865afa1580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d89190611545565b60045490915060009081906001600160a01b03161561076f576004805460405163818f834960e01b81526001600160a01b0386811693820193909352898316602482015291169063818f8349906044016040805180830381865afa925050508015610760575060408051601f3d908101601f1916820190925261075d91810190611562565b60015b6107695761076f565b90925090505b6001600160801b03821615801561078d57506001600160801b038116155b156107a05761079c8388610556565b5091505b506001600160801b0316600090815260036020908152604080832096835295815290859020855180870190965280548087526001909101546001600160a01b0316959091018590529395939450505050565b600082815260016020526040812061080a9083610d20565b9392505050565b7fb4cd4a1d3ca8894bcf03d193b5333b5567916dea2b3ce79ec3dfda4cf2470d1c61083e81610463610c54565b6040805180820182526001600160801b0385811680835285821660208085018281526001600160a01b038b16600081815260028452889020965191518616600160801b029190951617909455845191825292810192909252917ff406c17c43e8510021f8e9d634aca0c743b8343139c1e9b0ff49314654be0049910160405180910390a250505050565b7f4ff1b29862215be122f4c8c8cc8572cede47eb1fdef6a4089fe228921d0243216108f581610463610c54565b60648411156109465760405162461bcd60e51b815260206004820152600d60248201527f66656520746f6f20686967682e000000000000000000000000000000000000006044820152606401610501565b6040805180820182528581526001600160a01b03858116602080840182815260008b81526003835286812089825283528690208551815590516001909101805473ffffffffffffffffffffffffffffffffffffffff1916919094161790925583519081529081018790529091849188917fa65b5a8bef4b203b2d60b65273c1bbc861636c8b012f265f43406696466e6f89910160405180910390a3505050505050565b60608167ffffffffffffffff811115610a0457610a04611591565b604051908082528060200260200182016040528015610a3757816020015b6060815260200190600190039081610a225790505b50905060005b82811015610ad757610aa730858584818110610a5b57610a5b6115a7565b9050602002810190610a6d91906115bd565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d2c92505050565b828281518110610ab957610ab96115a7565b60200260200101819052508080610acf90611621565b915050610a3d565b5092915050565b600081815260016020526040812061043f90610d51565b600082815260208190526040902060010154610b1381610463610c54565b6104728383610cfe565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331415610b5d575060131936013560601c90565b503390565b905090565b3390565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610514576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610bc6610c54565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061080a836001600160a01b038416610d5b565b60006001600160e01b03198216637965db0b60e01b148061043f57506301ffc9a760e01b6001600160e01b031983161461043f565b6000610b62610b1d565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661051457610c9a816001600160a01b03166014610daa565b610ca5836020610daa565b604051602001610cb692919061163c565b60408051601f198184030181529082905262461bcd60e51b8252610501916004016116bd565b610ce68282610b6b565b60008281526001602052604090206104729082610c0a565b610d088282610f53565b60008281526001602052604090206104729082610ff0565b600061080a8383611005565b606061080a83836040518060600160405280602781526020016117686027913961102f565b600061043f825490565b6000818152600183016020526040812054610da25750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561043f565b50600061043f565b60606000610db98360026116d0565b610dc49060026116ef565b67ffffffffffffffff811115610ddc57610ddc611591565b6040519080825280601f01601f191660200182016040528015610e06576020820181803683370190505b509050600360fc1b81600081518110610e2157610e216115a7565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e5057610e506115a7565b60200101906001600160f81b031916908160001a9053506000610e748460026116d0565b610e7f9060016116ef565b90505b6001811115610f04577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610ec057610ec06115a7565b1a60f81b828281518110610ed657610ed66115a7565b60200101906001600160f81b031916908160001a90535060049490941c93610efd81611707565b9050610e82565b50831561080a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610501565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1615610514576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610fac610c54565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061080a836001600160a01b038416611123565b600082600001828154811061101c5761101c6115a7565b9060005260206000200154905092915050565b60606001600160a01b0384163b6110ae5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610501565b600080856001600160a01b0316856040516110c9919061171e565b600060405180830381855af49150503d8060008114611104576040519150601f19603f3d011682016040523d82523d6000602084013e611109565b606091505b5091509150611119828286611216565b9695505050505050565b6000818152600183016020526040812054801561120c57600061114760018361173a565b855490915060009061115b9060019061173a565b90508181146111c057600086600001828154811061117b5761117b6115a7565b906000526020600020015490508087600001848154811061119e5761119e6115a7565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806111d1576111d1611751565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061043f565b600091505061043f565b6060831561122557508161080a565b8251156112355782518084602001fd5b8160405162461bcd60e51b815260040161050191906116bd565b60006020828403121561126157600080fd5b81356001600160e01b03198116811461080a57600080fd5b60006020828403121561128b57600080fd5b5035919050565b6001600160a01b03811681146112a757600080fd5b50565b600080604083850312156112bd57600080fd5b8235915060208301356112cf81611292565b809150509250929050565b6000602082840312156112ec57600080fd5b813561080a81611292565b6000806040838503121561130a57600080fd5b823561131581611292565b915060208301356112cf81611292565b6000806040838503121561133857600080fd5b823561134381611292565b946020939093013593505050565b6000806040838503121561136457600080fd5b50508035926020909101359150565b6001600160801b03811681146112a757600080fd5b60008060006060848603121561139d57600080fd5b83356113a881611292565b925060208401356113b881611373565b915060408401356113c881611373565b809150509250925092565b600080600080608085870312156113e957600080fd5b8435935060208501359250604085013561140281611292565b9396929550929360600135925050565b6000806020838503121561142557600080fd5b823567ffffffffffffffff8082111561143d57600080fd5b818501915085601f83011261145157600080fd5b81358181111561146057600080fd5b8660208260051b850101111561147557600080fd5b60209290920196919550909350505050565b60005b838110156114a257818101518382015260200161148a565b838111156114b1576000848401525b50505050565b600081518084526114cf816020860160208601611487565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561153857603f198886030184526115268583516114b7565b9450928501929085019060010161150a565b5092979650505050505050565b60006020828403121561155757600080fd5b815161080a81611292565b6000806040838503121561157557600080fd5b825161158081611373565b60208401519092506112cf81611373565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126115d457600080fd5b83018035915067ffffffffffffffff8211156115ef57600080fd5b60200191503681900382131561160457600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156116355761163561160b565b5060010190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611674816017850160208801611487565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516116b1816028840160208801611487565b01602801949350505050565b60208152600061080a60208301846114b7565b60008160001904831182151516156116ea576116ea61160b565b500290565b600082198211156117025761170261160b565b500190565b6000816117165761171661160b565b506000190190565b60008251611730818460208701611487565b9190910192915050565b60008282101561174c5761174c61160b565b500390565b634e487b7160e01b600052603160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a\";\n\ntype TWFeeConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: TWFeeConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class TWFee__factory extends ContractFactory {\n  constructor(...args: TWFeeConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"TWFee\";\n  }\n\n  deploy(\n    _trustedForwarder: string,\n    _factory: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<TWFee> {\n    return super.deploy(\n      _trustedForwarder,\n      _factory,\n      overrides || {}\n    ) as Promise<TWFee>;\n  }\n  getDeployTransaction(\n    _trustedForwarder: string,\n    _factory: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _trustedForwarder,\n      _factory,\n      overrides || {}\n    );\n  }\n  attach(address: string): TWFee {\n    return super.attach(address) as TWFee;\n  }\n  connect(signer: Signer): TWFee__factory {\n    return super.connect(signer) as TWFee__factory;\n  }\n  static readonly contractName: \"TWFee\";\n  public readonly contractName: \"TWFee\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): TWFeeInterface {\n    return new utils.Interface(_abi) as TWFeeInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): TWFee {\n    return new Contract(address, _abi, signerOrProvider) as TWFee;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport {\n  Signer,\n  utils,\n  Contract,\n  ContractFactory,\n  PayableOverrides,\n  BytesLike,\n} from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { TWProxy, TWProxyInterface } from \"../TWProxy\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_logic\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"constructor\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040526040516106c03803806106c083398101604081905261002291610261565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd61032f565b6000805160206106798339815191521461006957610069610354565b8161008e60008051602061067983398151915260001b6100d060201b61005f1760201c565b80546001600160a01b0319166001600160a01b03929092169190911790558051156100c9576100c782826100d360201b6100621760201c565b505b50506103b9565b90565b60606100f88383604051806060016040528060278152602001610699602791396100ff565b9392505050565b60606001600160a01b0384163b61016c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b031685604051610187919061036a565b600060405180830381855af49150503d80600081146101c2576040519150601f19603f3d011682016040523d82523d6000602084013e6101c7565b606091505b5090925090506101d88282866101e2565b9695505050505050565b606083156101f15750816100f8565b8251156102015782518084602001fd5b8160405162461bcd60e51b81526004016101639190610386565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561024c578181015183820152602001610234565b8381111561025b576000848401525b50505050565b6000806040838503121561027457600080fd5b82516001600160a01b038116811461028b57600080fd5b60208401519092506001600160401b03808211156102a857600080fd5b818501915085601f8301126102bc57600080fd5b8151818111156102ce576102ce61021b565b604051601f8201601f19908116603f011681019083821181831017156102f6576102f661021b565b8160405282815288602084870101111561030f57600080fd5b610320836020830160208801610231565b80955050505050509250929050565b60008282101561034f57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161037c818460208701610231565b9190910192915050565b60208152600082518060208401526103a5816040850160208701610231565b601f01601f19169190910160400192915050565b6102b1806103c86000396000f3fe60806040523661001357610011610017565b005b6100115b61005d6100587f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b61008e565b565b90565b6060610087838360405180606001604052806027815260200161027e602791396100b2565b9392505050565b3660008037600080366000845af43d6000803e8080156100ad573d6000f35b3d6000fd5b606073ffffffffffffffffffffffffffffffffffffffff84163b6101435760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161016b919061022e565b600060405180830381855af49150503d80600081146101a6576040519150601f19603f3d011682016040523d82523d6000602084013e6101ab565b606091505b50915091506101bb8282866101c5565b9695505050505050565b606083156101d4575081610087565b8251156101e45782518084602001fd5b8160405162461bcd60e51b815260040161013a919061024a565b60005b83811015610219578181015183820152602001610201565b83811115610228576000848401525b50505050565b600082516102408184602087016101fe565b9190910192915050565b60208152600082518060208401526102698160408501602087016101fe565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\";\n\ntype TWProxyConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: TWProxyConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class TWProxy__factory extends ContractFactory {\n  constructor(...args: TWProxyConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"TWProxy\";\n  }\n\n  deploy(\n    _logic: string,\n    _data: BytesLike,\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): Promise<TWProxy> {\n    return super.deploy(_logic, _data, overrides || {}) as Promise<TWProxy>;\n  }\n  getDeployTransaction(\n    _logic: string,\n    _data: BytesLike,\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_logic, _data, overrides || {});\n  }\n  attach(address: string): TWProxy {\n    return super.attach(address) as TWProxy;\n  }\n  connect(signer: Signer): TWProxy__factory {\n    return super.connect(signer) as TWProxy__factory;\n  }\n  static readonly contractName: \"TWProxy\";\n  public readonly contractName: \"TWProxy\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): TWProxyInterface {\n    return new utils.Interface(_abi) as TWProxyInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): TWProxy {\n    return new Contract(address, _abi, signerOrProvider) as TWProxy;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { TWRegistry, TWRegistryInterface } from \"../TWRegistry\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_trustedForwarder\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"deployer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"deployment\",\n        type: \"address\",\n      },\n    ],\n    name: \"Added\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"deployer\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"deployment\",\n        type: \"address\",\n      },\n    ],\n    name: \"Deleted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"OPERATOR_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_deployer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_deployment\",\n        type: \"address\",\n      },\n    ],\n    name: \"add\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_deployer\",\n        type: \"address\",\n      },\n    ],\n    name: \"count\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_deployer\",\n        type: \"address\",\n      },\n    ],\n    name: \"getAll\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"data\",\n        type: \"bytes[]\",\n      },\n    ],\n    name: \"multicall\",\n    outputs: [\n      {\n        internalType: \"bytes[]\",\n        name: \"results\",\n        type: \"bytes[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_deployer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_deployment\",\n        type: \"address\",\n      },\n    ],\n    name: \"remove\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60a06040523480156200001157600080fd5b50604051620016b4380380620016b483398101604081905262000034916200021e565b6001600160a01b038116608052620000576000620000516200005e565b6200007a565b5062000250565b6000620000756200008a60201b6200082e1760201c565b905090565b620000868282620000c3565b5050565b6080516000906001600160a01b0316331415620000ae575060131936013560601c90565b620000756200010660201b620008781760201c565b620000da82826200010a60201b6200087c1760201c565b6000828152600160209081526040909120620001019183906200091b620001ac821b17901c565b505050565b3390565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000086576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001686200005e565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001c3836001600160a01b038416620001cc565b90505b92915050565b60008181526001830160205260408120546200021557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001c6565b506000620001c6565b6000602082840312156200023157600080fd5b81516001600160a01b03811681146200024957600080fd5b9392505050565b60805161144162000273600039600081816101bc015261083201526114416000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639010d07c11610097578063ca15c87311610066578063ca15c87314610289578063d547741f1461029c578063eb077342146102af578063f5b541a6146102cf57600080fd5b80639010d07c146101ff57806391d148541461022a578063a217fddf14610261578063ac9650d81461026957600080fd5b806336568abe116100d357806336568abe1461018657806352c28fab14610199578063572b6c05146101ac5780637f7c1491146101ec57600080fd5b806301ffc9a71461010557806305d85eda1461012d578063248a9ca31461014e5780632f2ff15d14610171575b600080fd5b610118610113366004610fc5565b6102f6565b60405190151581526020015b60405180910390f35b61014061013b36600461100b565b610321565b604051908152602001610124565b61014061015c366004611026565b60009081526020819052604090206001015490565b61018461017f36600461103f565b610342565b005b61018461019436600461103f565b610374565b6101846101a736600461106b565b610415565b6101186101ba36600461100b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6101846101fa36600461106b565b610566565b61021261020d366004611095565b6106b7565b6040516001600160a01b039091168152602001610124565b61011861023836600461103f565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610140600081565b61027c6102773660046110b7565b6106d6565b6040516101249190611188565b610140610297366004611026565b6107cb565b6101846102aa36600461103f565b6107e2565b6102c26102bd36600461100b565b61080a565b60405161012491906111ea565b6101407f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92981565b60006001600160e01b03198216635a05180f60e01b148061031b575061031b82610930565b92915050565b6001600160a01b038116600090815260026020526040812061031b90610965565b6000828152602081905260409020600101546103658161036061096f565b610979565b61036f83836109f7565b505050565b61037c61096f565b6001600160a01b0316816001600160a01b0316146104075760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6104118282610a19565b5050565b6104417f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92961023861096f565b80610464575061044f61096f565b6001600160a01b0316826001600160a01b0316145b6104b05760405162461bcd60e51b815260206004820152601960248201527f6e6f74206f70657261746f72206f72206465706c6f7965722e0000000000000060448201526064016103fe565b6001600160a01b03821660009081526002602052604081206104d2908361091b565b9050806105215760405162461bcd60e51b815260206004820152600d60248201527f6661696c656420746f206164640000000000000000000000000000000000000060448201526064016103fe565b816001600160a01b0316836001600160a01b03167f938c63ac3d228b23f6bee7618fefc6790522e338ac202c958a2ea9eb9706c5d160405160405180910390a3505050565b6105927f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92961023861096f565b806105b557506105a061096f565b6001600160a01b0316826001600160a01b0316145b6106015760405162461bcd60e51b815260206004820152601960248201527f6e6f74206f70657261746f72206f72206465706c6f7965722e0000000000000060448201526064016103fe565b6001600160a01b03821660009081526002602052604081206106239083610a37565b9050806106725760405162461bcd60e51b815260206004820152601060248201527f6661696c656420746f2072656d6f76650000000000000000000000000000000060448201526064016103fe565b816001600160a01b0316836001600160a01b03167ffc5ffe2160301e6b21a86f66febb30fe4e9e6932ac1afc0348fb2fd5daa18b1360405160405180910390a3505050565b60008281526001602052604081206106cf9083610a4c565b9392505050565b60608167ffffffffffffffff8111156106f1576106f1611237565b60405190808252806020026020018201604052801561072457816020015b606081526020019060019003908161070f5790505b50905060005b828110156107c457610794308585848181106107485761074861124d565b905060200281019061075a9190611263565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a5892505050565b8282815181106107a6576107a661124d565b602002602001018190525080806107bc906112c7565b91505061072a565b5092915050565b600081815260016020526040812061031b90610965565b6000828152602081905260409020600101546108008161036061096f565b61036f8383610a19565b6001600160a01b038116600090815260026020526040902060609061031b90610a7d565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633141561086e575060131936013560601c90565b503390565b905090565b3390565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610411576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556108d761096f565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006106cf836001600160a01b038416610a8a565b60006001600160e01b03198216637965db0b60e01b148061031b57506301ffc9a760e01b6001600160e01b031983161461031b565b600061031b825490565b600061087361082e565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610411576109b5816001600160a01b03166014610ad9565b6109c0836020610ad9565b6040516020016109d19291906112e2565b60408051601f198184030181529082905262461bcd60e51b82526103fe91600401611363565b610a01828261087c565b600082815260016020526040902061036f908261091b565b610a238282610c82565b600082815260016020526040902061036f90825b60006106cf836001600160a01b038416610d1f565b60006106cf8383610e12565b60606106cf838360405180606001604052806027815260200161140e60279139610e3c565b606060006106cf83610f30565b6000818152600183016020526040812054610ad15750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561031b565b50600061031b565b60606000610ae8836002611376565b610af3906002611395565b67ffffffffffffffff811115610b0b57610b0b611237565b6040519080825280601f01601f191660200182016040528015610b35576020820181803683370190505b509050600360fc1b81600081518110610b5057610b5061124d565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610b7f57610b7f61124d565b60200101906001600160f81b031916908160001a9053506000610ba3846002611376565b610bae906001611395565b90505b6001811115610c33577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610bef57610bef61124d565b1a60f81b828281518110610c0557610c0561124d565b60200101906001600160f81b031916908160001a90535060049490941c93610c2c816113ad565b9050610bb1565b5083156106cf5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103fe565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1615610411576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610cdb61096f565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60008181526001830160205260408120548015610e08576000610d436001836113c4565b8554909150600090610d57906001906113c4565b9050818114610dbc576000866000018281548110610d7757610d7761124d565b9060005260206000200154905080876000018481548110610d9a57610d9a61124d565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610dcd57610dcd6113db565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061031b565b600091505061031b565b6000826000018281548110610e2957610e2961124d565b9060005260206000200154905092915050565b60606001600160a01b0384163b610ebb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016103fe565b600080856001600160a01b031685604051610ed691906113f1565b600060405180830381855af49150503d8060008114610f11576040519150601f19603f3d011682016040523d82523d6000602084013e610f16565b606091505b5091509150610f26828286610f8c565b9695505050505050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610f8057602002820191906000526020600020905b815481526020019060010190808311610f6c575b50505050509050919050565b60608315610f9b5750816106cf565b825115610fab5782518084602001fd5b8160405162461bcd60e51b81526004016103fe9190611363565b600060208284031215610fd757600080fd5b81356001600160e01b0319811681146106cf57600080fd5b80356001600160a01b038116811461100657600080fd5b919050565b60006020828403121561101d57600080fd5b6106cf82610fef565b60006020828403121561103857600080fd5b5035919050565b6000806040838503121561105257600080fd5b8235915061106260208401610fef565b90509250929050565b6000806040838503121561107e57600080fd5b61108783610fef565b915061106260208401610fef565b600080604083850312156110a857600080fd5b50508035926020909101359150565b600080602083850312156110ca57600080fd5b823567ffffffffffffffff808211156110e257600080fd5b818501915085601f8301126110f657600080fd5b81358181111561110557600080fd5b8660208260051b850101111561111a57600080fd5b60209290920196919550909350505050565b60005b8381101561114757818101518382015260200161112f565b83811115611156576000848401525b50505050565b6000815180845261117481602086016020860161112c565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156111dd57603f198886030184526111cb85835161115c565b945092850192908501906001016111af565b5092979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561122b5783516001600160a01b031683529284019291840191600101611206565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261127a57600080fd5b83018035915067ffffffffffffffff82111561129557600080fd5b6020019150368190038213156112aa57600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156112db576112db6112b1565b5060010190565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161131a81601785016020880161112c565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161135781602884016020880161112c565b01602801949350505050565b6020815260006106cf602083018461115c565b6000816000190483118215151615611390576113906112b1565b500290565b600082198211156113a8576113a86112b1565b500190565b6000816113bc576113bc6112b1565b506000190190565b6000828210156113d6576113d66112b1565b500390565b634e487b7160e01b600052603160045260246000fd5b6000825161140381846020870161112c565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080c000a\";\n\ntype TWRegistryConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: TWRegistryConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class TWRegistry__factory extends ContractFactory {\n  constructor(...args: TWRegistryConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"TWRegistry\";\n  }\n\n  deploy(\n    _trustedForwarder: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<TWRegistry> {\n    return super.deploy(\n      _trustedForwarder,\n      overrides || {}\n    ) as Promise<TWRegistry>;\n  }\n  getDeployTransaction(\n    _trustedForwarder: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_trustedForwarder, overrides || {});\n  }\n  attach(address: string): TWRegistry {\n    return super.attach(address) as TWRegistry;\n  }\n  connect(signer: Signer): TWRegistry__factory {\n    return super.connect(signer) as TWRegistry__factory;\n  }\n  static readonly contractName: \"TWRegistry\";\n  public readonly contractName: \"TWRegistry\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): TWRegistryInterface {\n    return new utils.Interface(_abi) as TWRegistryInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): TWRegistry {\n    return new Contract(address, _abi, signerOrProvider) as TWRegistry;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { VoteERC20, VoteERC20Interface } from \"../VoteERC20\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"proposer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"oldProposalThreshold\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newProposalThreshold\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalThresholdSet\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"oldQuorumNumerator\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newQuorumNumerator\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"QuorumNumeratorUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"VoteCast\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"oldVotingDelay\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newVotingDelay\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"VotingDelaySet\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"oldVotingPeriod\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newVotingPeriod\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"VotingPeriodSet\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BALLOT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"COUNTING_MODE\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"castVote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"castVoteBySig\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"castVoteWithReason\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractType\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"contractVersion\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getAllProposals\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"proposalId\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"proposer\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"targets\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"values\",\n            type: \"uint256[]\",\n          },\n          {\n            internalType: \"string[]\",\n            name: \"signatures\",\n            type: \"string[]\",\n          },\n          {\n            internalType: \"bytes[]\",\n            name: \"calldatas\",\n            type: \"bytes[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"description\",\n            type: \"string\",\n          },\n        ],\n        internalType: \"struct VoteERC20.Proposal[]\",\n        name: \"allProposals\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"hashProposal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_contractURI\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"_trustedForwarders\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_initialVotingDelay\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_initialVotingPeriod\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_initialProposalThreshold\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_initialVoteQuorumFraction\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"forwarder\",\n        type: \"address\",\n      },\n    ],\n    name: \"isTrustedForwarder\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155BatchReceived\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC1155Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalDeadline\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"proposalIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalSnapshot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"proposalThreshold\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"againstVotes\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"forVotes\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"abstainVotes\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposals\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"proposer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"propose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quorum\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"quorumDenominator\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"quorumNumerator\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"target\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"relay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"uri\",\n        type: \"string\",\n      },\n    ],\n    name: \"setContractURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newProposalThreshold\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setProposalThreshold\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newVotingDelay\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setVotingDelay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newVotingPeriod\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setVotingPeriod\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"state\",\n    outputs: [\n      {\n        internalType: \"enum IGovernorUpgradeable.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token\",\n    outputs: [\n      {\n        internalType: \"contract IVotesUpgradeable\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newQuorumNumerator\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"updateQuorumNumerator\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingPeriod\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b62000039620000de565b620000a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000c4576000805461ffff19166101011790555b8015620000d7576000805461ff00191690555b506200010b565b6000620000f630620000fc60201b620019e01760201c565b15905090565b6001600160a01b03163b151590565b613f59806200011b6000396000f3fe6080604052600436106102ca5760003560e01c80637d5e81e211610179578063cb2ef6f7116100d6578063ea0217cf1161008a578063f23a6e6111610064578063f23a6e6114610884578063f8ce560a146108b0578063fc0c546a146108d057600080fd5b8063ea0217cf14610824578063eb9019d414610844578063ece40cc11461086457600080fd5b8063dd4e2ba5116100bb578063dd4e2ba514610795578063deaaa7cc146107db578063e8a3d4851461080f57600080fd5b8063cb2ef6f714610740578063cceb68f51461077357600080fd5b8063b58131b01161012d578063c01f9e3711610112578063c01f9e37146106e0578063c28bc2fa14610700578063c59057e41461072057600080fd5b8063b58131b01461069f578063bc197c81146106b457600080fd5b806397c3d3341161015e57806397c3d33414610659578063a0a8e4601461066d578063a7713a701461068957600080fd5b80637d5e81e214610619578063938e3d7b1461063957600080fd5b80633e4f49e611610227578063572b6c05116101db57806370b0f660116101c057806370b0f660146105b95780637b3c71d3146105d95780637cf43f8d146105f957600080fd5b8063572b6c05146105695780635977e0f2146105a257600080fd5b8063544ffc9c1161020c578063544ffc9c146104c957806354fd4d501461051f578063567813881461054957600080fd5b80633e4f49e614610451578063438596321461047e57600080fd5b8063150b7a021161027e5780632d63f693116102635780632d63f693146103fb5780633932abb11461041b5780633bccf4fd1461043157600080fd5b8063150b7a02146103a45780632656227d146103e857600080fd5b806302a251a3116102af57806302a251a31461034257806306f3f9e61461036257806306fdde031461038257600080fd5b8063013cf08b146102d857806301ffc9a71461031257600080fd5b366102d357005b005b600080fd5b3480156102e457600080fd5b506102f86102f33660046131b4565b610909565b604051610309959493929190613229565b60405180910390f35b34801561031e57600080fd5b5061033261032d36600461325d565b6109cd565b6040519015158152602001610309565b34801561034e57600080fd5b506101c6545b604051908152602001610309565b34801561036e57600080fd5b506102d161037d3660046131b4565b610a13565b34801561038e57600080fd5b50610397610a7e565b6040516103099190613287565b3480156103b057600080fd5b506103cf6103bf36600461336d565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610309565b6103546103f6366004613546565b610b11565b34801561040757600080fd5b506103546104163660046131b4565b610c24565b34801561042757600080fd5b506101c554610354565b34801561043d57600080fd5b5061035461044c3660046135e7565b610c5e565b34801561045d57600080fd5b5061047161046c3660046131b4565b610cf2565b604051610309919061364b565b34801561048a57600080fd5b50610332610499366004613673565b60008281526101f7602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b3480156104d557600080fd5b506105046104e43660046131b4565b60009081526101f760205260409020805460018201546002909201549092565b60408051938452602084019290925290820152606001610309565b34801561052b57600080fd5b506040805180820190915260018152603160f81b6020820152610397565b34801561055557600080fd5b5061035461056436600461369f565b610e00565b34801561057557600080fd5b506103326105843660046136c2565b6001600160a01b031660009081526033602052604090205460ff1690565b3480156105ae57600080fd5b5061035461028f5481565b3480156105c557600080fd5b506102d16105d43660046131b4565b610e30565b3480156105e557600080fd5b506103546105f4366004613726565b610e93565b34801561060557600080fd5b506102d1610614366004613780565b610eec565b34801561062557600080fd5b5061035461063436600461383d565b611000565b34801561064557600080fd5b506102d16106543660046138de565b6111cd565b34801561066557600080fd5b506064610354565b34801561067957600080fd5b5060405160018152602001610309565b34801561069557600080fd5b5061025c54610354565b3480156106ab57600080fd5b50610354611239565b3480156106c057600080fd5b506103cf6106cf366004613920565b63bc197c8160e01b95945050505050565b3480156106ec57600080fd5b506103546106fb3660046131b4565b61124a565b34801561070c57600080fd5b506102d161071b3660046139ca565b61127b565b34801561072c57600080fd5b5061035461073b366004613546565b61131e565b34801561074c57600080fd5b507f566f746545524332300000000000000000000000000000000000000000000000610354565b34801561077f57600080fd5b50610788611358565b6040516103099190613ad5565b3480156107a157600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610397565b3480156107e757600080fd5b506103547f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561081b57600080fd5b50610397611783565b34801561083057600080fd5b506102d161083f3660046131b4565b611812565b34801561085057600080fd5b5061035461085f366004613be5565b611875565b34801561087057600080fd5b506102d161087f3660046131b4565b6118f3565b34801561089057600080fd5b506103cf61089f366004613c0f565b63f23a6e6160e01b95945050505050565b3480156108bc57600080fd5b506103546108cb3660046131b4565b611956565b3480156108dc57600080fd5b50610229546108f1906001600160a01b031681565b6040516001600160a01b039091168152602001610309565b610290602052600090815260409020805460018201546006830154600784015460088501805494956001600160a01b03909416949293919261094a90613c74565b80601f016020809104026020016040519081016040528092919081815260200182805461097690613c74565b80156109c35780601f10610998576101008083540402835291602001916109c3565b820191906000526020600020905b8154815290600101906020018083116109a657829003601f168201915b5050505050905085565b60006001600160e01b03198216630271189760e51b14806109fe57506001600160e01b03198216630a85bd0160e11b145b80610a0d5750610a0d826119ef565b92915050565b30610a1c611a14565b6001600160a01b031614610a725760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064015b60405180910390fd5b610a7b81611a1e565b50565b60606101938054610a8e90613c74565b80601f0160208091040260200160405190810160405280929190818152602001828054610aba90613c74565b8015610b075780601f10610adc57610100808354040283529160200191610b07565b820191906000526020600020905b815481529060010190602001808311610aea57829003601f168201915b5050505050905090565b600080610b208686868661131e565b90506000610b2d82610cf2565b90506004816007811115610b4357610b43613635565b1480610b6057506005816007811115610b5e57610b5e613635565b145b610bb65760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b6064820152608401610a69565b6000828152610194602052604090819020600201805460ff19166001179055517f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90610c059084815260200190565b60405180910390a1610c1a8288888888611ae7565b5095945050505050565b60008181526101946020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610cca90610cc29060800160405160208183030381529060405280519060200120611be6565b868686611c34565b9050610ce787828860405180602001604052806000815250611c52565b979650505050505050565b600081815261019460205260408120600281015460ff1615610d175750600792915050565b6002810154610100900460ff1615610d325750600292915050565b6000610d3d84610c24565b905080610d8c5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610a69565b438110610d9d575060009392505050565b6000610da88561124a565b9050438110610dbc57506001949350505050565b610dc585611d5e565b8015610de5575060008581526101f7602052604090208054600190910154115b15610df557506004949350505050565b506003949350505050565b600080610e0b611a14565b9050610e2884828560405180602001604052806000815250611c52565b949350505050565b30610e39611a14565b6001600160a01b031614610e8a5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b6044820152606401610a69565b610a7b81611d96565b600080610e9e611a14565b9050610ee286828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c5292505050565b9695505050505050565b600054610100900460ff16610f075760005460ff1615610f0b565b303b155b610f7d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610a69565b600054610100900460ff16158015610f9f576000805461ffff19166101011790555b610fa887611dd9565b610fb189611e43565b610fbc858585611ecc565b610fc586611f30565b610fce82611f92565b8751610fe29061028e9060208b0190612ee9565b508015610ff5576000805461ff00191690555b505050505050505050565b600061100e85858585611ff4565b905060405180610120016040528082815260200161102a611a14565b6001600160a01b03168152602001868152602001858152602001865167ffffffffffffffff81111561105e5761105e6132b6565b60405190808252806020026020018201604052801561109157816020015b606081526020019060019003908161107c5790505b5081526020018481526020016110a683610c24565b81526020016110b48361124a565b8152602090810184905261028f5460009081526102908252604090819020835181558383015160018201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055908301518051919261112292600285019290910190612f69565b506060820151805161113e916003840191602090910190612fcb565b506080820151805161115a916004840191602090910190613005565b5060a0820151805161117691600584019160209091019061305e565b5060c0820151600682015560e0820151600782015561010082015180516111a7916008840191602090910190612ee9565b50905050600161028f60008282546111bf9190613cc5565b909155509095945050505050565b306111d6611a14565b6001600160a01b0316146112275760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b6044820152606401610a69565b61123461028e83836130b7565b505050565b60006112456101c75490565b905090565b60008181526101946020908152604080832081519283019091526001015467ffffffffffffffff1690819052610c4e565b30611284611a14565b6001600160a01b0316146112d55760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b6044820152606401610a69565b6113178483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250612353915050565b5050505050565b6000848484846040516020016113379493929190613cdd565b60408051601f19818403018152919052805160209091012095945050505050565b61028f546060908067ffffffffffffffff811115611378576113786132b6565b60405190808252806020026020018201604052801561140157816020015b6113ee6040518061012001604052806000815260200160006001600160a01b03168152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001606081525090565b8152602001906001900390816113965790505b50915060005b8181101561177e57600081815261029060209081526040918290208251610120810184528154815260018201546001600160a01b0316818401526002820180548551818602810186018752818152929593949386019383018282801561149657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611478575b50505050508152602001600382018054806020026020016040519081016040528092919081815260200182805480156114ee57602002820191906000526020600020905b8154815260200190600101908083116114da575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156115c857838290600052602060002001805461153b90613c74565b80601f016020809104026020016040519081016040528092919081815260200182805461156790613c74565b80156115b45780601f10611589576101008083540402835291602001916115b4565b820191906000526020600020905b81548152906001019060200180831161159757829003601f168201915b50505050508152602001906001019061151c565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156116a157838290600052602060002001805461161490613c74565b80601f016020809104026020016040519081016040528092919081815260200182805461164090613c74565b801561168d5780601f106116625761010080835404028352916020019161168d565b820191906000526020600020905b81548152906001019060200180831161167057829003601f168201915b5050505050815260200190600101906115f5565b50505050815260200160068201548152602001600782015481526020016008820180546116cd90613c74565b80601f01602080910402602001604051908101604052809291908181526020018280546116f990613c74565b80156117465780601f1061171b57610100808354040283529160200191611746565b820191906000526020600020905b81548152906001019060200180831161172957829003601f168201915b50505050508152505083828151811061176157611761613d28565b6020908102919091010152611777600182613cc5565b9050611407565b505090565b61028e805461179190613c74565b80601f01602080910402602001604051908101604052809291908181526020018280546117bd90613c74565b801561180a5780601f106117df5761010080835404028352916020019161180a565b820191906000526020600020905b8154815290600101906020018083116117ed57829003601f168201915b505050505081565b3061181b611a14565b6001600160a01b03161461186c5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b6044820152606401610a69565b610a7b81612379565b61022954604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000921690633a46b1a890604401602060405180830381865afa1580156118c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ec9190613d3e565b9392505050565b306118fc611a14565b6001600160a01b03161461194d5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b6044820152606401610a69565b610a7b81612432565b6000606461025c5461022954604051632394e7a360e21b8152600481018690526001600160a01b0390911690638e539e8c90602401602060405180830381865afa1580156119a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119cc9190613d3e565b6119d69190613d57565b610a0d9190613d76565b6001600160a01b03163b151590565b60006001600160e01b0319821663bf26d89760e01b1480610a0d5750610a0d82612475565b60006112456124aa565b6064811115611aa15760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610a69565b61025c80549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b6000604051806060016040528060278152602001613edd60279139905060005b8551811015611bdd57600080878381518110611b2557611b25613d28565b60200260200101516001600160a01b0316878481518110611b4857611b48613d28565b6020026020010151878581518110611b6257611b62613d28565b6020026020010151604051611b779190613d98565b60006040518083038185875af1925050503d8060008114611bb4576040519150601f19603f3d011682016040523d82523d6000602084013e611bb9565b606091505b5091509150611bc98282866124d4565b50505080611bd690613db4565b9050611b07565b50505050505050565b6000610a0d611bf361250d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611c458787878761258a565b91509150610c1a81612677565b6000848152610194602052604081206001611c6c87610cf2565b6007811115611c7d57611c7d613635565b14611cd65760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610a69565b6040805160208101909152815467ffffffffffffffff1690819052600090611cff908790611875565b9050611d0d87878784612832565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda488878488604051611d4c9493929190613dcf565b60405180910390a29695505050505050565b60008181526101f76020526040812060028101546001820154611d819190613cc5565b611d8d6108cb85610c24565b11159392505050565b6101c55460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a16101c555565b600054610100900460ff16611e325760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b611e3a6129d0565b610a7b81612a2b565b600054610100900460ff16611e9c5760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b611ec381611ebe6040805180820190915260018152603160f81b602082015290565b612af0565b610a7b81612b65565b600054610100900460ff16611f255760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b611234838383612bd2565b600054610100900460ff16611f895760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b610a7b81612c46565b600054610100900460ff16611feb5760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b610a7b81612ccf565b6000611ffe611239565b61200d3361085f600143613df7565b101561208d5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f7060448201527f6f73657220766f7465732062656c6f772070726f706f73616c207468726573686064820152621bdb1960ea1b608482015260a401610a69565b60006120a2868686868051906020012061131e565b905084518651146120ff5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b6064820152608401610a69565b835186511461215a5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b6064820152608401610a69565b60008651116121ab5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610a69565b600081815261019460209081526040918290208251918201909252815467ffffffffffffffff16908190521561222d5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610a69565b600061224161223c6101c55490565b612d28565b61224a43612d28565b6122549190613e0e565b9050600061226561223c6101c65490565b61226f9083613e0e565b835467ffffffffffffffff191667ffffffffffffffff8416178455905060018301805467ffffffffffffffff191667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e0846122d5611a14565b8b8b8d5167ffffffffffffffff8111156122f1576122f16132b6565b60405190808252806020026020018201604052801561232457816020015b606081526020019060019003908161230f5790505b508c88888e60405161233e99989796959493929190613e3a565b60405180910390a15091979650505050505050565b6060610e28848484604051806060016040528060298152602001613f2460299139612dac565b600081116123ef5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f642060448201527f746f6f206c6f77000000000000000000000000000000000000000000000000006064820152608401610a69565b6101c65460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a16101c655565b6101c75460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a16101c755565b60006001600160e01b03198216630271189760e51b1480610a0d57506301ffc9a760e01b6001600160e01b0319831614610a0d565b3360009081526033602052604081205460ff16156124cf575060131936013560601c90565b503390565b606083156124e35750816118ec565b8251156124f35782518084602001fd5b8160405162461bcd60e51b8152600401610a699190613287565b60006112457f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61253d61012d5490565b61012e546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156125c1575060009050600361266e565b8460ff16601b141580156125d957508460ff16601c14155b156125ea575060009050600461266e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561263e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166126675760006001925092505061266e565b9150600090505b94509492505050565b600081600481111561268b5761268b613635565b14156126945750565b60018160048111156126a8576126a8613635565b14156126f65760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a69565b600281600481111561270a5761270a613635565b14156127585760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a69565b600381600481111561276c5761276c613635565b14156127c55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a69565b60048160048111156127d9576127d9613635565b1415610a7b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610a69565b60008481526101f7602090815260408083206001600160a01b0387168452600381019092529091205460ff16156128d15760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160448201527f64792063617374000000000000000000000000000000000000000000000000006064820152608401610a69565b6001600160a01b03841660009081526003820160205260408120805460ff1916600117905560ff168360ff16141561292257818160000160008282546129179190613cc5565b909155506113179050565b60ff83166001141561294257818160010160008282546129179190613cc5565b60ff83166002141561296257818160020160008282546129179190613cc5565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f74655479706500000000000000000000006064820152608401610a69565b600054610100900460ff16612a295760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b565b600054610100900460ff16612a845760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b60005b8151811015612aec57600160336000848481518110612aa857612aa8613d28565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580612ae481613db4565b915050612a87565b5050565b600054610100900460ff16612b495760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b81516020928301208151919092012061012d9190915561012e55565b600054610100900460ff16612bbe5760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b8051612aec90610193906020840190612ee9565b600054610100900460ff16612c2b5760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b612c3483611d96565b612c3d82612379565b61123481612432565b600054610100900460ff16612c9f5760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b610229805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600054610100900460ff16610a725760405162461bcd60e51b815260206004820152602b6024820152600080516020613f0483398151915260448201526a6e697469616c697a696e6760a81b6064820152608401610a69565b600067ffffffffffffffff821115612da85760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f34206269747300000000000000000000000000000000000000000000000000006064820152608401610a69565b5090565b606082471015612e245760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610a69565b6001600160a01b0385163b612e7b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a69565b600080866001600160a01b03168587604051612e979190613d98565b60006040518083038185875af1925050503d8060008114612ed4576040519150601f19603f3d011682016040523d82523d6000602084013e612ed9565b606091505b5091509150610ce78282866124d4565b828054612ef590613c74565b90600052602060002090601f016020900481019282612f175760008555612f5d565b82601f10612f3057805160ff1916838001178555612f5d565b82800160010185558215612f5d579182015b82811115612f5d578251825591602001919060010190612f42565b50612da892915061312b565b828054828255906000526020600020908101928215612f5d579160200282015b82811115612f5d578251825473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178255602090920191600190910190612f89565b828054828255906000526020600020908101928215612f5d5791602002820182811115612f5d578251825591602001919060010190612f42565b828054828255906000526020600020908101928215613052579160200282015b828111156130525782518051613042918491602090910190612ee9565b5091602001919060010190613025565b50612da8929150613140565b8280548282559060005260206000209081019282156130ab579160200282015b828111156130ab578251805161309b918491602090910190612ee9565b509160200191906001019061307e565b50612da892915061315d565b8280546130c390613c74565b90600052602060002090601f0160209004810192826130e55760008555612f5d565b82601f106130fe5782800160ff19823516178555612f5d565b82800160010185558215612f5d579182015b82811115612f5d578235825591602001919060010190613110565b5b80821115612da8576000815560010161312c565b80821115612da8576000613154828261317a565b50600101613140565b80821115612da8576000613171828261317a565b5060010161315d565b50805461318690613c74565b6000825580601f10613196575050565b601f016020900490600052602060002090810190610a7b919061312b565b6000602082840312156131c657600080fd5b5035919050565b60005b838110156131e85781810151838201526020016131d0565b838111156131f7576000848401525b50505050565b600081518084526132158160208601602086016131cd565b601f01601f19169290920160200192915050565b8581526001600160a01b038516602082015283604082015282606082015260a060808201526000610ce760a08301846131fd565b60006020828403121561326f57600080fd5b81356001600160e01b0319811681146118ec57600080fd5b6020815260006118ec60208301846131fd565b80356001600160a01b03811681146132b157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156132f5576132f56132b6565b604052919050565b600082601f83011261330e57600080fd5b813567ffffffffffffffff811115613328576133286132b6565b61333b601f8201601f19166020016132cc565b81815284602083860101111561335057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561338357600080fd5b61338c8561329a565b935061339a6020860161329a565b925060408501359150606085013567ffffffffffffffff8111156133bd57600080fd5b6133c9878288016132fd565b91505092959194509250565b600067ffffffffffffffff8211156133ef576133ef6132b6565b5060051b60200190565b600082601f83011261340a57600080fd5b8135602061341f61341a836133d5565b6132cc565b82815260059290921b8401810191818101908684111561343e57600080fd5b8286015b84811015613460576134538161329a565b8352918301918301613442565b509695505050505050565b600082601f83011261347c57600080fd5b8135602061348c61341a836133d5565b82815260059290921b840181019181810190868411156134ab57600080fd5b8286015b8481101561346057803583529183019183016134af565b600082601f8301126134d757600080fd5b813560206134e761341a836133d5565b82815260059290921b8401810191818101908684111561350657600080fd5b8286015b8481101561346057803567ffffffffffffffff81111561352a5760008081fd5b6135388986838b01016132fd565b84525091830191830161350a565b6000806000806080858703121561355c57600080fd5b843567ffffffffffffffff8082111561357457600080fd5b613580888389016133f9565b9550602087013591508082111561359657600080fd5b6135a28883890161346b565b945060408701359150808211156135b857600080fd5b506135c5878288016134c6565b949793965093946060013593505050565b803560ff811681146132b157600080fd5b600080600080600060a086880312156135ff57600080fd5b8535945061360f602087016135d6565b935061361d604087016135d6565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061366d57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561368657600080fd5b823591506136966020840161329a565b90509250929050565b600080604083850312156136b257600080fd5b82359150613696602084016135d6565b6000602082840312156136d457600080fd5b6118ec8261329a565b60008083601f8401126136ef57600080fd5b50813567ffffffffffffffff81111561370757600080fd5b60208301915083602082850101111561371f57600080fd5b9250929050565b6000806000806060858703121561373c57600080fd5b8435935061374c602086016135d6565b9250604085013567ffffffffffffffff81111561376857600080fd5b613774878288016136dd565b95989497509550505050565b600080600080600080600080610100898b03121561379d57600080fd5b883567ffffffffffffffff808211156137b557600080fd5b6137c18c838d016132fd565b995060208b01359150808211156137d757600080fd5b6137e38c838d016132fd565b985060408b01359150808211156137f957600080fd5b506138068b828c016133f9565b96505061381560608a0161329a565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b6000806000806080858703121561385357600080fd5b843567ffffffffffffffff8082111561386b57600080fd5b613877888389016133f9565b9550602087013591508082111561388d57600080fd5b6138998883890161346b565b945060408701359150808211156138af57600080fd5b6138bb888389016134c6565b935060608701359150808211156138d157600080fd5b506133c9878288016132fd565b600080602083850312156138f157600080fd5b823567ffffffffffffffff81111561390857600080fd5b613914858286016136dd565b90969095509350505050565b600080600080600060a0868803121561393857600080fd5b6139418661329a565b945061394f6020870161329a565b9350604086013567ffffffffffffffff8082111561396c57600080fd5b61397889838a0161346b565b9450606088013591508082111561398e57600080fd5b61399a89838a0161346b565b935060808801359150808211156139b057600080fd5b506139bd888289016132fd565b9150509295509295909350565b600080600080606085870312156139e057600080fd5b6139e98561329a565b935060208501359250604085013567ffffffffffffffff81111561376857600080fd5b600081518084526020808501945080840160005b83811015613a455781516001600160a01b031687529582019590820190600101613a20565b509495945050505050565b600081518084526020808501945080840160005b83811015613a4557815187529582019590820190600101613a64565b600081518084526020808501808196508360051b8101915082860160005b85811015613ac8578284038952613ab68483516131fd565b98850198935090840190600101613a9e565b5091979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613bd757603f19898403018552815180518452878101516001600160a01b0316888501528681015161012088860181905290613b3e82870182613a0c565b91505060608083015186830382880152613b588382613a50565b9250505060808083015186830382880152613b738382613a80565b9250505060a08083015186830382880152613b8e8382613a80565b9250505060c080830151818701525060e08083015181870152506101008083015192508582038187015250613bc381836131fd565b968901969450505090860190600101613afc565b509098975050505050505050565b60008060408385031215613bf857600080fd5b613c018361329a565b946020939093013593505050565b600080600080600060a08688031215613c2757600080fd5b613c308661329a565b9450613c3e6020870161329a565b93506040860135925060608601359150608086013567ffffffffffffffff811115613c6857600080fd5b6139bd888289016132fd565b600181811c90821680613c8857607f821691505b60208210811415613ca957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115613cd857613cd8613caf565b500190565b608081526000613cf06080830187613a0c565b8281036020840152613d028187613a50565b90508281036040840152613d168186613a80565b91505082606083015295945050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215613d5057600080fd5b5051919050565b6000816000190483118215151615613d7157613d71613caf565b500290565b600082613d9357634e487b7160e01b600052601260045260246000fd5b500490565b60008251613daa8184602087016131cd565b9190910192915050565b6000600019821415613dc857613dc8613caf565b5060010190565b84815260ff84166020820152826040820152608060608201526000610ee260808301846131fd565b600082821015613e0957613e09613caf565b500390565b600067ffffffffffffffff808316818516808303821115613e3157613e31613caf565b01949350505050565b60006101208b83526001600160a01b038b166020840152806040840152613e638184018b613a0c565b90508281036060840152613e77818a613a50565b90508281036080840152613e8b8189613a80565b905082810360a0840152613e9f8188613a80565b67ffffffffffffffff87811660c0860152861660e08501528381036101008501529050613ecc81856131fd565b9c9b50505050505050505050505056fe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a164736f6c634300080c000a\";\n\ntype VoteERC20ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: VoteERC20ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class VoteERC20__factory extends ContractFactory {\n  constructor(...args: VoteERC20ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"VoteERC20\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<VoteERC20> {\n    return super.deploy(overrides || {}) as Promise<VoteERC20>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): VoteERC20 {\n    return super.attach(address) as VoteERC20;\n  }\n  connect(signer: Signer): VoteERC20__factory {\n    return super.connect(signer) as VoteERC20__factory;\n  }\n  static readonly contractName: \"VoteERC20\";\n  public readonly contractName: \"VoteERC20\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): VoteERC20Interface {\n    return new utils.Interface(_abi) as VoteERC20Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): VoteERC20 {\n    return new Contract(address, _abi, signerOrProvider) as VoteERC20;\n  }\n}\n","import { IStorage } from \"../interfaces/IStorage\";\nimport { DropErc721ContractSchema } from \"../../schema/contracts/drop-erc721\";\nimport { ContractMetadata } from \"./contract-metadata\";\nimport {\n  DropERC721,\n  IERC20,\n  IERC20__factory,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { BigNumber, BigNumberish, ethers } from \"ethers\";\nimport { isNativeToken } from \"../../common/currency\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { ClaimCondition, ClaimConditionInput } from \"../../types\";\nimport deepEqual from \"deep-equal\";\nimport { ClaimEligibility } from \"../../enums\";\nimport { TransactionResult } from \"../types\";\nimport {\n  getClaimerProofs,\n  processClaimConditionInputs,\n  transformResultToClaimCondition,\n  updateExsitingClaimConditions,\n} from \"../../common/claim-conditions\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport { isBrowser } from \"../../common/utils\";\n\n/**\n * Manages claim conditions for NFT Drop contracts\n * @public\n */\nexport class DropErc721ClaimConditions {\n  private contractWrapper;\n  private metadata;\n  private storage: IStorage;\n\n  constructor(\n    contractWrapper: ContractWrapper<DropERC721>,\n    metadata: ContractMetadata<DropERC721, typeof DropErc721ContractSchema>,\n    storage: IStorage,\n  ) {\n    this.storage = storage;\n    this.contractWrapper = contractWrapper;\n    this.metadata = metadata;\n  }\n\n  /** ***************************************\n   * READ FUNCTIONS\n   *****************************************/\n\n  /**\n   * Get the currently active claim condition\n   *\n   * @returns the claim condition metadata\n   */\n  public async getActive(): Promise<ClaimCondition> {\n    const id =\n      await this.contractWrapper.readContract.getActiveClaimConditionId();\n    const mc = await this.contractWrapper.readContract.getClaimConditionById(\n      id,\n    );\n    const metadata = await this.metadata.get();\n    return await transformResultToClaimCondition(\n      mc,\n      this.contractWrapper.getProvider(),\n      metadata.merkle,\n      this.storage,\n    );\n  }\n\n  /**\n   * Get all the claim conditions\n   *\n   * @returns the claim conditions metadata\n   */\n  public async getAll(): Promise<ClaimCondition[]> {\n    const claimCondition =\n      await this.contractWrapper.readContract.claimCondition();\n    const startId = claimCondition.currentStartId.toNumber();\n    const count = claimCondition.count.toNumber();\n    const conditions = [];\n    for (let i = startId; i < startId + count; i++) {\n      conditions.push(\n        await this.contractWrapper.readContract.getClaimConditionById(i),\n      );\n    }\n    const metadata = await this.metadata.get();\n    return Promise.all(\n      conditions.map((c) =>\n        transformResultToClaimCondition(\n          c,\n          this.contractWrapper.getProvider(),\n          metadata.merkle,\n          this.storage,\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Can Claim\n   *\n   * @remarks Check if the drop can currently be claimed.\n   *\n   * @example\n   * ```javascript\n   * // Quantity of tokens to check claimability of\n   * const quantity = 1;\n   * const canClaim = await contract.canClaim(quantity);\n   * ```\n   */\n  public async canClaim(\n    quantity: BigNumberish,\n    addressToCheck?: string,\n  ): Promise<boolean> {\n    if (addressToCheck === undefined) {\n      addressToCheck = await this.contractWrapper.getSignerAddress();\n    }\n    // TODO switch to use verifyClaim\n    return (\n      (await this.getClaimIneligibilityReasons(quantity, addressToCheck))\n        .length === 0\n    );\n  }\n\n  /**\n   * For any claim conditions that a particular wallet is violating,\n   * this function returns human readable information about the\n   * breaks in the condition that can be used to inform the user.\n   *\n   * @param quantity - The desired quantity that would be claimed.\n   * @param addressToCheck - The wallet address, defaults to the connected wallet.\n   *\n   */\n  public async getClaimIneligibilityReasons(\n    quantity: BigNumberish,\n    addressToCheck?: string,\n  ): Promise<ClaimEligibility[]> {\n    const reasons: ClaimEligibility[] = [];\n    let activeConditionIndex: BigNumber;\n    let claimCondition: ClaimCondition;\n\n    if (addressToCheck === undefined) {\n      throw new Error(\"addressToCheck is required\");\n    }\n\n    try {\n      [activeConditionIndex, claimCondition] = await Promise.all([\n        this.contractWrapper.readContract.getActiveClaimConditionId(),\n        this.getActive(),\n      ]);\n    } catch (err: any) {\n      if ((err.message as string).includes(\"no public mint condition.\")) {\n        reasons.push(ClaimEligibility.NoClaimConditionSet);\n        return reasons;\n      }\n      if ((err.message as string).includes(\"no active mint condition.\")) {\n        reasons.push(ClaimEligibility.NoActiveClaimPhase);\n        return reasons;\n      }\n      reasons.push(ClaimEligibility.Unknown);\n      return reasons;\n    }\n\n    if (BigNumber.from(claimCondition.availableSupply).lt(quantity)) {\n      reasons.push(ClaimEligibility.NotEnoughSupply);\n    }\n\n    // check for merkle root inclusion\n    const merkleRootArray = ethers.utils.stripZeros(\n      claimCondition.merkleRootHash,\n    );\n    if (merkleRootArray.length > 0) {\n      const merkleLower = claimCondition.merkleRootHash.toString();\n      const metadata = await this.metadata.get();\n      const proofs = await getClaimerProofs(\n        addressToCheck,\n        merkleLower,\n        metadata.merkle,\n        this.storage,\n      );\n      try {\n        const [validMerkleProof] =\n          await this.contractWrapper.readContract.verifyClaimMerkleProof(\n            activeConditionIndex,\n            addressToCheck,\n            quantity,\n            proofs.proof,\n            proofs.maxClaimable,\n          );\n        if (!validMerkleProof) {\n          reasons.push(ClaimEligibility.AddressNotAllowed);\n          return reasons;\n        }\n      } catch (e) {\n        reasons.push(ClaimEligibility.AddressNotAllowed);\n        return reasons;\n      }\n    }\n\n    // check for claim timestamp between claims\n    const [lastClaimedTimestamp, timestampForNextClaim] =\n      await this.contractWrapper.readContract.getClaimTimestamp(\n        activeConditionIndex,\n        addressToCheck,\n      );\n\n    const now = BigNumber.from(Date.now()).div(1000);\n\n    if (lastClaimedTimestamp.gt(0) && now.lt(timestampForNextClaim)) {\n      // contract will return MaxUint256 if user has already claimed and cannot claim again\n      if (timestampForNextClaim.eq(MaxUint256)) {\n        reasons.push(ClaimEligibility.AlreadyClaimed);\n      } else {\n        reasons.push(ClaimEligibility.WaitBeforeNextClaimTransaction);\n      }\n    }\n\n    // if not within a browser conetext, check for wallet balance.\n    // In browser context, let the wallet do that job\n    if (claimCondition.price.gt(0) && !isBrowser()) {\n      const totalPrice = claimCondition.price.mul(quantity);\n      const provider = this.contractWrapper.getProvider();\n      if (isNativeToken(claimCondition.currencyAddress)) {\n        const balance = await provider.getBalance(addressToCheck);\n        if (balance.lt(totalPrice)) {\n          reasons.push(ClaimEligibility.NotEnoughTokens);\n        }\n      } else {\n        const erc20 = new ContractWrapper<IERC20>(\n          provider,\n          claimCondition.currencyAddress,\n          IERC20__factory.abi,\n          {},\n        );\n        const balance = await erc20.readContract.balanceOf(addressToCheck);\n        if (balance.lt(totalPrice)) {\n          reasons.push(ClaimEligibility.NotEnoughTokens);\n        }\n      }\n    }\n\n    return reasons;\n  }\n\n  /** ***************************************\n   * WRITE FUNCTIONS\n   *****************************************/\n\n  /**\n   * Set public mint conditions\n   *\n   * @remarks Sets the public mint conditions that need to be fullfiled by users to claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   *\n   * await dropContract.claimConditions.set(claimConditions);\n   * ```\n   *\n   * @param claimConditionInputs - The claim conditions\n   * @param resetClaimEligibilityForAll - Whether to reset the state of who already claimed NFTs previously\n   */\n  public async set(\n    claimConditionInputs: ClaimConditionInput[],\n    resetClaimEligibilityForAll = false,\n  ): Promise<TransactionResult> {\n    // process inputs\n    const { snapshotInfos, sortedConditions } =\n      await processClaimConditionInputs(\n        claimConditionInputs,\n        this.contractWrapper.getProvider(),\n        this.storage,\n      );\n\n    const merkleInfo: { [key: string]: string } = {};\n    snapshotInfos.forEach((s) => {\n      merkleInfo[s.merkleRoot] = s.snapshotUri;\n    });\n    const metadata = await this.metadata.get();\n    const encoded = [];\n\n    // upload new merkle roots to snapshot URIs if updated\n    if (!deepEqual(metadata.merkle, merkleInfo)) {\n      const mergedMetadata = this.metadata.parseInputMetadata({\n        ...metadata,\n        merkle: merkleInfo,\n      });\n      // using internal method to just upload, avoids one contract call\n      const contractURI = await this.metadata._parseAndUploadMetadata(\n        mergedMetadata,\n      );\n      encoded.push(\n        this.contractWrapper.readContract.interface.encodeFunctionData(\n          \"setContractURI\",\n          [contractURI],\n        ),\n      );\n    }\n\n    encoded.push(\n      this.contractWrapper.readContract.interface.encodeFunctionData(\n        \"setClaimConditions\",\n        [sortedConditions, resetClaimEligibilityForAll],\n      ),\n    );\n\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded),\n    };\n  }\n\n  /**\n   * Update a single claim condition with new data.\n   *\n   * @param index - the index of the claim condition to update, as given by the index from the result of `getAll()`\n   * @param claimConditionInput - the new data to update, previous data will be retained\n   */\n  public async update(\n    index: number,\n    claimConditionInput: ClaimConditionInput,\n  ): Promise<TransactionResult> {\n    const existingConditions = await this.getAll();\n    const newConditionInputs = updateExsitingClaimConditions(\n      index,\n      claimConditionInput,\n      existingConditions,\n    );\n    return await this.set(newConditionInputs);\n  }\n}\n","import { AddressZero } from \"@ethersproject/constants\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport { BigNumber, BigNumberish, ethers } from \"ethers\";\nimport {\n  IERC20,\n  IERC20__factory,\n  TokenERC20__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport {\n  getNativeTokenByChainId,\n  NATIVE_TOKEN_ADDRESS,\n} from \"../constants/currency\";\nimport { Provider } from \"@ethersproject/providers\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport { Currency, CurrencyValue, Price } from \"../types/currency\";\nimport { PriceSchema } from \"../schema/shared\";\n\nexport function isNativeToken(tokenAddress: string): boolean {\n  return (\n    tokenAddress.toLowerCase() === NATIVE_TOKEN_ADDRESS ||\n    tokenAddress.toLowerCase() === AddressZero\n  );\n}\n\nexport async function normalizePriceValue(\n  provider: Provider,\n  inputPrice: Price,\n  currencyAddress: string,\n) {\n  const metadata = await fetchCurrencyMetadata(provider, currencyAddress);\n  return ethers.utils.parseUnits(\n    PriceSchema.parse(inputPrice),\n    metadata.decimals,\n  );\n}\n\nexport async function fetchCurrencyMetadata(\n  provider: Provider,\n  asset: string,\n): Promise<Currency> {\n  if (isNativeToken(asset)) {\n    const network = await provider.getNetwork();\n    const nativeToken = getNativeTokenByChainId(network.chainId);\n    return {\n      name: nativeToken.name,\n      symbol: nativeToken.symbol,\n      decimals: nativeToken.decimals,\n    };\n  } else {\n    const erc20 = TokenERC20__factory.connect(asset, provider);\n    const [name, symbol, decimals] = await Promise.all([\n      erc20.name(),\n      erc20.symbol(),\n      erc20.decimals(),\n    ]);\n    return {\n      name,\n      symbol,\n      decimals,\n    };\n  }\n}\n\nexport async function fetchCurrencyValue(\n  providerOrSigner: Provider,\n  asset: string,\n  price: BigNumberish,\n): Promise<CurrencyValue> {\n  const metadata = await fetchCurrencyMetadata(providerOrSigner, asset);\n  return {\n    ...metadata,\n    value: BigNumber.from(price),\n    displayValue: formatUnits(price, metadata.decimals),\n  };\n}\n\nexport async function setErc20Allowance(\n  contractToApprove: ContractWrapper<any>,\n  value: BigNumber,\n  currencyAddress: string,\n  overrides: any,\n): Promise<any> {\n  if (isNativeToken(currencyAddress)) {\n    overrides[\"value\"] = value;\n  } else {\n    const signer = contractToApprove.getSigner();\n    const provider = contractToApprove.getProvider();\n    const erc20 = new ContractWrapper<IERC20>(\n      signer || provider,\n      currencyAddress,\n      IERC20__factory.abi,\n      {},\n    );\n\n    const owner = await contractToApprove.getSignerAddress();\n    const spender = contractToApprove.readContract.address;\n    const allowance = await erc20.readContract.allowance(owner, spender);\n    if (allowance.lt(value)) {\n      // approve overrides the previous allowance, set it to the minimum required for this tx\n      await erc20.sendTransaction(\"approve\", [spender, value]);\n    }\n    return overrides;\n  }\n}\n\nexport async function approveErc20Allowance(\n  contractToApprove: ContractWrapper<any>,\n  currencyAddress: string,\n  price: BigNumber,\n  quantity: BigNumberish,\n) {\n  const signer = contractToApprove.getSigner();\n  const provider = contractToApprove.getProvider();\n  const erc20 = new ContractWrapper<IERC20>(\n    signer || provider,\n    currencyAddress,\n    IERC20__factory.abi,\n    {},\n  );\n  const owner = await contractToApprove.getSignerAddress();\n  const spender = contractToApprove.readContract.address;\n  const allowance = await erc20.readContract.allowance(owner, spender);\n  const totalPrice = BigNumber.from(price).mul(BigNumber.from(quantity));\n  if (allowance.lt(totalPrice)) {\n    await erc20.sendTransaction(\"approve\", [\n      spender,\n      allowance.add(totalPrice),\n    ]);\n  }\n}\n","import {\n  BaseContract,\n  BigNumber,\n  BytesLike,\n  CallOverrides,\n  Contract,\n  ContractInterface,\n  ContractTransaction,\n  ethers,\n} from \"ethers\";\nimport { RPCConnectionHandler } from \"./rpc-connection-handler\";\nimport { SDKOptions } from \"../../schema/sdk-options\";\nimport {\n  ForwardRequestMessage,\n  GaslessTransaction,\n  NetworkOrSignerOrProvider,\n  PermitRequestMessage,\n} from \"../types\";\nimport { EventType } from \"../../constants/events\";\nimport { Log, TransactionReceipt } from \"@ethersproject/providers\";\nimport invariant from \"tiny-invariant\";\nimport {\n  BiconomyForwarderAbi,\n  ForwardRequest,\n  getAndIncrementNonce,\n} from \"../../common/forwarder\";\nimport { Forwarder__factory } from \"../../@custom-thirdweb-dev/contracts\";\nimport { getContractAddressByChainId } from \"../../constants/addresses\";\nimport { signEIP2612Permit } from \"../../common/permit\";\nimport { signTypedDataInternal } from \"../../common/sign\";\nimport { getPolygonGasPriorityFee } from \"../../common/gas-price\";\nimport { ChainId } from \"../../constants\";\nimport { convertToTWError } from \"../../common\";\nimport { isBrowser } from \"../../common/utils\";\n\n/**\n * @internal\n */\nexport class ContractWrapper<\n  TContract extends BaseContract,\n> extends RPCConnectionHandler {\n  private customOverrides: () => CallOverrides = () => ({});\n  private writeContract;\n  public readContract;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    contractAddress: string,\n    contractAbi: ContractInterface,\n    options: SDKOptions,\n  ) {\n    super(network, options);\n    // set up the contract\n    this.writeContract = new Contract(\n      contractAddress,\n      contractAbi,\n      this.getSignerOrProvider(),\n    ) as TContract;\n    // setup the read only contract\n    this.readContract = this.writeContract.connect(\n      this.getProvider(),\n    ) as TContract;\n  }\n\n  public override updateSignerOrProvider(\n    network: NetworkOrSignerOrProvider,\n  ): void {\n    // update the underlying base class\n    super.updateSignerOrProvider(network);\n    // re-connect the contract with the new signer / provider\n    this.writeContract = this.writeContract.connect(\n      this.getSignerOrProvider(),\n    ) as TContract;\n    // setup the read only contract\n    this.readContract = this.writeContract.connect(\n      this.getProvider(),\n    ) as TContract;\n  }\n\n  /**\n   * @internal\n   */\n  public async getChainID(): Promise<number> {\n    const provider = this.getProvider();\n    const { chainId } = await provider.getNetwork();\n    return chainId;\n  }\n  /**\n   * @internal\n   */\n  public async getSignerAddress(): Promise<string> {\n    const signer = this.getSigner();\n    if (!signer) {\n      throw new Error(\n        \"This action requires a connected wallet to sign the transaction. Please pass a valid signer to the SDK.\",\n      );\n    }\n    return await signer.getAddress();\n  }\n\n  /**\n   * @internal\n   */\n  public callStatic() {\n    return this.writeContract.callStatic;\n  }\n\n  /**\n   * @internal\n   */\n  public async getCallOverrides(): Promise<CallOverrides> {\n    if (isBrowser()) {\n      // When running in the browser, let the wallet suggest gas estimates\n      // this means that the gas speed preferences set in the SDK options are ignored in a browser context\n      // but it also allows users to select their own gas speed prefs per tx from their wallet directly\n      return {};\n    }\n    const feeData = await this.getProvider().getFeeData();\n    const supports1559 = feeData.maxFeePerGas && feeData.maxPriorityFeePerGas;\n    if (supports1559) {\n      const chainId = await this.getChainID();\n      const block = await this.getProvider().getBlock(\"latest\");\n      const baseBlockFee =\n        block && block.baseFeePerGas\n          ? block.baseFeePerGas\n          : ethers.utils.parseUnits(\"1\", \"gwei\");\n      let defaultPriorityFee: BigNumber;\n      if (chainId === ChainId.Mumbai || chainId === ChainId.Polygon) {\n        // for polygon, get fee data from gas station\n        defaultPriorityFee = await getPolygonGasPriorityFee(chainId);\n      } else {\n        // otherwise get it from ethers\n        defaultPriorityFee = BigNumber.from(feeData.maxPriorityFeePerGas);\n      }\n      // then add additional fee based on user preferences\n      const maxPriorityFeePerGas =\n        this.getPreferredPriorityFee(defaultPriorityFee);\n      // See: https://eips.ethereum.org/EIPS/eip-1559 for formula\n      const baseMaxFeePerGas = baseBlockFee.mul(2);\n      const maxFeePerGas = baseMaxFeePerGas.add(maxPriorityFeePerGas);\n      return {\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n      };\n    } else {\n      return {\n        gasPrice: await this.getPreferredGasPrice(),\n      };\n    }\n  }\n\n  /**\n   * Calculates the priority fee per gas according to user preferences\n   * @param defaultPriorityFeePerGas - the base priority fee\n   */\n  private getPreferredPriorityFee(\n    defaultPriorityFeePerGas: BigNumber,\n  ): BigNumber {\n    const speed = this.options.gasSettings.speed;\n    const maxGasPrice = this.options.gasSettings.maxPriceInGwei;\n    let extraTip;\n    switch (speed) {\n      case \"standard\":\n        extraTip = BigNumber.from(0); // default is 2.5 gwei for ETH, 31 gwei for polygon\n        break;\n      case \"fast\":\n        extraTip = defaultPriorityFeePerGas.div(100).mul(5); // + 5% - 2.625 gwei / 32.5 gwei\n        break;\n      case \"fastest\":\n        extraTip = defaultPriorityFeePerGas.div(100).mul(10); // + 10% - 2.75 gwei / 34.1 gwei\n        break;\n    }\n    let txGasPrice = defaultPriorityFeePerGas.add(extraTip);\n    const max = ethers.utils.parseUnits(maxGasPrice.toString(), \"gwei\"); // no more than max gas setting\n    const min = ethers.utils.parseUnits(\"2.5\", \"gwei\"); // no less than 2.5 gwei\n    if (txGasPrice.gt(max)) {\n      txGasPrice = max;\n    }\n    if (txGasPrice.lt(min)) {\n      txGasPrice = min;\n    }\n    return txGasPrice;\n  }\n\n  /**\n   * Calculates the gas price for transactions according to user preferences\n   */\n  public async getPreferredGasPrice(): Promise<BigNumber> {\n    const gasPrice = await this.getProvider().getGasPrice();\n    const speed = this.options.gasSettings.speed;\n    const maxGasPrice = this.options.gasSettings.maxPriceInGwei;\n    let txGasPrice = gasPrice;\n    let extraTip;\n    switch (speed) {\n      case \"standard\":\n        extraTip = BigNumber.from(1); // min 1 wei\n        break;\n      case \"fast\":\n        extraTip = gasPrice.div(100).mul(5); // + 5%\n        break;\n      case \"fastest\":\n        extraTip = gasPrice.div(100).mul(10); // + 10%\n        break;\n    }\n    txGasPrice = txGasPrice.add(extraTip);\n    const max = ethers.utils.parseUnits(maxGasPrice.toString(), \"gwei\");\n    if (txGasPrice.gt(max)) {\n      txGasPrice = max;\n    }\n    return txGasPrice;\n  }\n\n  /**\n   * @internal\n   */\n  private emitTransactionEvent(\n    status: \"submitted\" | \"completed\",\n    transactionHash: string,\n  ) {\n    this.emit(EventType.Transaction, {\n      status,\n      transactionHash,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  public async multiCall(encoded: string[]): Promise<TransactionReceipt> {\n    return this.sendTransaction(\"multicall\", [encoded]);\n  }\n\n  /**\n   * @internal\n   */\n  public async estimateGas(\n    fn: keyof TContract[\"functions\"],\n    args: any[],\n  ): Promise<BigNumber> {\n    return this.writeContract.estimateGas[fn as string](...args);\n  }\n\n  /**\n   * @internal\n   */\n  public withTransactionOverride(hook: () => CallOverrides) {\n    this.customOverrides = hook;\n  }\n\n  /**\n   * @internal\n   */\n  public async sendTransaction(\n    fn: keyof TContract[\"functions\"],\n    args: any[],\n    callOverrides?: CallOverrides,\n  ): Promise<TransactionReceipt> {\n    if (!callOverrides) {\n      callOverrides = await this.getCallOverrides();\n    }\n    console.log(\"Before setting callOverrides\");\n    // if a custom override is set, merge our override with the custom one\n    callOverrides = {\n      ...callOverrides,\n      ...this.customOverrides(),\n    };\n    // clear up the override (single use)\n    this.customOverrides = () => ({});\n    console.log(\"After setting callOverrides\");\n    if (\n      this.options?.gasless &&\n      (\"openzeppelin\" in this.options.gasless ||\n        \"biconomy\" in this.options.gasless)\n    ) {\n      console.log(\"Before getting provider\");\n      const provider = this.getProvider();\n      console.log(\"After getting provider\");\n      const txHash = await this.sendGaslessTransaction(fn, args, callOverrides);\n      console.log(\"After sending gasless transaction\");\n      this.emitTransactionEvent(\"submitted\", txHash);\n      console.log(\"After emitting transaction event\");\n      const receipt = await provider.waitForTransaction(txHash);\n      console.log(\"After waiting for transaction receipt\");\n      this.emitTransactionEvent(\"completed\", txHash);\n      console.log(\"After emitting transaction event\");\n      return receipt;\n    } else {\n      console.log(\"Before calling sendTransactionByFunction\");\n      console.log(\"args: \", ...args);\n\n      const tx = await this.sendTransactionByFunction(\n        fn as keyof TContract[\"functions\"],\n        args,\n        callOverrides,\n      );\n      console.log(\"After calling sendTransactionByFunction -2\");\n      this.emitTransactionEvent(\"submitted\", tx.hash);\n      console.log(\"After emitting transaction event -2\");\n      const receipt = tx.wait();\n      console.log(\"After waiting for transaction receipt - 2\");\n      this.emitTransactionEvent(\"completed\", tx.hash);\n      return receipt;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private async sendTransactionByFunction(\n    fn: keyof TContract[\"functions\"],\n    args: any[],\n    callOverrides: CallOverrides,\n  ): Promise<ContractTransaction> {\n    const func: ethers.ContractFunction = (this.writeContract.functions as any)[\n      fn\n    ];\n    if (!func) {\n      throw new Error(\"invalid function\");\n    }\n    try {\n      console.log(\"Before calling await\");\n      console.log(\n        \"Args: \",\n        args.map((arg) => {\n          console.log(\"Arg: \", arg);\n        }),\n      );\n      console.log(\"Call overrides: \", callOverrides);\n      return await func(...args, callOverrides);\n    } catch (e) {\n      console.log(\"Error in sendTransactionByFunction: \", e);\n      const network = await this.getProvider().getNetwork();\n      console.log(\"Network: \", network);\n      const signerAddress = await this.getSignerAddress();\n      console.log(\"signerAddress: \", signerAddress);\n      const contractAddress = await this.readContract.address;\n      console.log(\"contractAddress: \", contractAddress);\n      throw await convertToTWError(e, network, signerAddress, contractAddress);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private async sendGaslessTransaction(\n    fn: keyof TContract[\"functions\"],\n    args: any[] = [],\n    callOverrides: CallOverrides,\n  ): Promise<string> {\n    const signer = this.getSigner();\n    invariant(\n      signer,\n      \"Cannot execute gasless transaction without valid signer\",\n    );\n\n    const chainId = await this.getChainID();\n    const from = await this.getSignerAddress();\n    const to = this.writeContract.address;\n    const value = callOverrides?.value || 0;\n\n    if (BigNumber.from(value).gt(0)) {\n      throw new Error(\n        \"Cannot send native token value with gasless transaction\",\n      );\n    }\n\n    const data = this.writeContract.interface.encodeFunctionData(\n      fn as any,\n      args as any,\n    );\n\n    const gasEstimate = await (this.writeContract.estimateGas as any)[fn](\n      ...args,\n    );\n    let gas = gasEstimate.mul(2);\n\n    // in some cases WalletConnect doesn't properly gives an estimate for how much gas it would actually use.\n    // it'd estimate ~21740 on polygon.\n    // as a fix, we're setting it to a high arbitrary number (500k) as the gas limit that should cover for most function calls.\n    if (gasEstimate.lt(25000)) {\n      gas = BigNumber.from(500000);\n    }\n\n    const tx: GaslessTransaction = {\n      from,\n      to,\n      data,\n      chainId,\n      gasLimit: gas,\n      functionName: fn.toString(),\n      functionArgs: args,\n      callOverrides,\n    };\n\n    return await this.defaultGaslessSendFunction(tx);\n  }\n\n  public async signTypedData(\n    signer: ethers.Signer,\n    domain: {\n      name: string;\n      version: string;\n      chainId: number;\n      verifyingContract: string;\n    },\n    types: any,\n    message: any,\n  ): Promise<BytesLike> {\n    this.emit(EventType.Signature, {\n      status: \"submitted\",\n      message,\n      signature: \"\",\n    });\n    const { signature: sig } = await signTypedDataInternal(\n      signer,\n      domain,\n      types,\n      message,\n    );\n    this.emit(EventType.Signature, {\n      status: \"completed\",\n      message,\n      signature: sig,\n    });\n    return sig;\n  }\n\n  public parseLogs<T = any>(eventName: string, logs?: Log[]): T[] {\n    if (!logs || logs.length === 0) {\n      return [];\n    }\n    const topic = this.writeContract.interface.getEventTopic(eventName);\n    const parsedLogs = logs.filter((x) => x.topics.indexOf(topic) >= 0);\n    return parsedLogs.map(\n      (l) => this.writeContract.interface.parseLog(l) as unknown as T,\n    );\n  }\n\n  private async defaultGaslessSendFunction(\n    transaction: GaslessTransaction,\n  ): Promise<string> {\n    if (this.options.gasless && \"biconomy\" in this.options.gasless) {\n      return this.biconomySendFunction(transaction);\n    }\n    return this.defenderSendFunction(transaction);\n  }\n\n  private async biconomySendFunction(\n    transaction: GaslessTransaction,\n  ): Promise<string> {\n    invariant(\n      this.options.gasless && \"biconomy\" in this.options.gasless,\n      \"calling biconomySendFunction without biconomy\",\n    );\n    const signer = this.getSigner();\n    const provider = this.getProvider();\n    invariant(signer && provider, \"signer and provider must be set\");\n\n    const forwarder = new ethers.Contract(\n      getContractAddressByChainId(\n        transaction.chainId,\n        \"biconomyForwarder\",\n      ) as string,\n      BiconomyForwarderAbi,\n      provider,\n    );\n    const batchId = 0;\n    const batchNonce = await getAndIncrementNonce(forwarder, \"getNonce\", [\n      transaction.from,\n      batchId,\n    ]);\n\n    const request = {\n      from: transaction.from,\n      to: transaction.to,\n      token: ethers.constants.AddressZero,\n      txGas: transaction.gasLimit.toNumber(),\n      tokenGasPrice: \"0\",\n      batchId,\n      batchNonce: batchNonce.toNumber(),\n      deadline: Math.floor(\n        Date.now() / 1000 +\n          ((this.options?.gasless &&\n            \"biconomy\" in this.options.gasless &&\n            this.options.gasless.biconomy?.deadlineSeconds) ||\n            3600),\n      ),\n      data: transaction.data,\n    };\n\n    const hashToSign = ethers.utils.arrayify(\n      ethers.utils.solidityKeccak256(\n        [\n          \"address\",\n          \"address\",\n          \"address\",\n          \"uint256\",\n          \"uint256\",\n          \"uint256\",\n          \"uint256\",\n          \"uint256\",\n          \"bytes32\",\n        ],\n        [\n          request.from,\n          request.to,\n          request.token,\n          request.txGas,\n          request.tokenGasPrice,\n          request.batchId,\n          request.batchNonce,\n          request.deadline,\n          ethers.utils.keccak256(request.data),\n        ],\n      ),\n    );\n\n    this.emit(EventType.Signature, {\n      status: \"submitted\",\n      message: hashToSign,\n      signature: \"\",\n    });\n    const signature = await signer.signMessage(hashToSign);\n    this.emit(EventType.Signature, {\n      status: \"completed\",\n      message: hashToSign,\n      signature,\n    });\n    const response = await fetch(\n      \"https://api.biconomy.io/api/v2/meta-tx/native\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          from: transaction.from,\n          apiId: this.options.gasless.biconomy.apiId,\n          params: [request, signature],\n          to: transaction.to,\n          gasLimit: transaction.gasLimit.toHexString(),\n        }),\n        headers: {\n          \"x-api-key\": this.options.gasless.biconomy.apiKey,\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n      },\n    );\n\n    if (response.ok) {\n      const resp = await response.json();\n      if (!resp.txHash) {\n        throw new Error(`relay transaction failed: ${resp.log}`);\n      }\n      return resp.txHash;\n    }\n    throw new Error(\n      `relay transaction failed with status: ${response.status} (${response.statusText})`,\n    );\n  }\n\n  private async defenderSendFunction(\n    transaction: GaslessTransaction,\n  ): Promise<string> {\n    invariant(\n      this.options.gasless && \"openzeppelin\" in this.options.gasless,\n      \"calling biconomySendFunction without biconomy\",\n    );\n    const signer = this.getSigner();\n    const provider = this.getProvider();\n    invariant(signer, \"provider is not set\");\n    invariant(provider, \"provider is not set\");\n    const forwarderAddress =\n      this.options.gasless.openzeppelin.relayerForwarderAddress;\n    const forwarder = Forwarder__factory.connect(forwarderAddress, provider);\n    const nonce = await getAndIncrementNonce(forwarder, \"getNonce\", [\n      transaction.from,\n    ]);\n    const domain = {\n      name: \"GSNv2 Forwarder\",\n      version: \"0.0.1\",\n      chainId: transaction.chainId,\n      verifyingContract: forwarderAddress,\n    };\n\n    const types = {\n      ForwardRequest,\n    };\n\n    let message: ForwardRequestMessage | PermitRequestMessage = {\n      from: transaction.from,\n      to: transaction.to,\n      value: BigNumber.from(0).toString(),\n      gas: BigNumber.from(transaction.gasLimit).toString(),\n      nonce: BigNumber.from(nonce).toString(),\n      data: transaction.data,\n    };\n\n    let signature: BytesLike;\n\n    this.emit(EventType.Signature, {\n      status: \"submitted\",\n      message,\n      signature: \"\",\n    });\n\n    // if the executing function is \"approve\" and matches with erc20 approve signature\n    // and if the token supports permit, then we use permit for gasless instead of approve.\n    if (\n      transaction.functionName === \"approve\" &&\n      transaction.functionArgs.length === 2\n    ) {\n      const spender = transaction.functionArgs[0];\n      const amount = transaction.functionArgs[1];\n      // TODO: support DAI permit by signDAIPermit\n      const { message: permit, signature: sig } = await signEIP2612Permit(\n        signer,\n        this.writeContract.address,\n        transaction.from,\n        spender,\n        amount,\n      );\n\n      const { r, s, v } = ethers.utils.splitSignature(sig);\n\n      message = {\n        to: this.readContract.address,\n        owner: permit.owner,\n        spender: permit.spender,\n        value: BigNumber.from(permit.value).toString(),\n        nonce: BigNumber.from(permit.nonce).toString(),\n        deadline: BigNumber.from(permit.deadline).toString(),\n        r,\n        s,\n        v,\n      };\n      signature = sig;\n    } else {\n      const { signature: sig } = await signTypedDataInternal(\n        signer,\n        domain,\n        types,\n        message,\n      );\n      signature = sig;\n    }\n\n    let messageType = \"forward\";\n\n    // if has owner property then it's permit :)\n    if ((message as PermitRequestMessage)?.owner) {\n      messageType = \"permit\";\n    }\n\n    const body = JSON.stringify({\n      request: message,\n      signature,\n      type: messageType,\n    });\n\n    this.emit(EventType.Signature, {\n      status: \"completed\",\n      message,\n      signature,\n    });\n\n    const response = await fetch(this.options.gasless.openzeppelin.relayerUrl, {\n      method: \"POST\",\n      body,\n    });\n    if (response.ok) {\n      const resp = await response.json();\n      const result = JSON.parse(resp.result);\n      return result.txHash;\n    }\n    throw new Error(\n      `relay transaction failed with status: ${response.status} (${response.statusText})`,\n    );\n  }\n}\n","import {\n  JsonRpcBatchProvider,\n  Provider,\n  WebSocketProvider,\n} from \"@ethersproject/providers\";\nimport { ethers, Signer } from \"ethers\";\nimport { EventEmitter2 } from \"eventemitter2\";\nimport {\n  SDKOptions,\n  SDKOptionsOutput,\n  SDKOptionsSchema,\n} from \"../../schema/sdk-options\";\nimport { NetworkOrSignerOrProvider } from \"../types\";\n\n/**\n * @internal\n */\nexport class RPCConnectionHandler extends EventEmitter2 {\n  private provider: Provider;\n  private signer: Signer | undefined;\n  protected readonly options: SDKOptionsOutput;\n\n  constructor(network: NetworkOrSignerOrProvider, options: SDKOptions) {\n    super();\n    const [signer, provider] = this.getSignerAndProvider(network, options);\n    this.signer = signer;\n    this.provider = provider;\n\n    try {\n      this.options = SDKOptionsSchema.parse(options);\n    } catch (optionParseError) {\n      console.error(\n        \"invalid sdk options object passed, falling back to default options\",\n        optionParseError,\n      );\n      this.options = SDKOptionsSchema.parse({});\n    }\n  }\n  /**\n   * The function to call whenever the network changes, such as when the users connects their wallet, disconnects their wallet, the connected chain changes, etc.\n   *\n   * @param network - a network, signer or provider that ethers js can interpret\n   */\n  public updateSignerOrProvider(network: NetworkOrSignerOrProvider) {\n    const [signer, provider] = this.getSignerAndProvider(network, this.options);\n    this.signer = signer;\n    this.provider = provider;\n  }\n  /**\n   *\n   * @returns whether or not a signer is set, `true` if there is no signer so the class is in \"read only\" mode\n   */\n  public isReadOnly(): boolean {\n    return !Signer.isSigner(this.signer);\n  }\n\n  /**\n   * Explicitly get the active signer.\n   * @returns the active signer, if there is one\n   */\n  public getSigner(): Signer | undefined {\n    return this.signer;\n  }\n\n  /**\n   * Explicitly get the active signer.\n   * @returns the active provider\n   */\n  public getProvider(): Provider {\n    return this.provider;\n  }\n\n  /**\n   *\n   * @returns the current signer if there is one, otherwise the active provider\n   */\n  public getSignerOrProvider(): Signer | Provider {\n    return this.getSigner() || this.getProvider();\n  }\n\n  /** ********************\n   * PRIVATE FUNCTIONS\n   *********************/\n\n  private getSignerAndProvider(\n    network: NetworkOrSignerOrProvider,\n    options: SDKOptions,\n  ): [Signer | undefined, Provider] {\n    let signer: Signer | undefined;\n    let provider: Provider | undefined;\n\n    if (Signer.isSigner(network)) {\n      signer = network;\n      if (network.provider) {\n        provider = network.provider;\n      }\n    }\n\n    if (options?.readonlySettings) {\n      provider = this.getReadOnlyProvider(\n        options.readonlySettings.rpcUrl,\n        options.readonlySettings.chainId,\n      );\n    }\n\n    if (!provider) {\n      if (Provider.isProvider(network)) {\n        provider = network;\n      } else if (!Signer.isSigner(network)) {\n        if (typeof network === \"string\") {\n          provider = this.getReadOnlyProvider(\n            network,\n            options?.readonlySettings?.chainId,\n          );\n        } else {\n          // no a signer, not a provider, not a string? try with default provider\n          provider = ethers.getDefaultProvider(network);\n        }\n      }\n    }\n\n    if (!provider) {\n      // we should really never hit this case!\n      provider = ethers.getDefaultProvider();\n      console.error(\n        \"No provider found, using default provider on default chain!\",\n      );\n    }\n\n    return [signer, provider];\n  }\n\n  private getReadOnlyProvider(network: string, chainId?: number) {\n    try {\n      const match = network.match(/^(ws|http)s?:/i);\n      // try the JSON batch provider if available\n      if (match) {\n        switch (match[1]) {\n          case \"http\":\n            return new JsonRpcBatchProvider(network, chainId);\n          case \"ws\":\n            return new WebSocketProvider(network, chainId);\n          default:\n            return ethers.getDefaultProvider(network);\n        }\n      } else {\n        return ethers.getDefaultProvider(network);\n      }\n    } catch (e) {\n      // fallback to the default provider\n      return ethers.getDefaultProvider(network);\n    }\n  }\n}\n","import { AddressZero } from \"@ethersproject/constants\";\nimport { ChainId, SUPPORTED_CHAIN_ID } from \"./chains\";\n\n/**\n * @internal\n */\nexport const OZ_DEFENDER_FORWARDER_ADDRESS =\n  \"0xc82BbE41f2cF04e3a8efA18F7032BDD7f6d98a81\";\n\n// const TWRegistry_address = \"0xe617C3C2e234e1EBbb9af72EC9083d0759b74F2C\";\n// const TWFactory_address = \"0xA791f39E3036A3575e095d091B1Cf9D08e1cd153\";\n\nconst TWRegistry_address = \"0x232aEFe7D3C0603c347c3F237f97CF95D238D619\";\nconst TWFactory_address = \"0xC4B9D6fF297f2873050175bbf0409c2eeB7046F9\";\n\n/**\n * @internal\n */\nexport const CONTRACT_ADDRESSES: Record<\n  SUPPORTED_CHAIN_ID,\n  {\n    biconomyForwarder: string;\n    twFactory: string;\n    twRegistry: string;\n  }\n> = {\n  [ChainId.TLChain]: {\n    // biconomyForwarder: AddressZero,\n    biconomyForwarder: \"0x4C86F3C5Dafa55CA760c349263793953BBBc9695\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n  [ChainId.Mainnet]: {\n    biconomyForwarder: \"0x84a0856b038eaAd1cC7E297cF34A7e72685A8693\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n  [ChainId.Rinkeby]: {\n    biconomyForwarder: \"0xFD4973FeB2031D4409fB57afEE5dF2051b171104\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n  [ChainId.Goerli]: {\n    biconomyForwarder: AddressZero,\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n  [ChainId.Polygon]: {\n    biconomyForwarder: \"0x86C80a8aa58e0A4fa09A69624c31Ab2a6CAD56b8\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n  [ChainId.Mumbai]: {\n    biconomyForwarder: \"0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n  [ChainId.Avalanche]: {\n    biconomyForwarder: \"0x64CD353384109423a966dCd3Aa30D884C9b2E057\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n  [ChainId.AvalancheFujiTestnet]: {\n    biconomyForwarder: \"0x6271Ca63D30507f2Dcbf99B52787032506D75BBF\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n  [ChainId.Fantom]: {\n    biconomyForwarder: AddressZero,\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n  [ChainId.FantomTestnet]: {\n    biconomyForwarder: AddressZero,\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n  },\n};\n\n/**\n * @internal\n */\nexport function getContractAddressByChainId(\n  chainId: SUPPORTED_CHAIN_ID | ChainId.Hardhat,\n  contractName: keyof typeof CONTRACT_ADDRESSES[SUPPORTED_CHAIN_ID],\n): string {\n  // for testing only\n  if (chainId === ChainId.Hardhat) {\n    if (contractName === \"twFactory\") {\n      return process.env.factoryAddress as string;\n    } else if (contractName === \"twRegistry\") {\n      return process.env.registryAddress as string;\n    } else {\n      return AddressZero;\n    }\n  }\n  // real output here\n  return CONTRACT_ADDRESSES[chainId][contractName];\n}\n","import { OZ_DEFENDER_FORWARDER_ADDRESS } from \"../constants/addresses\";\nimport { z } from \"zod\";\n\n/**\n * @public\n */\nexport const SDKOptionsSchema = z\n  .object({\n    readonlySettings: z\n      .object({\n        rpcUrl: z.string().url(),\n        chainId: z.number().optional(),\n      })\n      .optional(),\n    gasSettings: z\n      .object({\n        maxPriceInGwei: z\n          .number()\n          .min(1, \"gas price cannot be less than 1\")\n          .default(300),\n        speed: z.enum([\"standard\", \"fast\", \"fastest\"]).default(\"fastest\"),\n      })\n      .default({ maxPriceInGwei: 300, speed: \"fastest\" }),\n    gasless: z\n      .union([\n        z.object({\n          openzeppelin: z.object({\n            relayerUrl: z.string().url(),\n            relayerForwarderAddress: z\n              .string()\n              .default(OZ_DEFENDER_FORWARDER_ADDRESS),\n          }),\n        }),\n        z.object({\n          biconomy: z.object({\n            apiId: z.string(),\n            apiKey: z.string(),\n            deadlineSeconds: z\n              .number()\n              .min(1, \"deadlineSeconds cannot be les than 1\")\n              .default(3600),\n          }),\n        }),\n      ])\n      .optional(),\n  })\n  .default({\n    gasSettings: { maxPriceInGwei: 300, speed: \"fastest\" },\n  });\n\n/**\n * @public\n * All these configuration options are optional with sane defaults:\n * @example\n * ```javascript\n * {\n *   readonlySettings: {\n *     rpcUrl, // force read calls to go through your own RPC url\n *     chainId, // reduce RPC calls by sepcifying your chain ID\n *   },\n *   gasSettings: {\n *     maxPriceInGwei, // Maximum gas price for transactions (default 300 gwei)\n *     speed, // the tx speed setting: 'standard'|'fast|'fastest' (default: 'fastest')\n *   },\n *   gasless: {\n *     // By specifying a gasless configuration - all transactions will get forwarded to enable gasless transactions\n *     openzeppelin: {\n *       relayerUrl, // your OZ Defender relayer URL\n *       relayerForwarderAddress, // the OZ defender relayer address (defaults to the standard one)\n *     },\n *     biconomy: {\n *       apiId, // your Biconomy API Id\n *       apiKey, // your Biconomy API Key\n *       deadlineSeconds, // your Biconomy timeout preference\n *     },\n *   },\n * }\n * ```\n */\nexport type SDKOptions = z.input<typeof SDKOptionsSchema>;\n/**\n * @internal\n */\nexport type SDKOptionsOutput = z.output<typeof SDKOptionsSchema>;\n","/**\n * @public\n */\nexport enum EventType {\n  /**\n   * The event is triggered when the transaction is submitted and completed.\n   * The transaction is submitted when it is sent to the relayer or the blockchain.\n   * The transaction is completed when it is confirmed by the blockchain.\n   *\n   * status: \"submitted\" | \"completed\"\n   * transactionHash: string of the transaction hash\n   */\n  Transaction = \"transaction\",\n\n  /**\n   * The event is triggered when wallet sign message is requested and completed.\n   *\n   * status: \"submitted\" | \"completed\"\n   * message: message to sign\n   * signature: signature of the message (only available when status is \"completed\")\n   */\n  Signature = \"signature\",\n}\n","import { BaseContract, BigNumber } from \"ethers\";\n\n/**\n * @internal\n */\nexport const ForwardRequest = [\n  { name: \"from\", type: \"address\" },\n  { name: \"to\", type: \"address\" },\n  { name: \"value\", type: \"uint256\" },\n  { name: \"gas\", type: \"uint256\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"data\", type: \"bytes\" },\n];\n\n/**\n * @internal\n */\nexport const BiconomyForwarderAbi = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"uint256\", name: \"batchId\", type: \"uint256\" },\n    ],\n    name: \"getNonce\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _nonces: Record<string, BigNumber> = {};\nconst _noncesSyncTimestamp: Record<string, number> = {};\n\n/**\n * @internal\n */\nexport async function getAndIncrementNonce(\n  forwarder: BaseContract,\n  forwarderFunction: string,\n  forwarderArgs: any[],\n): Promise<BigNumber> {\n  // address is only used for internal caching :)\n  const address = forwarderArgs.join(\"|\");\n\n  const timestamp = _noncesSyncTimestamp[address];\n  // if it's within 2 seconds we're optimistically increment the nonce\n  // should we always sync?\n  const shouldSync = Date.now() - timestamp >= 2000;\n\n  if (!(address in _nonces) || shouldSync) {\n    const nonceResult = await forwarder.functions[forwarderFunction](\n      ...forwarderArgs,\n    );\n    if (Array.isArray(nonceResult) && nonceResult.length > 0) {\n      _nonces[address] = BigNumber.from(nonceResult[0]);\n    } else {\n      _nonces[address] = BigNumber.from(nonceResult);\n    }\n    _noncesSyncTimestamp[address] = Date.now();\n  }\n\n  const nonce = _nonces[address];\n  _nonces[address] = BigNumber.from(_nonces[address]).add(1);\n  return nonce;\n}\n","import { BigNumber, BigNumberish, Contract, ethers, Signer } from \"ethers\";\nimport {\n  EIP712Domain,\n  EIP712StandardDomain,\n  signTypedDataInternal,\n} from \"./sign\";\n\nconst NAME_ABI = [\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst DOMAIN_SEPARATOR_ABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getDomainSeperator\",\n    outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst NONCES_ABI = [\n  {\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\n    name: \"nonces\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"user\", type: \"address\" }],\n    name: \"getNonce\",\n    outputs: [{ internalType: \"uint256\", name: \"nonce\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nasync function getSignerNonce(signer: Signer, contractAddress: string) {\n  const contract = new Contract(contractAddress, NONCES_ABI, signer);\n  try {\n    return await contract.nonces(await signer.getAddress());\n  } catch (err) {\n    return await contract.getNonce(await signer.getAddress());\n  }\n}\n\nasync function getDomainSeperator(signer: Signer, contractAddress: string) {\n  const contract = new Contract(contractAddress, DOMAIN_SEPARATOR_ABI, signer);\n  try {\n    return await contract.DOMAIN_SEPARATOR();\n  } catch (err) {\n    return await contract.getDomainSeperator();\n  }\n}\n\nasync function getTokenName(signer: Signer, contractAddress: string) {\n  return new Contract(contractAddress, NAME_ABI, signer).name();\n}\n\n/**\n * Polygon chain has different EIP712 domain separator for USDC, DAI compared to other chains and slightly different than EIP-2612.\n */\nasync function getChainDomainSeperator(\n  signer: Signer,\n  domain: EIP712StandardDomain,\n) {\n  const contractDomainSeparator = await getDomainSeperator(\n    signer,\n    domain.verifyingContract,\n  );\n\n  const polygonDomain: EIP712Domain = {\n    name: domain.name,\n    version: domain.version,\n    verifyingContract: domain.verifyingContract,\n    salt: ethers.utils.hexZeroPad(\n      BigNumber.from(domain.chainId).toHexString(),\n      32,\n    ),\n  };\n\n  if (\n    ethers.utils._TypedDataEncoder.hashDomain(polygonDomain) ===\n    contractDomainSeparator\n  ) {\n    return polygonDomain;\n  }\n\n  return domain;\n}\n\n/**\n * @internal\n */\nexport async function signDAIPermit(\n  signer: Signer,\n  currencyAddress: string,\n  owner: string,\n  spender: string,\n  allowed = true,\n  deadline?: BigNumberish,\n  nonce?: BigNumberish,\n) {\n  const domain = await getChainDomainSeperator(signer, {\n    name: await getTokenName(signer, currencyAddress),\n    version: \"1\",\n    chainId: await signer.getChainId(),\n    verifyingContract: currencyAddress,\n  });\n\n  nonce = nonce ?? (await getSignerNonce(signer, currencyAddress)).toString();\n  deadline = deadline ?? ethers.constants.MaxUint256;\n\n  const message = {\n    owner,\n    spender,\n    nonce,\n    deadline,\n    value: 0,\n    allowed,\n  };\n\n  const types = {\n    Permit: [\n      { name: \"holder\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"expiry\", type: \"uint256\" },\n      { name: \"allowed\", type: \"bool\" },\n    ],\n  };\n\n  const { signature } = await signTypedDataInternal(signer, domain, types, {\n    holder: owner,\n    spender,\n    nonce,\n    expiry: deadline,\n    allowed,\n  });\n\n  return {\n    message,\n    signature,\n  };\n}\n\n/**\n * @internal\n */\nexport async function signEIP2612Permit(\n  signer: Signer,\n  currencyAddress: string,\n  owner: string,\n  spender: string,\n  value: BigNumberish,\n  deadline?: BigNumberish,\n  nonce?: BigNumberish,\n) {\n  const domain = await getChainDomainSeperator(signer, {\n    name: await getTokenName(signer, currencyAddress),\n    version: \"1\",\n    chainId: await signer.getChainId(),\n    verifyingContract: currencyAddress,\n  });\n\n  nonce = nonce ?? (await getSignerNonce(signer, currencyAddress)).toString();\n  deadline = deadline ?? ethers.constants.MaxUint256;\n\n  const message = {\n    owner,\n    spender,\n    value,\n    nonce,\n    deadline,\n  };\n\n  const types = {\n    Permit: [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ],\n  };\n\n  const { signature } = await signTypedDataInternal(\n    signer,\n    domain,\n    types,\n    message,\n  );\n  return {\n    message,\n    signature,\n  };\n}\n","import { TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"@ethersproject/providers\";\nimport { ethers, Signer } from \"ethers\";\n\n/**\n * @internal\n */\nexport interface EIP712StandardDomain {\n  name: string;\n  version: string;\n  chainId: number;\n  verifyingContract: string;\n}\n\n/**\n * @internal\n */\nexport interface EIP712PolygonDomain {\n  name: string;\n  version: string;\n  verifyingContract: string;\n  salt: string;\n}\n\n/**\n * @internal\n */\nexport type EIP712Domain = EIP712StandardDomain | EIP712PolygonDomain;\n\n/**\n * eip712 sign typed data with different wallet handling including ledger live\n * @internal\n */\nexport async function signTypedDataInternal(\n  signer: Signer,\n  domain: EIP712Domain,\n  types: Record<string, Array<TypedDataField>>,\n  message: Record<string, any>,\n) {\n  const provider = signer?.provider as JsonRpcProvider;\n  if (!provider) {\n    throw new Error(\"missing provider\");\n  }\n\n  const payload = ethers.utils._TypedDataEncoder.getPayload(\n    domain,\n    types,\n    message,\n  );\n\n  let signature = \"\";\n\n  // an indirect way for accessing walletconnect's underlying provider\n  if ((provider as any)?.provider?.isWalletConnect) {\n    signature = await provider.send(\"eth_signTypedData\", [\n      (await signer.getAddress()).toLowerCase(),\n      JSON.stringify(payload),\n    ]);\n  } else {\n    try {\n      signature = await (signer as JsonRpcSigner)._signTypedData(\n        domain,\n        types,\n        message,\n      );\n    } catch (err: any) {\n      if (err?.message?.includes(\"Method eth_signTypedData_v4 not supported\")) {\n        signature = await provider.send(\"eth_signTypedData\", [\n          (await signer.getAddress()).toLowerCase(),\n          JSON.stringify(payload),\n        ]);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  // fix ledger live where signature result in v = 0, 1. ethers magically fix it in split/join.\n  return {\n    payload,\n    signature: ethers.utils.joinSignature(\n      ethers.utils.splitSignature(signature),\n    ),\n  };\n}\n","import { ChainId } from \"../constants/chains\";\nimport { BigNumber, ethers } from \"ethers\";\n\n/**\n * @internal\n */\nfunction getGasStationUrl(chainId: ChainId.Polygon | ChainId.Mumbai): string {\n  switch (chainId) {\n    case ChainId.Polygon:\n      return \"https://gasstation-mainnet.matic.network/v2\";\n    case ChainId.Mumbai:\n      return \"https://gasstation-mumbai.matic.today/v2\";\n  }\n}\n\nconst MIN_POLYGON_GAS_PRICE = ethers.utils.parseUnits(\"31\", \"gwei\");\nconst MIN_MUMBAI_GAS_PRICE = ethers.utils.parseUnits(\"1\", \"gwei\");\n\n/**\n * @internal\n */\nfunction getDefaultGasFee(\n  chainId: ChainId.Polygon | ChainId.Mumbai,\n): BigNumber {\n  switch (chainId) {\n    case ChainId.Polygon:\n      return MIN_POLYGON_GAS_PRICE;\n    case ChainId.Mumbai:\n      return MIN_MUMBAI_GAS_PRICE;\n  }\n}\n\n/**\n *\n * @returns the gas price\n * @internal\n */\nexport async function getPolygonGasPriorityFee(\n  chainId: ChainId.Polygon | ChainId.Mumbai,\n): Promise<BigNumber> {\n  const gasStationUrl = getGasStationUrl(chainId);\n  try {\n    const data = await (await fetch(gasStationUrl)).json();\n    // take the standard speed here, SDK options will define the extra tip\n    const priorityFee = data[\"standard\"][\"maxPriorityFee\"];\n    if (priorityFee > 0) {\n      const fixedFee = parseFloat(priorityFee).toFixed(9);\n      return ethers.utils.parseUnits(fixedFee, \"gwei\");\n    }\n  } catch (e) {\n    console.error(\"failed to fetch gas\", e);\n  }\n  return getDefaultGasFee(chainId);\n}\n","import { BigNumber, ethers } from \"ethers\";\nimport { ChainId } from \"./chains\";\n\n/**\n *\n * @internal\n */\nexport type ChainlinkInfo = {\n  vrfCoordinator: string;\n  linkTokenAddress: string;\n  keyHash: string;\n  fees: BigNumber;\n};\n\n/**\n *\n * @internal\n */\nexport const ChainlinkVrf: Record<number, ChainlinkInfo> = {\n  [ChainId.Polygon]: {\n    vrfCoordinator: \"0x3d2341ADb2D31f1c5530cDC622016af293177AE0\",\n    linkTokenAddress: \"0xb0897686c545045aFc77CF20eC7A532E3120E0F1\",\n    keyHash:\n      \"0xf86195cf7690c55907b2b611ebb7343a6f649bff128701cc542f0569e2c549da\",\n    fees: ethers.utils.parseEther(\"0.0001\"),\n  },\n  [ChainId.Mumbai]: {\n    vrfCoordinator: \"0x8C7382F9D8f56b33781fE506E897a4F1e2d17255\",\n    linkTokenAddress: \"0x326C977E6efc84E512bB9C30f76E30c160eD06FB\",\n    keyHash:\n      \"0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4\",\n    fees: ethers.utils.parseEther(\"0.0001\"),\n  },\n  [ChainId.Rinkeby]: {\n    vrfCoordinator: \"0xb3dCcb4Cf7a26f6cf6B120Cf5A73875B7BBc655B\",\n    linkTokenAddress: \"0x01be23585060835e02b77ef475b0cc51aa1e0709\",\n    keyHash:\n      \"0x2ed0feb3e7fd2022120aa84fab1945545a9f2ffc9076fd6156fa96eaff4c1311\",\n    fees: ethers.utils.parseEther(\"0.1\"),\n  },\n  [ChainId.Mainnet]: {\n    vrfCoordinator: \"0xf0d54349aDdcf704F77AE15b96510dEA15cb7952\",\n    linkTokenAddress: \"0x514910771AF9Ca656af840dff83E8264EcF986CA\",\n    keyHash:\n      \"0xAA77729D3466CA35AE8D28B3BBAC7CC36A5031EFDC430821C02BC31A238AF445\",\n    fees: ethers.utils.parseEther(\"2\"),\n  },\n  [ChainId.Hardhat]: {\n    vrfCoordinator: \"0x8C7382F9D8f56b33781fE506E897a4F1e2d17255\",\n    linkTokenAddress: \"0x326C977E6efc84E512bB9C30f76E30c160eD06FB\",\n    keyHash:\n      \"0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4\",\n    fees: ethers.utils.parseEther(\"0.0001\"),\n  },\n};\n","/**\n * @internal\n */\nimport { arrayify } from \"ethers/lib/utils\";\n\n/**\n * @internal\n */\nexport const InterfaceId_IERC721 = arrayify(\"0x80ac58cd\");\n\n/**\n * @internal\n */\nexport const InterfaceId_IERC1155 = arrayify(\"0xd9b67a26\");\n","/**\n * @internal\n */\nexport const DEFAULT_IPFS_GATEWAY = \"https://gateway.ipfscdn.io/ipfs/\";\n/**\n * @internal\n */\nexport const TW_IPFS_SERVER_URL = \"https://upload.nftlabs.co\";\n/**\n * @internal\n */\nexport const PINATA_IPFS_URL = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n","import { IStorage } from \"../core/interfaces/IStorage\";\nimport MerkleTree from \"merkletreejs\";\nimport {\n  SnapshotInputSchema,\n  SnapshotSchema,\n} from \"../schema/contracts/common/snapshots\";\nimport {\n  SnapshotInfo,\n  SnapshotInput,\n} from \"../types/claim-conditions/claim-conditions\";\nimport { DuplicateLeafsError } from \"./error\";\nimport keccak256 from \"keccak256\";\nimport { BigNumber, BigNumberish, ethers } from \"ethers\";\n\n/**\n * Create a snapshot (merkle tree) from a list of addresses and uploads it to IPFS\n * @param snapshotInput - the list of addresses to hash\n * @param storage - the storage to upload to\n * @returns the generated snapshot and URI\n * @internal\n */\nexport async function createSnapshot(\n  snapshotInput: SnapshotInput,\n  storage: IStorage,\n): Promise<SnapshotInfo> {\n  const input = SnapshotInputSchema.parse(snapshotInput);\n  const addresses = input.map((i) => i.address);\n  const hasDuplicates = new Set(addresses).size < addresses.length;\n  if (hasDuplicates) {\n    throw new DuplicateLeafsError();\n  }\n\n  const hashedLeafs = input.map((i) => hashLeafNode(i.address, i.maxClaimable));\n  const tree = new MerkleTree(hashedLeafs, keccak256, {\n    sort: true,\n  });\n\n  const snapshot = SnapshotSchema.parse({\n    merkleRoot: tree.getHexRoot(),\n    claims: input.map((i, index) => {\n      const proof = tree.getHexProof(hashedLeafs[index]);\n      return {\n        address: i.address,\n        maxClaimable: i.maxClaimable,\n        proof,\n      };\n    }),\n  });\n\n  const uri = await storage.uploadMetadata(snapshot);\n  return {\n    merkleRoot: tree.getHexRoot(),\n    snapshotUri: uri,\n    snapshot,\n  };\n}\n\n/**\n * Hash an address and the corresponding claimable amount\n * @internal\n * @param address - the address\n * @param maxClaimableAmount - the amount\n */\nexport function hashLeafNode(\n  address: string,\n  maxClaimableAmount: BigNumberish,\n): string {\n  return ethers.utils.solidityKeccak256(\n    [\"address\", \"uint256\"],\n    [address, BigNumber.from(maxClaimableAmount)],\n  );\n}\n","export enum ListingType {\n  Direct = 0,\n  Auction = 1,\n}\n","export enum ProposalState {\n  Pending,\n  Active,\n  Canceled,\n  Defeated,\n  Succeeded,\n  Queued,\n  Expired,\n  Executed,\n}\n","export enum VoteType {\n  Against = 0,\n  For = 1,\n  Abstain = 2,\n}\n","export enum ClaimEligibility {\n  NotEnoughSupply = \"There is not enough supply to claim.\",\n\n  AddressNotAllowed = \"This address is not on the allowlist.\",\n\n  WaitBeforeNextClaimTransaction = \"Not enough time since last claim transaction. Please wait.\",\n\n  AlreadyClaimed = \"You have already claimed the token.\",\n\n  NotEnoughTokens = \"There are not enough tokens in the wallet to pay for the claim.\",\n\n  NoActiveClaimPhase = \"There is no active claim phase at the moment. Please check back in later.\",\n\n  NoClaimConditionSet = \"There is no claim condition set.\",\n\n  Unknown = \"No claim conditions found.\",\n}\n","import { BigNumber, BigNumberish, BytesLike } from \"ethers\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport {\n  SnapshotInputSchema,\n  SnapshotSchema,\n} from \"../schema/contracts/common/snapshots\";\nimport {\n  approveErc20Allowance,\n  fetchCurrencyValue,\n  isNativeToken,\n  normalizePriceValue,\n} from \"./currency\";\nimport {\n  ClaimCondition,\n  ClaimConditionInput,\n  ClaimVerification,\n  FilledConditionInput,\n  SnapshotInfo,\n} from \"../types\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport { IStorage } from \"../core\";\nimport {\n  ClaimConditionInputArray,\n  ClaimConditionInputSchema,\n  ClaimConditionOutputSchema,\n} from \"../schema/contracts/common/claim-conditions\";\nimport { createSnapshot } from \"./snapshots\";\nimport { IDropClaimCondition } from \"../@custom-thirdweb-dev/contracts/dist/IDropERC1155\";\nimport { NATIVE_TOKEN_ADDRESS } from \"../constants\";\nimport { Provider } from \"@ethersproject/providers\";\n\n/**\n * Returns proofs and the overrides required for the transaction.\n * @internal\n * @returns - `overrides` and `proofs` as an object.\n */\nexport async function prepareClaim(\n  quantity: BigNumberish,\n  activeClaimCondition: ClaimCondition,\n  merkleMetadata: Record<string, string>,\n  contractWrapper: ContractWrapper<any>,\n  storage: IStorage,\n  proofs: BytesLike[] = [hexZeroPad([0], 32)],\n): Promise<ClaimVerification> {\n  const addressToClaim = await contractWrapper.getSignerAddress();\n  let maxClaimable = 0;\n\n  try {\n    if (\n      !activeClaimCondition.merkleRootHash.toString().startsWith(AddressZero)\n    ) {\n      const claims = await fetchSnapshot(\n        activeClaimCondition.merkleRootHash.toString(),\n        merkleMetadata,\n        storage,\n      );\n      const item =\n        claims &&\n        claims.find(\n          (c) => c.address.toLowerCase() === addressToClaim.toLowerCase(),\n        );\n      if (item === undefined) {\n        throw new Error(\"No claim found for this address\");\n      }\n      proofs = item.proof;\n      maxClaimable = item.maxClaimable;\n    }\n  } catch (e) {\n    // have to handle the valid error case that we *do* want to throw on\n    if ((e as Error)?.message === \"No claim found for this address\") {\n      throw e;\n    }\n    // other errors we wanna ignore and try to continue\n    console.warn(\n      \"failed to check claim condition merkle root hash, continuing anyways\",\n      e,\n    );\n  }\n\n  const overrides = (await contractWrapper.getCallOverrides()) || {};\n  const price = activeClaimCondition.price;\n  const currencyAddress = activeClaimCondition.currencyAddress;\n  if (price.gt(0)) {\n    if (isNativeToken(currencyAddress)) {\n      overrides[\"value\"] = BigNumber.from(price).mul(quantity);\n    } else {\n      await approveErc20Allowance(\n        contractWrapper,\n        currencyAddress,\n        price,\n        quantity,\n      );\n    }\n  }\n  return {\n    overrides,\n    proofs,\n    maxQuantityPerTransaction: BigNumber.from(maxClaimable),\n    price,\n    currencyAddress,\n  };\n}\n\n/**\n * @internal\n * @param merkleRoot\n * @param merkleMetadata\n * @param storage\n */\nexport async function fetchSnapshot(\n  merkleRoot: string,\n  merkleMetadata: Record<string, string>,\n  storage: IStorage,\n) {\n  const snapshotUri = merkleMetadata[merkleRoot];\n  let snapshot = undefined;\n  if (snapshotUri) {\n    const raw = await storage.get(snapshotUri);\n    const snapshotData = SnapshotSchema.parse(raw);\n    if (merkleRoot === snapshotData.merkleRoot) {\n      snapshot = snapshotData.claims;\n    }\n  }\n  return snapshot;\n}\n\n/**\n * @internal\n * @param index\n * @param claimConditionInput\n * @param existingConditions\n */\nexport function updateExsitingClaimConditions(\n  index: number,\n  claimConditionInput: ClaimConditionInput,\n  existingConditions: ClaimCondition[],\n): ClaimConditionInput[] {\n  if (index >= existingConditions.length) {\n    throw Error(\n      `Index out of bounds - got index: ${index} with ${existingConditions.length} conditions`,\n    );\n  }\n  // merge input with existing claim condition\n  const newConditionParsed = ClaimConditionInputSchema.parse({\n    ...existingConditions[index],\n    price: existingConditions[index].price.toString(),\n    ...claimConditionInput,\n  });\n  // convert to output claim condition\n  const mergedConditionOutput =\n    ClaimConditionOutputSchema.parse(newConditionParsed);\n\n  return existingConditions.map((existingOutput, i) => {\n    let newConditionAtIndex;\n    if (i === index) {\n      newConditionAtIndex = mergedConditionOutput;\n    } else {\n      newConditionAtIndex = existingOutput;\n    }\n    return {\n      ...newConditionAtIndex,\n      price: newConditionAtIndex.price.toString(), // manually transform back to input price type\n    };\n  });\n}\n\n/**\n * Fetches the proof for the current signer for a particular wallet.\n *\n * @param merkleRoot - The merkle root of the condition to check.\n * @returns - The proof for the current signer for the specified condition.\n */\nexport async function getClaimerProofs(\n  addressToClaim: string,\n  merkleRoot: string,\n  merkleMetadata: Record<string, string>,\n  storage: IStorage,\n): Promise<{ maxClaimable: number; proof: string[] }> {\n  const claims = await fetchSnapshot(merkleRoot, merkleMetadata, storage);\n  if (claims === undefined) {\n    return {\n      proof: [],\n      maxClaimable: 0,\n    };\n  }\n  const item = claims.find(\n    (c) => c.address.toLowerCase() === addressToClaim?.toLowerCase(),\n  );\n\n  if (item === undefined) {\n    return {\n      proof: [],\n      maxClaimable: 0,\n    };\n  }\n  return {\n    proof: item.proof,\n    maxClaimable: item.maxClaimable,\n  };\n}\n\n/**\n * Create and uploads snapshots + converts claim conditions to contract format\n * @param claimConditionInputs\n * @internal\n */\nexport async function processClaimConditionInputs(\n  claimConditionInputs: ClaimConditionInput[],\n  provider: Provider,\n  storage: IStorage,\n) {\n  const snapshotInfos: SnapshotInfo[] = [];\n  const inputsWithSnapshots = await Promise.all(\n    claimConditionInputs.map(async (conditionInput) => {\n      // check snapshots and upload if provided\n      if (conditionInput.snapshot) {\n        const snapshotInfo = await createSnapshot(\n          SnapshotInputSchema.parse(conditionInput.snapshot),\n          storage,\n        );\n        snapshotInfos.push(snapshotInfo);\n        conditionInput.merkleRootHash = snapshotInfo.merkleRoot;\n      }\n      // fill condition with defaults values if not provided\n      return conditionInput;\n    }),\n  );\n\n  const parsedInputs = ClaimConditionInputArray.parse(inputsWithSnapshots);\n\n  // Convert processed inputs to the format the contract expects, and sort by timestamp\n  const sortedConditions: IDropClaimCondition.ClaimConditionStruct[] = (\n    await Promise.all(\n      parsedInputs.map((c) => convertToContractModel(c, provider)),\n    )\n  ).sort((a, b) => {\n    const left = BigNumber.from(a.startTimestamp);\n    const right = BigNumber.from(b.startTimestamp);\n    if (left.eq(right)) {\n      return 0;\n    } else if (left.gt(right)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n  return { snapshotInfos, sortedConditions };\n}\n\n/**\n * Converts a local SDK model to contract model\n * @param c\n * @param provider\n * @internal\n */\nasync function convertToContractModel(\n  c: FilledConditionInput,\n  provider: Provider,\n): Promise<IDropClaimCondition.ClaimConditionStruct> {\n  const currency =\n    c.currencyAddress === AddressZero\n      ? NATIVE_TOKEN_ADDRESS\n      : c.currencyAddress;\n  return {\n    startTimestamp: c.startTime,\n    maxClaimableSupply: c.maxQuantity,\n    supplyClaimed: 0,\n    quantityLimitPerTransaction: c.quantityLimitPerTransaction,\n    waitTimeInSecondsBetweenClaims: c.waitInSeconds,\n    pricePerToken: await normalizePriceValue(provider, c.price, currency),\n    currency,\n    merkleRoot: c.merkleRootHash,\n  };\n}\n\n/**\n * Transforms a contract model to local model\n * @param pm\n * @param provider\n * @param merkleMetadata\n * @param storage\n * @internal\n */\nexport async function transformResultToClaimCondition(\n  pm: IDropClaimCondition.ClaimConditionStructOutput,\n  provider: Provider,\n  merkleMetadata: Record<string, string>,\n  storage: IStorage,\n): Promise<ClaimCondition> {\n  const cv = await fetchCurrencyValue(provider, pm.currency, pm.pricePerToken);\n  const claims = await fetchSnapshot(pm.merkleRoot, merkleMetadata, storage);\n  return ClaimConditionOutputSchema.parse({\n    startTime: pm.startTimestamp,\n    maxQuantity: pm.maxClaimableSupply.toString(),\n    currentMintSupply: pm.supplyClaimed.toString(),\n    availableSupply: BigNumber.from(pm.maxClaimableSupply)\n      .sub(pm.supplyClaimed)\n      .toString(),\n    quantityLimitPerTransaction: pm.quantityLimitPerTransaction.toString(),\n    waitInSeconds: pm.waitTimeInSecondsBetweenClaims.toString(),\n    price: BigNumber.from(pm.pricePerToken),\n    currency: pm.currency,\n    currencyAddress: pm.currency,\n    currencyMetadata: cv,\n    merkleRootHash: pm.merkleRoot,\n    snapshot: claims,\n  });\n}\n","import { IStorage } from \"../interfaces/IStorage\";\nimport { DropErc721ContractSchema } from \"../../schema/contracts/drop-erc721\";\nimport { ContractMetadata } from \"./contract-metadata\";\nimport {\n  DropERC1155,\n  IERC20,\n  IERC20__factory,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { BigNumber, BigNumberish, ethers } from \"ethers\";\nimport { isNativeToken } from \"../../common/currency\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { ClaimCondition, ClaimConditionInput } from \"../../types\";\nimport deepEqual from \"deep-equal\";\nimport { ClaimEligibility } from \"../../enums\";\nimport { TransactionResult } from \"../index\";\nimport {\n  getClaimerProofs,\n  processClaimConditionInputs,\n  transformResultToClaimCondition,\n  updateExsitingClaimConditions,\n} from \"../../common/claim-conditions\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport { isBrowser } from \"../../common/utils\";\n\n/**\n * Manages claim conditions for Edition Drop contracts\n * @public\n */\nexport class DropErc1155ClaimConditions {\n  private contractWrapper;\n  private metadata;\n  private storage: IStorage;\n\n  constructor(\n    contractWrapper: ContractWrapper<DropERC1155>,\n    metadata: ContractMetadata<DropERC1155, typeof DropErc721ContractSchema>,\n    storage: IStorage,\n  ) {\n    this.storage = storage;\n    this.contractWrapper = contractWrapper;\n    this.metadata = metadata;\n  }\n\n  /** ***************************************\n   * READ FUNCTIONS\n   *****************************************/\n\n  /**\n   * Get the currently active claim condition\n   *\n   * @returns the claim condition metadata\n   */\n  public async getActive(tokenId: BigNumberish): Promise<ClaimCondition> {\n    const id =\n      await this.contractWrapper.readContract.getActiveClaimConditionId(\n        tokenId,\n      );\n    const mc = await this.contractWrapper.readContract.getClaimConditionById(\n      tokenId,\n      id,\n    );\n    const metadata = await this.metadata.get();\n    return await transformResultToClaimCondition(\n      mc,\n      this.contractWrapper.getProvider(),\n      metadata.merkle,\n      this.storage,\n    );\n  }\n\n  /**\n   * Get all the claim conditions\n   *\n   * @returns the claim conditions metadata\n   */\n  public async getAll(tokenId: BigNumberish): Promise<ClaimCondition[]> {\n    const claimCondition =\n      await this.contractWrapper.readContract.claimCondition(tokenId);\n    const startId = claimCondition.currentStartId.toNumber();\n    const count = claimCondition.count.toNumber();\n    const conditions = [];\n    for (let i = startId; i < startId + count; i++) {\n      conditions.push(\n        await this.contractWrapper.readContract.getClaimConditionById(\n          tokenId,\n          i,\n        ),\n      );\n    }\n    const metadata = await this.metadata.get();\n    return Promise.all(\n      conditions.map((c) =>\n        transformResultToClaimCondition(\n          c,\n          this.contractWrapper.getProvider(),\n          metadata.merkle,\n          this.storage,\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Can Claim\n   *\n   * @remarks Check if a particular NFT can currently be claimed by a given user.\n   *\n   * @example\n   * ```javascript\n   * // Quantity of tokens to check claimability of\n   * const quantity = 1;\n   * const canClaim = await contract.canClaim(quantity);\n   * ```\n   */\n  public async canClaim(\n    tokenId: BigNumberish,\n    quantity: BigNumberish,\n    addressToCheck?: string,\n  ): Promise<boolean> {\n    if (addressToCheck === undefined) {\n      addressToCheck = await this.contractWrapper.getSignerAddress();\n    }\n    // TODO switch to use verifyClaim\n    return (\n      (\n        await this.getClaimIneligibilityReasons(\n          tokenId,\n          quantity,\n          addressToCheck,\n        )\n      ).length === 0\n    );\n  }\n\n  /**\n   * For any claim conditions that a particular wallet is violating,\n   * this function returns human-readable information about the\n   * breaks in the condition that can be used to inform the user.\n   *\n   * @param tokenId - the token id to check\n   * @param quantity - The desired quantity that would be claimed.\n   * @param addressToCheck - The wallet address, defaults to the connected wallet.\n   *\n   */\n  public async getClaimIneligibilityReasons(\n    tokenId: BigNumberish,\n    quantity: BigNumberish,\n    addressToCheck?: string,\n  ): Promise<ClaimEligibility[]> {\n    const reasons: ClaimEligibility[] = [];\n    let activeConditionIndex: BigNumber;\n    let claimCondition: ClaimCondition;\n\n    if (addressToCheck === undefined) {\n      throw new Error(\"addressToCheck is required\");\n    }\n\n    try {\n      [activeConditionIndex, claimCondition] = await Promise.all([\n        this.contractWrapper.readContract.getActiveClaimConditionId(tokenId),\n        this.getActive(tokenId),\n      ]);\n    } catch (err: any) {\n      if ((err.message as string).includes(\"no active mint condition.\")) {\n        reasons.push(ClaimEligibility.NoActiveClaimPhase);\n        return reasons;\n      }\n      reasons.push(ClaimEligibility.Unknown);\n      return reasons;\n    }\n\n    if (BigNumber.from(claimCondition.availableSupply).lt(quantity)) {\n      reasons.push(ClaimEligibility.NotEnoughSupply);\n    }\n\n    // check for merkle root inclusion\n    const merkleRootArray = ethers.utils.stripZeros(\n      claimCondition.merkleRootHash,\n    );\n    if (merkleRootArray.length > 0) {\n      const merkleLower = claimCondition.merkleRootHash.toString();\n      const metadata = await this.metadata.get();\n      const proofs = await getClaimerProofs(\n        addressToCheck,\n        merkleLower,\n        metadata.merkle,\n        this.storage,\n      );\n      try {\n        const [validMerkleProof] =\n          await this.contractWrapper.readContract.verifyClaimMerkleProof(\n            activeConditionIndex,\n            addressToCheck,\n            tokenId,\n            quantity,\n            proofs.proof,\n            proofs.maxClaimable,\n          );\n        if (!validMerkleProof) {\n          reasons.push(ClaimEligibility.AddressNotAllowed);\n          return reasons;\n        }\n      } catch (e) {\n        reasons.push(ClaimEligibility.AddressNotAllowed);\n        return reasons;\n      }\n    }\n\n    // check for claim timestamp between claims\n    const [lastClaimedTimestamp, timestampForNextClaim] =\n      await this.contractWrapper.readContract.getClaimTimestamp(\n        tokenId,\n        activeConditionIndex,\n        addressToCheck,\n      );\n\n    const now = BigNumber.from(Date.now()).div(1000);\n\n    if (lastClaimedTimestamp.gt(0) && now.lt(timestampForNextClaim)) {\n      // contract will return MaxUint256 if user has already claimed and cannot claim again\n      if (timestampForNextClaim.eq(MaxUint256)) {\n        reasons.push(ClaimEligibility.AlreadyClaimed);\n      } else {\n        reasons.push(ClaimEligibility.WaitBeforeNextClaimTransaction);\n      }\n    }\n\n    // if not within a browser conetext, check for wallet balance.\n    // In browser context, let the wallet do that job\n    if (claimCondition.price.gt(0) && !isBrowser()) {\n      const totalPrice = claimCondition.price.mul(quantity);\n      const provider = this.contractWrapper.getProvider();\n      if (isNativeToken(claimCondition.currencyAddress)) {\n        const balance = await provider.getBalance(addressToCheck);\n        if (balance.lt(totalPrice)) {\n          reasons.push(ClaimEligibility.NotEnoughTokens);\n        }\n      } else {\n        const erc20 = new ContractWrapper<IERC20>(\n          provider,\n          claimCondition.currencyAddress,\n          IERC20__factory.abi,\n          {},\n        );\n        const balance = await erc20.readContract.balanceOf(addressToCheck);\n        if (balance.lt(totalPrice)) {\n          reasons.push(ClaimEligibility.NotEnoughTokens);\n        }\n      }\n    }\n\n    return reasons;\n  }\n\n  /** ***************************************\n   * WRITE FUNCTIONS\n   *****************************************/\n\n  /**\n   * Set public mint conditions on a NFT\n   *\n   * @remarks Sets the public mint conditions that need to be fulfilled by users to claim a particular NFT in this bundle.\n   *\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   *\n   * const tokenId = 0; // the id of the NFT to set claim conditions on\n   * await dropContract.claimConditions.set(tokenId, claimConditions);\n   * ```\n   *\n   * @param tokenId - The id of the NFT to set the claim conditions on\n   * @param claimConditionInputs - The claim conditions\n   * @param resetClaimEligibilityForAll - Whether to reset the state of who already claimed NFTs previously\n   */\n  public async set(\n    tokenId: BigNumberish,\n    claimConditionInputs: ClaimConditionInput[],\n    resetClaimEligibilityForAll = false,\n  ): Promise<TransactionResult> {\n    // process inputs\n    const { snapshotInfos, sortedConditions } =\n      await processClaimConditionInputs(\n        claimConditionInputs,\n        this.contractWrapper.getProvider(),\n        this.storage,\n      );\n\n    const merkleInfo: { [key: string]: string } = {};\n    snapshotInfos.forEach((s) => {\n      merkleInfo[s.merkleRoot] = s.snapshotUri;\n    });\n    const metadata = await this.metadata.get();\n    const encoded = [];\n\n    // keep the old merkle roots from other tokenIds\n    for (const key of Object.keys(metadata.merkle)) {\n      merkleInfo[key] = metadata.merkle[key];\n    }\n\n    // upload new merkle roots to snapshot URIs if updated\n    if (!deepEqual(metadata.merkle, merkleInfo)) {\n      const mergedMetadata = this.metadata.parseInputMetadata({\n        ...metadata,\n        merkle: merkleInfo,\n      });\n      // using internal method to just upload, avoids one contract call\n      const contractURI = await this.metadata._parseAndUploadMetadata(\n        mergedMetadata,\n      );\n      encoded.push(\n        this.contractWrapper.readContract.interface.encodeFunctionData(\n          \"setContractURI\",\n          [contractURI],\n        ),\n      );\n    }\n\n    encoded.push(\n      this.contractWrapper.readContract.interface.encodeFunctionData(\n        \"setClaimConditions\",\n        [tokenId, sortedConditions, resetClaimEligibilityForAll],\n      ),\n    );\n\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded),\n    };\n  }\n\n  /**\n   * Update a single claim condition with new data.\n   * @param tokenId - the token id to update\n   * @param index - the index of the claim condition to update, as given by the index from the result of `getAll()`\n   * @param claimConditionInput - the new data to update, previous data will be retained\n   */\n  public async update(\n    tokenId: BigNumberish,\n    index: number,\n    claimConditionInput: ClaimConditionInput,\n  ): Promise<TransactionResult> {\n    const existingConditions = await this.getAll(tokenId);\n    const newConditionInputs = updateExsitingClaimConditions(\n      index,\n      claimConditionInput,\n      existingConditions,\n    );\n    return await this.set(tokenId, newConditionInputs);\n  }\n}\n","import { DropERC1155 } from \"../../@custom-thirdweb-dev/contracts\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { BigNumber, BigNumberish } from \"ethers\";\n\n/**\n * Manages history for Edition Drop contracts\n * @public\n */\nexport class DropErc1155History {\n  private contractWrapper;\n\n  constructor(contractWrapper: ContractWrapper<DropERC1155>) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Get all claimer addresses\n   *\n   * @remarks Get a list of all the addresses that have claimed a token\n   * @param tokenId - the tokenId of the NFT to get the addresses of*\n   * @returns - A unique list of addresses that claimed the token\n   * @example\n   * ```javascript\n   * const tokenId = \"0\";\n   * const allClaimerAddresses = await contract.history.getAllClaimerAddresses(tokenId);\n   * ```\n   */\n  public async getAllClaimerAddresses(\n    tokenId: BigNumberish,\n  ): Promise<string[]> {\n    const a = await this.contractWrapper.readContract.queryFilter(\n      this.contractWrapper.readContract.filters.TokensClaimed(\n        null,\n        BigNumber.from(tokenId),\n      ),\n    );\n    return Array.from(new Set(a.map((b) => b.args.claimer)));\n  }\n}\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport { TokenERC20 } from \"../../@custom-thirdweb-dev/contracts\";\nimport { BigNumber, BigNumberish, ethers } from \"ethers\";\nimport { IStorage } from \"../interfaces\";\nimport { NetworkOrSignerOrProvider, TransactionResult } from \"../types\";\nimport { UpdateableNetwork } from \"../interfaces/contract\";\nimport { SDKOptions, SDKOptionsSchema } from \"../../schema/sdk-options\";\nimport { Amount, Currency, CurrencyValue } from \"../../types/currency\";\nimport {\n  fetchCurrencyMetadata,\n  fetchCurrencyValue,\n} from \"../../common/currency\";\nimport { TokenMintInput } from \"../../schema/tokens/token\";\nimport { getRoleHash } from \"../../common/role\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { PriceSchema } from \"../../schema\";\n\n/**\n * Standard ERC20 functions\n * @public\n */\nexport class Erc20<T extends TokenERC20> implements UpdateableNetwork {\n  protected contractWrapper: ContractWrapper<T>;\n  protected storage: IStorage;\n  protected options: SDKOptions;\n\n  constructor(\n    contractWrapper: ContractWrapper<T>,\n    storage: IStorage,\n    options: SDKOptions = {},\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    try {\n      this.options = SDKOptionsSchema.parse(options);\n    } catch (optionParseError) {\n      console.error(\n        \"invalid contract options object passed, falling back to default options\",\n        optionParseError,\n      );\n      this.options = SDKOptionsSchema.parse({});\n    }\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network: NetworkOrSignerOrProvider): void {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the token Metadata (name, symbol, etc...)\n   *\n   * @example\n   * ```javascript\n   * const token = await contract.get();\n   * console.log(token);\n   * ```\n   * @returns The token metadata\n   */\n  public async get(): Promise<Currency> {\n    return await fetchCurrencyMetadata(\n      this.contractWrapper.getProvider(),\n      this.getAddress(),\n    );\n  }\n\n  /**\n   * Get Token Balance for the currently connected wallet\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * const balance = await contract.balance();\n   * console.log(balance);\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   */\n  public async balance(): Promise<CurrencyValue> {\n    return await this.balanceOf(await this.contractWrapper.getSignerAddress());\n  }\n\n  /**\n   * Get Token Balance\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token balance\n   * const address = \"{{wallet_address}}\";\n   *\n   * const balance = await contract.balanceOf(address);\n   * console.log(balance);\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   */\n  public async balanceOf(address: string): Promise<CurrencyValue> {\n    return this.getValue(\n      await this.contractWrapper.readContract.balanceOf(address),\n    );\n  }\n\n  /**\n   * The total supply for this Token\n   */\n  public async totalSupply(): Promise<CurrencyValue> {\n    return await this.getValue(\n      await this.contractWrapper.readContract.totalSupply(),\n    );\n  }\n\n  /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of a 'spender' wallet over the connected wallet's funds - the allowance of a different address for a token is the amount of tokens that the `spender` wallet is allowed to spend on behalf of the connected wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token allowance\n   * const spenderAddress = \"0x...\";\n   *\n   * const allowance = await contract.allowanceOf(otherAddress);\n   * console.log(allowance);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   */\n  public async allowance(spender: string): Promise<CurrencyValue> {\n    return await this.allowanceOf(\n      await this.contractWrapper.getSignerAddress(),\n      spender,\n    );\n  }\n\n  /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of one wallet over another wallet's funds - the allowance of a different address for a token is the amount of tokens that the wallet is allowed to spend on behalf of the specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet who owns the funds\n   * const address = \"{{wallet_address}}\";\n   *\n   * // Address of the wallet to check token allowance\n   * const spenderAddress = \"0x...\";\n   *\n   * const allowance = await contract.allowanceOf(address, spenderAddress);\n   * console.log(allowance);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   */\n  public async allowanceOf(\n    owner: string,\n    spender: string,\n  ): Promise<CurrencyValue> {\n    return await this.getValue(\n      await this.contractWrapper.readContract.allowance(owner, spender),\n    );\n  }\n\n  /**\n   * Get whether users can transfer tokens from this contract\n   */\n  public async isTransferRestricted(): Promise<boolean> {\n    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole(\n      getRoleHash(\"transfer\"),\n      AddressZero,\n    );\n    return !anyoneCanTransfer;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Transfer Tokens\n   *\n   * @remarks Transfer tokens from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   *\n   * // The amount of tokens you want to send\n   * const amount = 0.1;\n   *\n   * await contract.transfer(toAddress, amount);\n   * ```\n   */\n  public async transfer(\n    to: string,\n    amount: Amount,\n  ): Promise<TransactionResult> {\n    const amountWithDecimals = ethers.utils.parseUnits(\n      PriceSchema.parse(amount),\n      await this.contractWrapper.readContract.decimals(),\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"transfer\", [\n        to,\n        amountWithDecimals,\n      ]),\n    };\n  }\n\n  /**\n   * Transfer Tokens From Address\n   *\n   * @remarks Transfer tokens from one wallet to another\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const fromAddress = \"{{wallet_address}}\";\n   *\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   *\n   * // The number of tokens you want to send\n   * const amount = 1.2\n   *\n   * // Note that the connected wallet must have approval to transfer the tokens of the fromAddress\n   * await contract.transferFrom(fromAddress, toAddress, amount);\n   * ```\n   */\n  public async transferFrom(\n    from: string,\n    to: string,\n    amount: Amount,\n  ): Promise<TransactionResult> {\n    const amountWithDecimals = ethers.utils.parseUnits(\n      PriceSchema.parse(amount),\n      await this.contractWrapper.readContract.decimals(),\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"transferFrom\", [\n        from,\n        to,\n        amountWithDecimals,\n      ]),\n    };\n  }\n\n  /**\n   * Allows the specified `spender` wallet to transfer the given `amount` of tokens to another wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to allow transfers from\n   * const spenderAddress = \"0x...\";\n   *\n   * // The number of tokens to give as allowance\n   * const amount = 100\n   *\n   * await contract.setAllowance(spenderAddress, amount);\n   * ```\n   */\n  public async setAllowance(\n    spender: string,\n    amount: Amount,\n  ): Promise<TransactionResult> {\n    const amountWithDecimals = ethers.utils.parseUnits(\n      PriceSchema.parse(amount),\n      await this.contractWrapper.readContract.decimals(),\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"approve\", [\n        spender,\n        amountWithDecimals,\n      ]),\n    };\n  }\n\n  /**\n   * Transfer Tokens To Many Wallets\n   *\n   * @remarks Mint tokens from the connected wallet to many wallets\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 100, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 100,\n   *  }\n   * ]\n   *\n   * await contract.transferBatch(data);\n   * ```\n   */\n  public async transferBatch(args: TokenMintInput[]) {\n    const decimals = await this.contractWrapper.readContract.decimals();\n    const encoded = args.map((arg) => {\n      const amountWithDecimals = ethers.utils.parseUnits(\n        PriceSchema.parse(arg.amount),\n        decimals,\n      );\n      return this.contractWrapper.readContract.interface.encodeFunctionData(\n        \"transfer\",\n        [arg.toAddress, amountWithDecimals],\n      );\n    });\n    await this.contractWrapper.multiCall(encoded);\n  }\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the connected wallet\n   *\n   * @example\n   * ```javascript\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.burn(amount);\n   * ```\n   */\n  public async burn(amount: Amount): Promise<TransactionResult> {\n    const amountWithDecimals = ethers.utils.parseUnits(\n      PriceSchema.parse(amount),\n      await this.contractWrapper.readContract.decimals(),\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"burn\", [\n        amountWithDecimals,\n      ]),\n    };\n  }\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the specified wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const holderAddress = \"{{wallet_address}}\";\n   *\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.burnFrom(holderAddress, amount);\n   * ```\n   */\n  public async burnFrom(\n    holder: string,\n    amount: Amount,\n  ): Promise<TransactionResult> {\n    const amountWithDecimals = ethers.utils.parseUnits(\n      PriceSchema.parse(amount),\n      await this.contractWrapper.readContract.decimals(),\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"burnFrom\", [\n        holder,\n        amountWithDecimals,\n      ]),\n    };\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * @internal\n   */\n  protected async getValue(value: BigNumberish): Promise<CurrencyValue> {\n    return await fetchCurrencyValue(\n      this.contractWrapper.getProvider(),\n      this.getAddress(),\n      BigNumber.from(value),\n    );\n  }\n}\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonPlatformFeeSchema,\n  CommonPrimarySaleSchema,\n  CommonRoyaltySchema,\n  CommonSymbolSchema,\n  CommonTrustedForwarderSchema,\n} from \"./common\";\nimport { MerkleSchema } from \"./common/snapshots\";\n\nexport const DropErc721ContractInput = CommonContractSchema.merge(\n  CommonRoyaltySchema,\n)\n  .merge(MerkleSchema)\n  .merge(CommonSymbolSchema);\n\nexport const DropErc721ContractOutput = CommonContractOutputSchema.merge(\n  CommonRoyaltySchema,\n)\n  .merge(MerkleSchema)\n  .merge(CommonSymbolSchema);\n\nexport const DropErc721ContractDeploy = DropErc721ContractInput.merge(\n  CommonPlatformFeeSchema,\n)\n  .merge(CommonPrimarySaleSchema)\n  .merge(CommonTrustedForwarderSchema);\n\nexport const DropErc721ContractSchema = {\n  deploy: DropErc721ContractDeploy,\n  output: DropErc721ContractOutput,\n  input: DropErc721ContractInput,\n};\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonPlatformFeeSchema,\n  CommonPrimarySaleSchema,\n  CommonRoyaltySchema,\n  CommonSymbolSchema,\n  CommonTrustedForwarderSchema,\n} from \"./common\";\nimport { MerkleSchema } from \"./common/snapshots\";\n\nexport const DropErc1155ContractInput = CommonContractSchema.merge(\n  CommonRoyaltySchema,\n)\n  .merge(MerkleSchema)\n  .merge(CommonSymbolSchema);\n\nexport const DropErc1155ContractOutput = CommonContractOutputSchema.merge(\n  CommonRoyaltySchema,\n)\n  .merge(MerkleSchema)\n  .merge(CommonSymbolSchema);\n\nexport const DropErc1155ContractDeploy = DropErc1155ContractInput.merge(\n  CommonPlatformFeeSchema,\n)\n  .merge(CommonPrimarySaleSchema)\n  .merge(CommonTrustedForwarderSchema);\n\nexport const DropErc1155ContractSchema = {\n  deploy: DropErc1155ContractDeploy,\n  output: DropErc1155ContractOutput,\n  input: DropErc1155ContractInput,\n};\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonPlatformFeeSchema,\n  CommonTrustedForwarderSchema,\n} from \"./common\";\n\nexport const MarketplaceContractInput = CommonContractSchema;\n\nexport const MarketplaceContractOutput = CommonContractOutputSchema;\n\nexport const MarketplaceContractDeploy = MarketplaceContractInput.merge(\n  CommonPlatformFeeSchema,\n).merge(CommonTrustedForwarderSchema);\n\nexport const MarketplaceContractSchema = {\n  deploy: MarketplaceContractDeploy,\n  output: MarketplaceContractOutput,\n  input: MarketplaceContractInput,\n};\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonPlatformFeeSchema,\n  CommonRoyaltySchema,\n  CommonSymbolSchema,\n  CommonTrustedForwarderSchema,\n} from \"./common\";\n\nexport const PacksContractInput =\n  CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\n\nexport const PacksContractOutput =\n  CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(\n    CommonSymbolSchema,\n  );\n\nexport const PacksContractDeploy = PacksContractInput.merge(\n  CommonPlatformFeeSchema,\n).merge(CommonTrustedForwarderSchema);\n\nexport const PacksContractSchema = {\n  deploy: PacksContractDeploy,\n  output: PacksContractOutput,\n  input: PacksContractInput,\n};\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonPlatformFeeSchema,\n  CommonTrustedForwarderSchema,\n} from \"./common\";\nimport { z } from \"zod\";\nimport { AddressSchema, BasisPointsSchema } from \"../shared\";\n\nconst SplitRecipientInputSchema = z.object({\n  address: AddressSchema,\n  sharesBps: BasisPointsSchema.gt(0, \"Shares must be greater than 0\"),\n});\n\nconst SplitRecipientOuputSchema = SplitRecipientInputSchema.extend({\n  address: AddressSchema,\n  sharesBps: BasisPointsSchema,\n});\n\nexport const SplitsContractInput = CommonContractSchema.extend({\n  recipients: z\n    .array(SplitRecipientInputSchema)\n    .default([])\n    .superRefine((val, context) => {\n      const addressMap: Record<string, boolean> = {};\n      let totalShares = 0;\n      for (let index = 0; index < val.length; index++) {\n        const entry = val[index];\n        if (addressMap[entry.address]) {\n          context.addIssue({\n            code: z.ZodIssueCode.custom,\n            message: `Duplicate address.`,\n            path: [index, `address`],\n          });\n        }\n        addressMap[entry.address] = true;\n        totalShares += entry.sharesBps;\n        if (totalShares > 10_000) {\n          context.addIssue({\n            code: z.ZodIssueCode.custom,\n            message: `Total shares cannot go over 100%.`,\n            path: [index, `sharesBps`],\n          });\n        }\n      }\n      if (totalShares !== 10_000) {\n        context.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: `Total shares need to add up to 100%. Total shares are currently ${\n            totalShares / 100\n          }%`,\n          path: [],\n        });\n      }\n    }),\n});\n\nexport const SplitsContractOutput = CommonContractOutputSchema.extend({\n  recipients: z.array(SplitRecipientOuputSchema),\n});\n\nexport const SplitsContractDeploy = SplitsContractInput.merge(\n  CommonPlatformFeeSchema,\n)\n  .merge(SplitsContractInput)\n  .merge(CommonTrustedForwarderSchema);\n\nexport const SplitsContractSchema = {\n  deploy: SplitsContractDeploy,\n  output: SplitsContractOutput,\n  input: SplitsContractInput,\n};\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonSymbolSchema,\n  CommonPlatformFeeSchema,\n  CommonPrimarySaleSchema,\n  CommonTrustedForwarderSchema,\n} from \"./common\";\n\nexport const TokenErc20ContractInput =\n  CommonContractSchema.merge(CommonSymbolSchema);\n\nexport const TokenErc20ContractOutput =\n  CommonContractOutputSchema.merge(CommonSymbolSchema);\n\nexport const TokenErc20ContractDeploy = TokenErc20ContractInput.merge(\n  CommonPlatformFeeSchema,\n)\n  .merge(CommonPrimarySaleSchema)\n  .merge(CommonTrustedForwarderSchema);\n\nexport const TokenErc20ContractSchema = {\n  deploy: TokenErc20ContractDeploy,\n  output: TokenErc20ContractOutput,\n  input: TokenErc20ContractInput,\n};\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonPlatformFeeSchema,\n  CommonPrimarySaleSchema,\n  CommonRoyaltySchema,\n  CommonSymbolSchema,\n  CommonTrustedForwarderSchema,\n} from \"./common\";\n\nexport const TokenErc721ContractInput =\n  CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\n\nexport const TokenErc721ContractOutput =\n  CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(\n    CommonSymbolSchema,\n  );\n\nexport const TokenErc721ContractDeploy = TokenErc721ContractInput.merge(\n  CommonPlatformFeeSchema,\n)\n  .merge(CommonPrimarySaleSchema)\n  .merge(CommonTrustedForwarderSchema);\n\nexport const TokenErc721ContractSchema = {\n  deploy: TokenErc721ContractDeploy,\n  output: TokenErc721ContractOutput,\n  input: TokenErc721ContractInput,\n};\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonPlatformFeeSchema,\n  CommonPrimarySaleSchema,\n  CommonRoyaltySchema,\n  CommonTrustedForwarderSchema,\n} from \"./common\";\n\nexport const TokenErc1155ContractInput =\n  CommonContractSchema.merge(CommonRoyaltySchema);\n\nexport const TokenErc1155ContractOutput =\n  CommonContractOutputSchema.merge(CommonRoyaltySchema);\n\nexport const TokenErc1155ContractDeploy = TokenErc1155ContractInput.merge(\n  CommonPlatformFeeSchema,\n)\n  .merge(CommonPrimarySaleSchema)\n  .merge(CommonTrustedForwarderSchema);\n\nexport const TokenErc1155ContractSchema = {\n  deploy: TokenErc1155ContractDeploy,\n  output: TokenErc1155ContractOutput,\n  input: TokenErc1155ContractInput,\n};\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonTrustedForwarderSchema,\n} from \"./common\";\nimport {\n  AddressSchema,\n  BigNumberishSchema,\n  BigNumberSchema,\n  PercentSchema,\n} from \"../shared\";\nimport { z } from \"zod\";\n\nexport const VoteSettingsInputSchema = z.object({\n  voting_delay_in_blocks: z.number().min(0).default(0),\n  voting_period_in_blocks: z.number().min(1).default(1),\n  voting_token_address: AddressSchema,\n  voting_quorum_fraction: PercentSchema.default(0),\n  proposal_token_threshold: BigNumberishSchema.default(1),\n});\n\nexport const VoteSettingsOuputSchema = VoteSettingsInputSchema.extend({\n  proposal_token_threshold: BigNumberSchema,\n});\n\nexport const VoteContractInput = CommonContractSchema.merge(\n  VoteSettingsInputSchema,\n);\n\nexport const VoteContractOutput = CommonContractOutputSchema.merge(\n  VoteSettingsOuputSchema,\n);\n\nexport const VoteContractDeploy = VoteContractInput.merge(\n  CommonTrustedForwarderSchema,\n);\n\nexport const VoteContractSchema = {\n  deploy: VoteContractDeploy,\n  output: VoteContractOutput,\n  input: VoteContractInput,\n};\n\nexport const ProposalOutputSchema = z.object({\n  proposalId: BigNumberSchema,\n  proposer: z.string(),\n  targets: z.array(z.string()),\n  values: z.array(BigNumberSchema),\n  signatures: z.array(z.string()),\n  calldatas: z.array(z.string()),\n  startBlock: BigNumberSchema,\n  endBlock: BigNumberSchema,\n  description: z.string(),\n});\n","import { z } from \"zod\";\nimport { BigNumberishSchema, BigNumberSchema } from \"../shared\";\nimport { CommonNFTInput, CommonNFTOutput, NFTInputOrUriSchema } from \"./common\";\n\n/**\n * @internal\n */\nexport const EditionMetadataOutputSchema = z.object({\n  supply: BigNumberSchema,\n  metadata: CommonNFTOutput,\n});\n\n/**\n * @internal\n */\nexport const EditionMetadataWithOwnerOutputSchema =\n  EditionMetadataOutputSchema.extend({\n    owner: z.string(),\n    quantityOwned: BigNumberSchema,\n  });\n\n/**\n * @internal\n */\nexport const EditionMetadataInputSchema = z.object({\n  supply: BigNumberishSchema,\n  metadata: CommonNFTInput,\n});\n\n/**\n * @internal\n */\nexport const EditionMetadataInputOrUriSchema = z.object({\n  supply: BigNumberishSchema,\n  metadata: NFTInputOrUriSchema,\n});\n\n/**\n * @public\n */\nexport type EditionMetadata = z.output<typeof EditionMetadataOutputSchema>;\n/**\n * @public\n */\nexport type EditionMetadataOwner = z.output<\n  typeof EditionMetadataWithOwnerOutputSchema\n>;\n/**\n * @public\n */\nexport type EditionMetadataInput = z.input<typeof EditionMetadataInputSchema>;\n\n/**\n * @public\n */\nexport type EditionMetadataOrUri = z.input<\n  typeof EditionMetadataInputOrUriSchema\n>;\n","import { z } from \"zod\";\nimport { AddressSchema, PriceSchema } from \"../shared\";\n\n/**\n * @internal\n */\nexport const TokenMintInputSchema = z.object({\n  toAddress: AddressSchema,\n  amount: PriceSchema,\n});\n\n/**\n * @public\n */\nexport type TokenMintInput = z.input<typeof TokenMintInputSchema>;\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport { BigNumber } from \"ethers\";\nimport { TokenERC20 } from \"../../@custom-thirdweb-dev/contracts\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { TokenHolderBalance } from \"../../types\";\nimport { fetchCurrencyValue } from \"../../common/currency\";\n\n/**\n * Manages history for Token contracts\n * @public\n */\nexport class TokenERC20History {\n  private contractWrapper;\n\n  constructor(contractWrapper: ContractWrapper<TokenERC20>) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Get all holder balances\n   *\n   * @remarks Lets you get all token holders and their corresponding balances\n   * @returns - A JSON object of all token holders and their corresponding balances\n   * @example\n   * ```javascript\n   * const allHolderBalances = await contract.history.getAllHolderBalances();\n   * ```\n   */\n  public async getAllHolderBalances(): Promise<TokenHolderBalance[]> {\n    const a = await this.contractWrapper.readContract.queryFilter(\n      this.contractWrapper.readContract.filters.Transfer(),\n    );\n    const txns = a.map((b) => b.args);\n    const balances: {\n      [key: string]: BigNumber;\n    } = {};\n    txns.forEach((item) => {\n      const from = item.from;\n      const to = item.to;\n      const amount = item.value;\n\n      if (!(from === AddressZero)) {\n        if (!(from in balances)) {\n          balances[from] = BigNumber.from(0);\n        }\n        balances[from] = balances[from].sub(amount);\n      }\n      if (!(to === AddressZero)) {\n        if (!(to in balances)) {\n          balances[to] = BigNumber.from(0);\n        }\n        balances[to] = balances[to].add(amount);\n      }\n    });\n    return Promise.all(\n      Object.keys(balances).map(async (addr) => ({\n        holder: addr,\n        balance: await fetchCurrencyValue(\n          this.contractWrapper.getProvider(),\n          this.contractWrapper.readContract.address,\n          balances[addr],\n        ),\n      })),\n    );\n  }\n}\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport { DropERC721, TokenERC721 } from \"../../@custom-thirdweb-dev/contracts\";\nimport { BigNumber, BigNumberish } from \"ethers\";\nimport { NFTMetadata, NFTMetadataOwner } from \"../../schema/tokens/common\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport {\n  DEFAULT_QUERY_ALL_COUNT,\n  QueryAllParams,\n} from \"../../types/QueryParams\";\nimport { IStorage } from \"../interfaces\";\nimport { NetworkOrSignerOrProvider, TransactionResult } from \"../types\";\nimport { UpdateableNetwork } from \"../interfaces/contract\";\nimport { SDKOptions, SDKOptionsSchema } from \"../../schema/sdk-options\";\nimport { fetchTokenMetadata } from \"../../common/nft\";\nimport { getRoleHash } from \"../../common/role\";\nimport { NotFoundError } from \"../../common\";\n\n/**\n * Standard ERC721 functions\n * @public\n */\nexport class Erc721<T extends DropERC721 | TokenERC721>\n  implements UpdateableNetwork\n{\n  protected contractWrapper: ContractWrapper<T>;\n  protected storage: IStorage;\n  protected options: SDKOptions;\n\n  constructor(\n    contractWrapper: ContractWrapper<T>,\n    storage: IStorage,\n    options: SDKOptions = {},\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    try {\n      this.options = SDKOptionsSchema.parse(options);\n    } catch (optionParseError) {\n      console.error(\n        \"invalid contract options object passed, falling back to default options\",\n        optionParseError,\n      );\n      this.options = SDKOptionsSchema.parse({});\n    }\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network: NetworkOrSignerOrProvider): void {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a single NFT Metadata\n   *\n   * @example\n   * ```javascript\n   * const nft = await contract.get(\"0\");\n   * console.log(nft);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  public async get(tokenId: BigNumberish): Promise<NFTMetadataOwner> {\n    const [owner, metadata] = await Promise.all([\n      this.ownerOf(tokenId).catch(() => AddressZero),\n      this.getTokenMetadata(tokenId),\n    ]);\n    return { owner, metadata };\n  }\n\n  /**\n   * Get All NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * console.log(nfts);\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  public async getAll(\n    queryParams?: QueryAllParams,\n  ): Promise<NFTMetadataOwner[]> {\n    const start = BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = BigNumber.from(\n      queryParams?.count || DEFAULT_QUERY_ALL_COUNT,\n    ).toNumber();\n    const maxId = Math.min(\n      (await this.getTotalCount()).toNumber(),\n      start + count,\n    );\n    return await Promise.all(\n      [...Array(maxId - start).keys()].map((i) =>\n        this.get((start + i).toString()),\n      ),\n    );\n  }\n\n  /**\n   * Get the number of NFTs minted\n   * @returns the total number of NFTs minted in this contract\n   * @public\n   */\n  public async getTotalCount(): Promise<BigNumber> {\n    return await this.contractWrapper.readContract.nextTokenIdToMint();\n  }\n\n  /**\n   * Get Owned NFTs\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * console.log(nfts);\n   * ```\n   *\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  public async getOwned(_address?: string): Promise<NFTMetadataOwner[]> {\n    const address = _address\n      ? _address\n      : await this.contractWrapper.getSignerAddress();\n    const balance = await this.contractWrapper.readContract.balanceOf(address);\n    const indices = Array.from(Array(balance.toNumber()).keys());\n    const tokenIds = await Promise.all(\n      indices.map((i) =>\n        this.contractWrapper.readContract.tokenOfOwnerByIndex(address, i),\n      ),\n    );\n    return await Promise.all(\n      tokenIds.map((tokenId) => this.get(tokenId.toString())),\n    );\n  }\n\n  /**\n   * Get the current owner of a given NFT within this Contract\n   *\n   * @param tokenId - the tokenId of the NFT\n   * @returns the address of the owner\n   */\n  public async ownerOf(tokenId: BigNumberish): Promise<string> {\n    return await this.contractWrapper.readContract.ownerOf(tokenId);\n  }\n\n  /**\n   * Get the total supply for this Contract.\n   *\n   * @returns the total supply\n   */\n  public async totalSupply(): Promise<BigNumber> {\n    return await this.contractWrapper.readContract.nextTokenIdToMint();\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check NFT balance\n   * const address = \"{{wallet_address}}\";\n   *\n   * const balance = await contract.balanceOf(address);\n   * console.log(balance);\n   * ```\n   */\n  public async balanceOf(address: string): Promise<BigNumber> {\n    return await this.contractWrapper.readContract.balanceOf(address);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  public async balance(): Promise<BigNumber> {\n    return await this.balanceOf(await this.contractWrapper.getSignerAddress());\n  }\n\n  /**\n   * Get whether users can transfer NFTs from this contract\n   */\n  public async isTransferRestricted(): Promise<boolean> {\n    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole(\n      getRoleHash(\"transfer\"),\n      AddressZero,\n    );\n    return !anyoneCanTransfer;\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  public async isApproved(address: string, operator: string): Promise<boolean> {\n    return await this.contractWrapper.readContract.isApprovedForAll(\n      address,\n      operator,\n    );\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Transfer a single NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the NFT to\n   * const toAddress = \"{{wallet_address}}\";\n   *\n   * // The token ID of the NFT you want to send\n   * const tokenId = \"0\";\n   *\n   * await contract.transfer(toAddress, tokenId);\n   * ```\n   */\n  public async transfer(\n    to: string,\n    tokenId: BigNumberish,\n  ): Promise<TransactionResult> {\n    const from = await this.contractWrapper.getSignerAddress();\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"safeTransferFrom(address,address,uint256)\",\n        [from, to, tokenId],\n      ),\n    };\n  }\n\n  /**\n   * Burn a single NFT\n   * @param tokenId - the token Id to burn\n   */\n  public async burn(tokenId: BigNumberish): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"burn\", [tokenId]),\n    };\n  }\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  public async setApprovalForAll(\n    operator: string,\n    approved: boolean,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"setApprovalForAll\", [\n        operator,\n        approved,\n      ]),\n    };\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * @internal\n   */\n  protected async getTokenMetadata(\n    tokenId: BigNumberish,\n  ): Promise<NFTMetadata> {\n    const tokenUri = await this.contractWrapper.readContract.tokenURI(tokenId);\n    if (!tokenUri) {\n      throw new NotFoundError();\n    }\n    return fetchTokenMetadata(tokenId, tokenUri, this.storage);\n  }\n}\n","import { BigNumberish } from \"ethers\";\n\n/**\n * @internal\n */\nexport const DEFAULT_QUERY_ALL_COUNT = 100;\n\n/**\n * Pagination Parameters\n * @public\n */\nexport interface QueryAllParams {\n  /**\n   * the index to start from (default: 0)\n   */\n  start?: BigNumberish;\n  /**\n   * how many items to return (default: 100)\n   */\n  count?: BigNumberish;\n}\n","import { BigNumber, BigNumberish } from \"ethers\";\nimport {\n  CommonNFTInput,\n  CommonNFTOutput,\n  NFTMetadata,\n  NFTMetadataInput,\n  NFTMetadataOrUri,\n} from \"../schema/tokens/common\";\nimport { IStorage } from \"../core\";\nimport { Provider } from \"@ethersproject/providers\";\nimport {\n  ERC165__factory,\n  TokenERC1155__factory,\n  TokenERC721__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { NotFoundError } from \"./error\";\nimport {\n  InterfaceId_IERC1155,\n  InterfaceId_IERC721,\n} from \"../constants/contract\";\n\n/**\n * fetches the token metadata\n * @param tokenId - the id (to get it back in the output)\n * @param tokenUri - the uri to fetch\n * @param storage - which storage to fetch from\n *\n * @internal\n */\nexport async function fetchTokenMetadata(\n  tokenId: BigNumberish,\n  tokenUri: string,\n  storage: IStorage,\n): Promise<NFTMetadata> {\n  const jsonMetadata = await storage.get(tokenUri);\n  return CommonNFTOutput.parse({\n    id: BigNumber.from(tokenId),\n    uri: tokenUri,\n    ...jsonMetadata,\n  });\n}\n\n// Used for marketplace to fetch NFT metadata from contract address + tokenId\n/**\n * @internal\n * @param contractAddress\n * @param provider\n * @param tokenId\n * @param storage\n */\nexport async function fetchTokenMetadataForContract(\n  contractAddress: string,\n  provider: Provider,\n  tokenId: BigNumberish,\n  storage: IStorage,\n) {\n  let uri: string | undefined;\n  const erc165 = ERC165__factory.connect(contractAddress, provider);\n  const isERC721 = await erc165.supportsInterface(InterfaceId_IERC721);\n  const isERC1155 = await erc165.supportsInterface(InterfaceId_IERC1155);\n  if (isERC721) {\n    const erc721 = TokenERC721__factory.connect(contractAddress, provider);\n    uri = await erc721.tokenURI(tokenId);\n  } else if (isERC1155) {\n    const erc1155 = TokenERC1155__factory.connect(contractAddress, provider);\n    uri = await erc1155.uri(tokenId);\n  } else {\n    throw Error(\"Contract must implement ERC 1155 or ERC 721.\");\n  }\n  if (!uri) {\n    throw new NotFoundError();\n  }\n  return fetchTokenMetadata(tokenId, uri, storage);\n}\n\n/**\n * @internal\n * @param metadata\n * @param storage\n */\nexport async function uploadOrExtractURI(\n  metadata: NFTMetadataOrUri,\n  storage: IStorage,\n): Promise<string> {\n  if (typeof metadata === \"string\") {\n    return metadata;\n  } else {\n    return await storage.uploadMetadata(CommonNFTInput.parse(metadata));\n  }\n}\n\n/**\n * @internal\n * @param metadatas\n * @param storage\n */\nexport async function uploadOrExtractURIs(\n  metadatas: NFTMetadataOrUri[],\n  storage: IStorage,\n): Promise<string[]> {\n  if (isUriList(metadatas)) {\n    return metadatas;\n  } else if (isMetadataList(metadatas)) {\n    const { metadataUris } = await storage.uploadMetadataBatch(\n      metadatas.map((m) => CommonNFTInput.parse(m)),\n    );\n    return metadataUris;\n  } else {\n    throw new Error(\n      \"NFT metadatas must all be of the same type (all URI or all NFTMetadataInput)\",\n    );\n  }\n}\n\nfunction isUriList(metadatas: NFTMetadataOrUri[]): metadatas is string[] {\n  return metadatas.find((m) => typeof m !== \"string\") === undefined;\n}\n\nfunction isMetadataList(\n  metadatas: NFTMetadataOrUri[],\n): metadatas is NFTMetadataInput[] {\n  return metadatas.find((m) => typeof m !== \"object\") === undefined;\n}\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport {\n  DropERC1155,\n  TokenERC1155,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { BigNumber, BigNumberish, BytesLike } from \"ethers\";\nimport { NFTMetadata } from \"../../schema/tokens/common\";\nimport { IStorage } from \"../interfaces\";\nimport { NetworkOrSignerOrProvider, TransactionResult } from \"../types\";\nimport { UpdateableNetwork } from \"../interfaces/contract\";\nimport { SDKOptions, SDKOptionsSchema } from \"../../schema/sdk-options\";\nimport {\n  EditionMetadata,\n  EditionMetadataOutputSchema,\n  EditionMetadataOwner,\n} from \"../../schema/tokens/edition\";\nimport { fetchTokenMetadata } from \"../../common/nft\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { getRoleHash } from \"../../common/role\";\nimport { NotFoundError } from \"../../common\";\nimport { DEFAULT_QUERY_ALL_COUNT, QueryAllParams } from \"../../types\";\n\n/**\n * Standard ERC1155 functions\n * @public\n */\nexport class Erc1155<T extends DropERC1155 | TokenERC1155>\n  implements UpdateableNetwork\n{\n  protected contractWrapper: ContractWrapper<T>;\n  protected storage: IStorage;\n  protected options: SDKOptions;\n\n  constructor(\n    contractWrapper: ContractWrapper<T>,\n    storage: IStorage,\n    options: SDKOptions = {},\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    try {\n      this.options = SDKOptionsSchema.parse(options);\n    } catch (optionParseError) {\n      console.error(\n        \"invalid contract options object passed, falling back to default options\",\n        optionParseError,\n      );\n      this.options = SDKOptionsSchema.parse({});\n    }\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network: NetworkOrSignerOrProvider): void {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a single NFT Metadata\n   *\n   * @example\n   * ```javascript\n   * const nft = await contract.get(\"0\");\n   * console.log(nft);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  public async get(tokenId: BigNumberish): Promise<EditionMetadata> {\n    const [supply, metadata] = await Promise.all([\n      this.contractWrapper.readContract\n        .totalSupply(tokenId)\n        .catch(() => BigNumber.from(0)),\n      this.getTokenMetadata(tokenId),\n    ]);\n    return EditionMetadataOutputSchema.parse({\n      supply,\n      metadata,\n    });\n  }\n\n  /**\n   * Get All NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * console.log(nfts);\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  public async getAll(\n    queryParams?: QueryAllParams,\n  ): Promise<EditionMetadata[]> {\n    const start = BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = BigNumber.from(\n      queryParams?.count || DEFAULT_QUERY_ALL_COUNT,\n    ).toNumber();\n    const maxId = Math.min(\n      (await this.getTotalCount()).toNumber(),\n      start + count,\n    );\n    return await Promise.all(\n      [...Array(maxId - start).keys()].map((i) =>\n        this.get((start + i).toString()),\n      ),\n    );\n  }\n\n  /**\n   * Get the number of NFTs minted\n   * @returns the total number of NFTs minted in this contract\n   * @public\n   */\n  public async getTotalCount(): Promise<BigNumber> {\n    return await this.contractWrapper.readContract.nextTokenIdToMint();\n  }\n\n  /**\n   * Get Owned NFTs\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * console.log(nfts);\n   * ```\n   *\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  public async getOwned(_address?: string): Promise<EditionMetadataOwner[]> {\n    const address = _address\n      ? _address\n      : await this.contractWrapper.getSignerAddress();\n    const maxId = await this.contractWrapper.readContract.nextTokenIdToMint();\n    const balances = await this.contractWrapper.readContract.balanceOfBatch(\n      Array(maxId.toNumber()).fill(address),\n      Array.from(Array(maxId.toNumber()).keys()),\n    );\n\n    const ownedBalances = balances\n      .map((b, i) => {\n        return {\n          tokenId: i,\n          balance: b,\n        };\n      })\n      .filter((b) => b.balance.gt(0));\n    return await Promise.all(\n      ownedBalances.map(async (b) => {\n        const editionMetadata = await this.get(b.tokenId.toString());\n        return {\n          ...editionMetadata,\n          owner: address,\n          quantityOwned: b.balance,\n        };\n      }),\n    );\n  }\n\n  /**\n   * Returns the total supply of a specific token\n   * @param tokenId - The token ID to get the total supply of\n   * @returns the total supply\n   */\n  public async totalSupply(tokenId: BigNumberish): Promise<BigNumber> {\n    return await this.contractWrapper.readContract.totalSupply(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check NFT balance\n   * const address = \"{{wallet_address}}\";\n   *\n   * const balance = await contract.balanceOf(address);\n   * console.log(balance);\n   * ```\n   */\n  public async balanceOf(\n    address: string,\n    tokenId: BigNumberish,\n  ): Promise<BigNumber> {\n    return await this.contractWrapper.readContract.balanceOf(address, tokenId);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  public async balance(tokenId: BigNumberish): Promise<BigNumber> {\n    return await this.balanceOf(\n      await this.contractWrapper.getSignerAddress(),\n      tokenId,\n    );\n  }\n\n  /**\n   * Get whether users can transfer NFTs from this contract\n   */\n  public async isTransferRestricted(): Promise<boolean> {\n    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole(\n      getRoleHash(\"transfer\"),\n      AddressZero,\n    );\n    return !anyoneCanTransfer;\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  public async isApproved(address: string, operator: string): Promise<boolean> {\n    return await this.contractWrapper.readContract.isApprovedForAll(\n      address,\n      operator,\n    );\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Transfer a single NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the NFT to\n   * const toAddress = \"{{wallet_address}}\";\n   *\n   * // The token ID of the NFT you want to send\n   * const tokenId = \"0\";\n   * // How many copies of the NFTs to transfer\n   * const amount = 3;\n   *\n   * await contract.transfer(toAddress, tokenId, amount);\n   * ```\n   */\n  public async transfer(\n    to: string,\n    tokenId: BigNumberish,\n    amount: BigNumberish,\n    data: BytesLike = [0],\n  ): Promise<TransactionResult> {\n    const from = await this.contractWrapper.getSignerAddress();\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"safeTransferFrom\", [\n        from,\n        to,\n        tokenId,\n        amount,\n        data,\n      ]),\n    };\n  }\n\n  /**\n   * Burn a single NFT\n   * @param tokenId - the token Id to burn\n   */\n  public async burn(\n    tokenId: BigNumberish,\n    amount: BigNumberish,\n  ): Promise<TransactionResult> {\n    const account = await this.contractWrapper.getSignerAddress();\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"burn\", [\n        account,\n        tokenId,\n        amount,\n      ]),\n    };\n  }\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  public async setApprovalForAll(\n    operator: string,\n    approved: boolean,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"setApprovalForAll\", [\n        operator,\n        approved,\n      ]),\n    };\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * @internal\n   * @param tokenId - the token Id to fetch\n   */\n  protected async getTokenMetadata(\n    tokenId: BigNumberish,\n  ): Promise<NFTMetadata> {\n    const tokenUri = await this.contractWrapper.readContract.uri(tokenId);\n    if (!tokenUri) {\n      throw new NotFoundError();\n    }\n    return fetchTokenMetadata(tokenId, tokenUri, this.storage);\n  }\n}\n","import { NFTMetadata, NFTMetadataInput } from \"../schema/tokens/common\";\nimport { BigNumber, BigNumberish } from \"ethers\";\n\nexport interface PackMetadata {\n  id: string;\n  creator: string;\n  currentSupply: BigNumber;\n  openStart: Date | null;\n  metadata: NFTMetadata;\n}\n\n/**\n * @public\n */\nexport interface PackNFTMetadata {\n  supply: BigNumber;\n  metadata: NFTMetadata;\n}\n\n/**\n * @public\n */\nexport interface PackMetadataWithBalance extends PackMetadata {\n  ownedByAddress: BigNumber;\n}\n\nexport enum UnderlyingType {\n  None = 0,\n  ERC20 = 1,\n  ERC721 = 2,\n}\n\n// TODO zodify\nexport interface IPackCreateArgs {\n  assetContract: string;\n  metadata: NFTMetadataInput;\n  assets: {\n    tokenId: BigNumberish;\n    amount: BigNumberish;\n  }[];\n  secondsUntilOpenStart?: BigNumberish;\n  rewardsPerOpen?: BigNumberish;\n}\n\n/**\n * @beta\n */\n// TODO zodify\nexport interface IPackBatchArgs {\n  tokenId: BigNumberish;\n  amount: BigNumberish;\n}\n","import {\n  FilledSignaturePayload20,\n  MintRequest20,\n  PayloadToSign20,\n  PayloadWithUri20,\n  Signature20PayloadInput,\n  Signature20PayloadOutput,\n  SignedPayload20,\n} from \"../../schema/contracts/common/signature\";\nimport { TransactionResult } from \"../types\";\nimport { normalizePriceValue, setErc20Allowance } from \"../../common/currency\";\nimport { BigNumber, ethers } from \"ethers\";\nimport invariant from \"tiny-invariant\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { ITokenERC20, TokenERC20 } from \"../../@custom-thirdweb-dev/contracts\";\nimport { ContractRoles } from \"./contract-roles\";\nimport { Token } from \"../../contracts\";\n\n/**\n * Enables generating ERC20 Tokens with rules and an associated signature, which can then be minted by anyone securely\n * @public\n */\nexport class Erc20SignatureMinting {\n  private contractWrapper: ContractWrapper<TokenERC20>;\n  private roles: ContractRoles<TokenERC20, typeof Token.contractRoles[number]>;\n\n  constructor(\n    contractWrapper: ContractWrapper<TokenERC20>,\n    roles: ContractRoles<TokenERC20, typeof Token.contractRoles[number]>,\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.roles = roles;\n  }\n\n  /**\n   * Mint tokens from a signature\n   *\n   * @remarks Mint a certain amount of tokens from a previously generated signature.\n   *\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   * @param signedPayload - the previously generated payload and signature with {@link Erc20SignatureMinting.generate}\n   */\n  public async mint(\n    signedPayload: SignedPayload20,\n  ): Promise<TransactionResult> {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const overrides = await this.contractWrapper.getCallOverrides();\n    await setErc20Allowance(\n      this.contractWrapper,\n      BigNumber.from(message.price),\n      mintRequest.currencyAddress,\n      overrides,\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"mintWithSignature\",\n        [message, signature],\n        overrides,\n      ),\n    };\n  }\n\n  /**\n   * Mint any number of generated tokens signatures at once\n   * @remarks Mint multiple token signatures in one transaction. Note that this is only possible for free mints (cannot batch mints with a price attached to it for security reasons)\n   * @param signedPayloads - the array of signed payloads to mint\n   */\n  public async mintBatch(\n    signedPayloads: SignedPayload20[],\n  ): Promise<TransactionResult> {\n    const contractPayloads = await Promise.all(\n      signedPayloads.map(async (s) => {\n        const message = await this.mapPayloadToContractStruct(s.payload);\n        const signature = s.signature;\n        const price = s.payload.price;\n        if (BigNumber.from(price).gt(0)) {\n          throw new Error(\n            \"Can only batch free mints. For mints with a price, use regular mint()\",\n          );\n        }\n        return {\n          message,\n          signature,\n        };\n      }),\n    );\n    const encoded = contractPayloads.map((p) => {\n      return this.contractWrapper.readContract.interface.encodeFunctionData(\n        \"mintWithSignature\",\n        [p.message, p.signature],\n      );\n    });\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded),\n    };\n  }\n\n  /**\n   * Verify that a payload is correctly signed\n   * @param signedPayload - the payload to verify\n   */\n  public async verify(signedPayload: SignedPayload20): Promise<boolean> {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const verification: [boolean, string] =\n      await this.contractWrapper.readContract.verify(message, signature);\n    return verification[0];\n  }\n\n  /**\n   * Generate a signature that can be used to mint a certain amount of tokens\n   *\n   * @remarks Takes in a quantity of tokens, some conditions for how it can be minted and signs it with your private key. The generated signature can then be used to mint those tokens using the exact payload and signature generated.\n   *\n   * @example\n   * ```javascript\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   quantity: 4.2, // The quantity of tokens to be minted\n   *   to: {{wallet_address}}, // Who will receive the tokens (or AddressZero for anyone)\n   *   price: 0.5, // the price to pay for minting those tokens\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: now, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now,\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this token mint\n   * };\n   *\n   * const signedPayload = contract.signature.generate(payload);\n   * // now anyone can use these to mint the NFT using `contract.signature.mint(signedPayload)`\n   * ```\n   * @param mintRequest - the payload to sign\n   * @returns the signed payload and the corresponding signature\n   */\n  public async generate(\n    mintRequest: PayloadToSign20,\n  ): Promise<SignedPayload20> {\n    return (await this.generateBatch([mintRequest]))[0];\n  }\n\n  /**\n   * Generate a batch of signatures that can be used to mint many token signatures.\n   *\n   * @remarks See {@link Erc20SignatureMinting.generate}\n   *\n   * @param payloadsToSign - the payloads to sign\n   * @returns an array of payloads and signatures\n   */\n  public async generateBatch(\n    payloadsToSign: PayloadToSign20[],\n  ): Promise<SignedPayload20[]> {\n    await this.roles.verify(\n      [\"minter\"],\n      await this.contractWrapper.getSignerAddress(),\n    );\n\n    const parsedRequests: FilledSignaturePayload20[] = payloadsToSign.map((m) =>\n      Signature20PayloadInput.parse(m),\n    );\n\n    const chainId = await this.contractWrapper.getChainID();\n    const signer = this.contractWrapper.getSigner();\n    invariant(signer, \"No signer available\");\n\n    // ERC20Permit (EIP-712) spec differs from signature mint 721, 1155.\n    const name = await this.contractWrapper.readContract.name();\n\n    return await Promise.all(\n      parsedRequests.map(async (m) => {\n        const finalPayload = Signature20PayloadOutput.parse(m);\n        const signature = await this.contractWrapper.signTypedData(\n          signer,\n          {\n            name,\n            version: \"1\",\n            chainId,\n            verifyingContract: this.contractWrapper.readContract.address,\n          },\n          { MintRequest: MintRequest20 },\n          await this.mapPayloadToContractStruct(finalPayload),\n        );\n        return {\n          payload: finalPayload,\n          signature: signature.toString(),\n        };\n      }),\n    );\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Maps a payload to the format expected by the contract\n   *\n   * @internal\n   *\n   * @param mintRequest - The payload to map.\n   * @returns - The mapped payload.\n   */\n  private async mapPayloadToContractStruct(\n    mintRequest: PayloadWithUri20,\n  ): Promise<ITokenERC20.MintRequestStructOutput> {\n    const normalizedPrice = await normalizePriceValue(\n      this.contractWrapper.getProvider(),\n      mintRequest.price,\n      mintRequest.currencyAddress,\n    );\n    const amountWithDecimals = ethers.utils.parseUnits(\n      mintRequest.quantity,\n      await this.contractWrapper.readContract.decimals(),\n    );\n    return {\n      to: mintRequest.to,\n      primarySaleRecipient: mintRequest.primarySaleRecipient,\n      quantity: amountWithDecimals,\n      price: normalizedPrice,\n      currency: mintRequest.currencyAddress,\n      validityStartTimestamp: mintRequest.mintStartTime,\n      validityEndTimestamp: mintRequest.mintEndTime,\n      uid: mintRequest.uid,\n    } as ITokenERC20.MintRequestStructOutput;\n  }\n}\n","import {\n  FilledSignaturePayload721,\n  MintRequest721,\n  PayloadToSign721,\n  PayloadWithUri721,\n  Signature721PayloadInput,\n  Signature721PayloadOutput,\n  SignedPayload721,\n} from \"../../schema/contracts/common/signature\";\nimport { TransactionResultWithId } from \"../types\";\nimport { normalizePriceValue, setErc20Allowance } from \"../../common/currency\";\nimport { BigNumber } from \"ethers\";\nimport invariant from \"tiny-invariant\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport {\n  ITokenERC721,\n  TokenERC721,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { IStorage } from \"../interfaces\";\nimport { ContractRoles } from \"./contract-roles\";\nimport { NFTCollection } from \"../../contracts\";\nimport { TokensMintedWithSignatureEvent } from \"../../@custom-thirdweb-dev/contracts/dist/TokenERC721\";\nimport { uploadOrExtractURIs } from \"../../common/nft\";\n\n/**\n * Enables generating dynamic ERC721 NFTs with rules and an associated signature, which can then be minted by anyone securely\n * @public\n */\nexport class Erc721SignatureMinting {\n  private contractWrapper: ContractWrapper<TokenERC721>;\n  private storage: IStorage;\n  private roles: ContractRoles<\n    TokenERC721,\n    typeof NFTCollection.contractRoles[number]\n  >;\n\n  constructor(\n    contractWrapper: ContractWrapper<TokenERC721>,\n    roles: ContractRoles<\n      TokenERC721,\n      typeof NFTCollection.contractRoles[number]\n    >,\n    storage: IStorage,\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.roles = roles;\n  }\n\n  /**\n   * Mint a dynamically generated NFT\n   *\n   * @remarks Mint a dynamic NFT with a previously generated signature.\n   *\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   * @param signedPayload - the previously generated payload and signature with {@link Erc721SignatureMinting.generate}\n   */\n  public async mint(\n    signedPayload: SignedPayload721,\n  ): Promise<TransactionResultWithId> {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const overrides = await this.contractWrapper.getCallOverrides();\n    await setErc20Allowance(\n      this.contractWrapper,\n      BigNumber.from(message.price),\n      mintRequest.currencyAddress,\n      overrides,\n    );\n    const receipt = await this.contractWrapper.sendTransaction(\n      \"mintWithSignature\",\n      [message, signature],\n      overrides,\n    );\n    const t = this.contractWrapper.parseLogs<TokensMintedWithSignatureEvent>(\n      \"TokensMintedWithSignature\",\n      receipt.logs,\n    );\n    if (t.length === 0) {\n      throw new Error(\"No MintWithSignature event found\");\n    }\n    const id = t[0].args.tokenIdMinted;\n    return {\n      id,\n      receipt,\n    };\n  }\n\n  /**\n   * Mint any number of dynamically generated NFT at once\n   * @remarks Mint multiple dynamic NFTs in one transaction. Note that this is only possible for free mints (cannot batch mints with a price attached to it for security reasons)\n   * @param signedPayloads - the array of signed payloads to mint\n   */\n  public async mintBatch(\n    signedPayloads: SignedPayload721[],\n  ): Promise<TransactionResultWithId[]> {\n    const contractPayloads = await Promise.all(\n      signedPayloads.map(async (s) => {\n        const message = await this.mapPayloadToContractStruct(s.payload);\n        const signature = s.signature;\n        const price = s.payload.price;\n        if (BigNumber.from(price).gt(0)) {\n          throw new Error(\n            \"Can only batch free mints. For mints with a price, use regular mint()\",\n          );\n        }\n        return {\n          message,\n          signature,\n        };\n      }),\n    );\n    const encoded = contractPayloads.map((p) => {\n      return this.contractWrapper.readContract.interface.encodeFunctionData(\n        \"mintWithSignature\",\n        [p.message, p.signature],\n      );\n    });\n    const receipt = await this.contractWrapper.multiCall(encoded);\n    const events =\n      this.contractWrapper.parseLogs<TokensMintedWithSignatureEvent>(\n        \"TokensMintedWithSignature\",\n        receipt.logs,\n      );\n    if (events.length === 0) {\n      throw new Error(\"No MintWithSignature event found\");\n    }\n    return events.map((log) => ({\n      id: log.args.tokenIdMinted,\n      receipt,\n    }));\n  }\n\n  /**\n   * Verify that a payload is correctly signed\n   * @param signedPayload - the payload to verify\n   */\n  public async verify(signedPayload: SignedPayload721): Promise<boolean> {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const verification: [boolean, string] =\n      await this.contractWrapper.readContract.verify(message, signature);\n    return verification[0];\n  }\n\n  /**\n   * Generate a signature that can be used to mint a dynamic NFT\n   *\n   * @remarks Takes in an NFT and some information about how it can be minted, uploads the metadata and signs it with your private key. The generated signature can then be used to mint an NFT using the exact payload and signature generated.\n   *\n   * @example\n   * ```javascript\n   * const nftMetadata = {\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   metadata: nftMetadata, // The NFT to mint\n   *   to: {{wallet_address}}, // Who will receive the NFT (or AddressZero for anyone)\n   *   price: 0.5, // the price to pay for minting\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: now, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now,\n   *   royaltyRecipient: \"0x...\", // custom royalty recipient for this NFT\n   *   royaltyBps: 100, // custom royalty fees for this NFT (in bps)\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this NFT\n   * };\n   *\n   * const signedPayload = contract.signature.generate(payload);\n   * // now anyone can use these to mint the NFT using `contract.signature.mint(signedPayload)`\n   * ```\n   * @param mintRequest - the payload to sign\n   * @returns the signed payload and the corresponding signature\n   */\n  public async generate(\n    mintRequest: PayloadToSign721,\n  ): Promise<SignedPayload721> {\n    return (await this.generateBatch([mintRequest]))[0];\n  }\n\n  /**\n   * Genrate a batch of signatures that can be used to mint many dynamic NFTs.\n   *\n   * @remarks See {@link Erc721SignatureMinting.generate}\n   *\n   * @param payloadsToSign - the payloads to sign\n   * @returns an array of payloads and signatures\n   */\n  public async generateBatch(\n    payloadsToSign: PayloadToSign721[],\n  ): Promise<SignedPayload721[]> {\n    await this.roles.verify(\n      [\"minter\"],\n      await this.contractWrapper.getSignerAddress(),\n    );\n\n    const parsedRequests: FilledSignaturePayload721[] = payloadsToSign.map(\n      (m) => Signature721PayloadInput.parse(m),\n    );\n\n    const metadatas = parsedRequests.map((r) => r.metadata);\n    const uris = await uploadOrExtractURIs(metadatas, this.storage);\n\n    const chainId = await this.contractWrapper.getChainID();\n    const signer = this.contractWrapper.getSigner();\n    invariant(signer, \"No signer available\");\n\n    return await Promise.all(\n      parsedRequests.map(async (m, i) => {\n        const uri = uris[i];\n        const finalPayload = Signature721PayloadOutput.parse({\n          ...m,\n          uri,\n        });\n        const signature = await this.contractWrapper.signTypedData(\n          signer,\n          {\n            name: \"TokenERC721\",\n            version: \"1\",\n            chainId,\n            verifyingContract: this.contractWrapper.readContract.address,\n          },\n          { MintRequest: MintRequest721 },\n          await this.mapPayloadToContractStruct(finalPayload),\n        );\n        return {\n          payload: finalPayload,\n          signature: signature.toString(),\n        };\n      }),\n    );\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Maps a payload to the format expected by the contract\n   *\n   * @internal\n   *\n   * @param mintRequest - The payload to map.\n   * @returns - The mapped payload.\n   */\n  private async mapPayloadToContractStruct(\n    mintRequest: PayloadWithUri721,\n  ): Promise<ITokenERC721.MintRequestStructOutput> {\n    const normalizedPricePerToken = await normalizePriceValue(\n      this.contractWrapper.getProvider(),\n      mintRequest.price,\n      mintRequest.currencyAddress,\n    );\n    return {\n      to: mintRequest.to,\n      price: normalizedPricePerToken,\n      uri: mintRequest.uri,\n      currency: mintRequest.currencyAddress,\n      validityEndTimestamp: mintRequest.mintEndTime,\n      validityStartTimestamp: mintRequest.mintStartTime,\n      uid: mintRequest.uid,\n      royaltyRecipient: mintRequest.royaltyRecipient,\n      royaltyBps: mintRequest.royaltyBps,\n      primarySaleRecipient: mintRequest.primarySaleRecipient,\n    } as ITokenERC721.MintRequestStructOutput;\n  }\n}\n","import {\n  FilledSignaturePayload1155,\n  MintRequest1155,\n  PayloadToSign1155,\n  PayloadWithUri1155,\n  Signature1155PayloadInput,\n  Signature1155PayloadOutput,\n  SignedPayload1155,\n} from \"../../schema/contracts/common/signature\";\nimport { TransactionResultWithId } from \"../types\";\nimport { normalizePriceValue, setErc20Allowance } from \"../../common/currency\";\nimport invariant from \"tiny-invariant\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport {\n  ITokenERC1155,\n  TokenERC1155,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { IStorage } from \"../interfaces\";\nimport { ContractRoles } from \"./contract-roles\";\nimport { NFTCollection } from \"../../contracts\";\nimport { TokensMintedWithSignatureEvent } from \"../../@custom-thirdweb-dev/contracts/dist/TokenERC1155\";\nimport { BigNumber } from \"ethers\";\nimport { uploadOrExtractURIs } from \"../../common/nft\";\n\n/**\n * Enables generating dynamic ERC1155 NFTs with rules and an associated signature, which can then be minted by anyone securely\n * @public\n */\nexport class Erc1155SignatureMinting {\n  private contractWrapper: ContractWrapper<TokenERC1155>;\n  private storage: IStorage;\n  private roles: ContractRoles<\n    TokenERC1155,\n    typeof NFTCollection.contractRoles[number]\n  >;\n\n  constructor(\n    contractWrapper: ContractWrapper<TokenERC1155>,\n    roles: ContractRoles<\n      TokenERC1155,\n      typeof NFTCollection.contractRoles[number]\n    >,\n    storage: IStorage,\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.roles = roles;\n  }\n\n  /**\n   * Mint a dynamically generated NFT\n   *\n   * @remarks Mint a dynamic NFT with a previously generated signature.\n   *\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   * @param signedPayload - the previously generated payload and signature with {@link Erc721SignatureMinting.generate}\n   */\n  public async mint(\n    signedPayload: SignedPayload1155,\n  ): Promise<TransactionResultWithId> {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const overrides = await this.contractWrapper.getCallOverrides();\n    await setErc20Allowance(\n      this.contractWrapper,\n      message.pricePerToken.mul(message.quantity),\n      mintRequest.currencyAddress,\n      overrides,\n    );\n    const receipt = await this.contractWrapper.sendTransaction(\n      \"mintWithSignature\",\n      [message, signature],\n      overrides,\n    );\n    const t = this.contractWrapper.parseLogs<TokensMintedWithSignatureEvent>(\n      \"TokensMintedWithSignature\",\n      receipt.logs,\n    );\n    if (t.length === 0) {\n      throw new Error(\"No MintWithSignature event found\");\n    }\n    const id = t[0].args.tokenIdMinted;\n    return {\n      id,\n      receipt,\n    };\n  }\n\n  /**\n   * Mint any number of dynamically generated NFT at once\n   * @remarks Mint multiple dynamic NFTs in one transaction. Note that this is only possible for free mints (cannot batch mints with a price attached to it for security reasons)\n   * @param signedPayloads - the array of signed payloads to mint\n   */\n  public async mintBatch(\n    signedPayloads: SignedPayload1155[],\n  ): Promise<TransactionResultWithId[]> {\n    const contractPayloads = await Promise.all(\n      signedPayloads.map(async (s) => {\n        const message = await this.mapPayloadToContractStruct(s.payload);\n        const signature = s.signature;\n        const price = s.payload.price;\n        if (BigNumber.from(price).gt(0)) {\n          throw new Error(\n            \"Can only batch free mints. For mints with a price, use regular mint()\",\n          );\n        }\n        return {\n          message,\n          signature,\n        };\n      }),\n    );\n    const encoded = contractPayloads.map((p) => {\n      return this.contractWrapper.readContract.interface.encodeFunctionData(\n        \"mintWithSignature\",\n        [p.message, p.signature],\n      );\n    });\n    const receipt = await this.contractWrapper.multiCall(encoded);\n    const events =\n      this.contractWrapper.parseLogs<TokensMintedWithSignatureEvent>(\n        \"TokensMintedWithSignature\",\n        receipt.logs,\n      );\n    if (events.length === 0) {\n      throw new Error(\"No MintWithSignature event found\");\n    }\n    return events.map((log) => ({\n      id: log.args.tokenIdMinted,\n      receipt,\n    }));\n  }\n\n  /**\n   * Verify that a payload is correctly signed\n   * @param signedPayload - the payload to verify\n   */\n  public async verify(signedPayload: SignedPayload1155): Promise<boolean> {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const verification: [boolean, string] =\n      await this.contractWrapper.readContract.verify(message, signature);\n    return verification[0];\n  }\n\n  /**\n   * Generate a signature that can be used to mint a dynamic NFT\n   *\n   * @remarks Takes in an NFT and some information about how it can be minted, uploads the metadata and signs it with your private key. The generated signature can then be used to mint an NFT using the exact payload and signature generated.\n   *\n   * @example\n   * ```javascript\n   * const nftMetadata = {\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   metadata: nftMetadata, // The NFT to mint\n   *   to: {{wallet_address}}, // Who will receive the NFT (or AddressZero for anyone)\n   *   quantity: 2, // the quantity of NFTs to mint\n   *   price: 0.5, // the price per NFT\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: now, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now\n   *   royaltyRecipient: \"0x...\", // custom royalty recipient for this NFT\n   *   royaltyBps: 100, // custom royalty fees for this NFT (in bps)\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this NFT\n   * };\n   *\n   * const signedPayload = contract.signature.generate(payload);\n   * // now anyone can use these to mint the NFT using `contract.signature.mint(signedPayload)`\n   * ```\n   * @param mintRequest - the payload to sign\n   * @returns the signed payload and the corresponding signature\n   */\n  public async generate(\n    mintRequest: PayloadToSign1155,\n  ): Promise<SignedPayload1155> {\n    return (await this.generateBatch([mintRequest]))[0];\n  }\n\n  /**\n   * Genrate a batch of signatures that can be used to mint many dynamic NFTs.\n   *\n   * @remarks See {@link Erc721SignatureMinting.generate}\n   *\n   * @param payloadsToSign - the payloads to sign\n   * @returns an array of payloads and signatures\n   */\n  public async generateBatch(\n    payloadsToSign: PayloadToSign1155[],\n  ): Promise<SignedPayload1155[]> {\n    await this.roles.verify(\n      [\"minter\"],\n      await this.contractWrapper.getSignerAddress(),\n    );\n\n    const parsedRequests: FilledSignaturePayload1155[] = payloadsToSign.map(\n      (m) => Signature1155PayloadInput.parse(m),\n    );\n\n    const metadatas = parsedRequests.map((r) => r.metadata);\n    const uris = await uploadOrExtractURIs(metadatas, this.storage);\n\n    const chainId = await this.contractWrapper.getChainID();\n    const signer = this.contractWrapper.getSigner();\n    invariant(signer, \"No signer available\");\n\n    return await Promise.all(\n      parsedRequests.map(async (m, i) => {\n        const uri = uris[i];\n        const finalPayload = Signature1155PayloadOutput.parse({\n          ...m,\n          uri,\n        });\n        const signature = await this.contractWrapper.signTypedData(\n          signer,\n          {\n            name: \"TokenERC1155\",\n            version: \"1\",\n            chainId,\n            verifyingContract: this.contractWrapper.readContract.address,\n          },\n          { MintRequest: MintRequest1155 }, // TYPEHASH\n          await this.mapPayloadToContractStruct(finalPayload),\n        );\n        return {\n          payload: finalPayload,\n          signature: signature.toString(),\n        };\n      }),\n    );\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Maps a payload to the format expected by the contract\n   *\n   * @internal\n   *\n   * @param mintRequest - The payload to map.\n   * @returns - The mapped payload.\n   */\n  private async mapPayloadToContractStruct(\n    mintRequest: PayloadWithUri1155,\n  ): Promise<ITokenERC1155.MintRequestStructOutput> {\n    const normalizedPricePerToken = await normalizePriceValue(\n      this.contractWrapper.getProvider(),\n      mintRequest.price,\n      mintRequest.currencyAddress,\n    );\n    return {\n      to: mintRequest.to,\n      tokenId: mintRequest.tokenId,\n      uri: mintRequest.uri,\n      quantity: mintRequest.quantity,\n      pricePerToken: normalizedPricePerToken,\n      currency: mintRequest.currencyAddress,\n      validityStartTimestamp: mintRequest.mintStartTime,\n      validityEndTimestamp: mintRequest.mintEndTime,\n      uid: mintRequest.uid,\n      royaltyRecipient: mintRequest.royaltyRecipient,\n      royaltyBps: mintRequest.royaltyBps,\n      primarySaleRecipient: mintRequest.primarySaleRecipient,\n    } as ITokenERC1155.MintRequestStructOutput;\n  }\n}\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport {\n  ERC165__factory,\n  IERC1155__factory,\n  IERC721__factory,\n  IMarketplace,\n  Marketplace,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { BigNumber, BigNumberish } from \"ethers\";\nimport {\n  DirectListing,\n  NewDirectListing,\n  Offer,\n} from \"../../types/marketplace\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { ListingNotFoundError, WrongListingTypeError } from \"../../common\";\nimport { ListingType } from \"../../enums\";\nimport { TransactionResult, TransactionResultWithId } from \"../types\";\nimport {\n  fetchCurrencyValue,\n  isNativeToken,\n  normalizePriceValue,\n  setErc20Allowance,\n} from \"../../common/currency\";\nimport { Price } from \"../../types/currency\";\nimport { fetchTokenMetadataForContract } from \"../../common/nft\";\nimport {\n  InterfaceId_IERC1155,\n  InterfaceId_IERC721,\n} from \"../../constants/contract\";\nimport {\n  handleTokenApproval,\n  isTokenApprovedForMarketplace,\n  mapOffer,\n  validateNewListingParam,\n} from \"../../common/marketplace\";\nimport { IStorage } from \"../interfaces\";\nimport invariant from \"tiny-invariant\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { ListingAddedEvent } from \"../../@custom-thirdweb-dev/contracts/dist/Marketplace\";\n\n/**\n * Handles direct listings\n * @public\n */\nexport class MarketplaceDirect {\n  private contractWrapper: ContractWrapper<Marketplace>;\n  private storage: IStorage;\n\n  constructor(\n    contractWrapper: ContractWrapper<Marketplace>,\n    storage: IStorage,\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a direct listing by id\n   *\n   * @param listingId - the listing id\n   * @returns the Direct listing object\n   */\n  public async getListing(listingId: BigNumberish): Promise<DirectListing> {\n    const listing = await this.contractWrapper.readContract.listings(listingId);\n\n    if (listing.assetContract === AddressZero) {\n      throw new ListingNotFoundError(this.getAddress(), listingId.toString());\n    }\n\n    if (listing.listingType !== ListingType.Direct) {\n      throw new WrongListingTypeError(\n        this.getAddress(),\n        listingId.toString(),\n        \"Auction\",\n        \"Direct\",\n      );\n    }\n\n    return await this.mapListing(listing);\n  }\n\n  /**\n   * Get the active offer on a listing\n   * @param listingId - the listing id\n   * @param address - the address that made the offer\n   */\n  public async getActiveOffer(\n    listingId: BigNumberish,\n    address: string,\n  ): Promise<Offer | undefined> {\n    await this.validateListing(BigNumber.from(listingId));\n    invariant(isAddress(address), \"Address must be a valid address\");\n    const offers = await this.contractWrapper.readContract.offers(\n      listingId,\n      address,\n    );\n    if (offers.offeror === AddressZero) {\n      return undefined;\n    }\n    return await mapOffer(\n      this.contractWrapper.getProvider(),\n      BigNumber.from(listingId),\n      offers,\n    );\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create Direct Listing\n   *\n   * @remarks Create a new listing on the marketplace where people can buy an asset directly.\n   *\n   * @example\n   * ```javascript\n   * // Data of the listing you want to create\n   * const listing = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *   // in how many seconds will the listing open up\n   *   startTimeInSeconds: 0,\n   *   // how long the listing will be open for\n   *   listingDurationInSeconds: 86400,\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // how much the asset will be sold for\n   *   buyoutPricePerToken: \"1.5\",\n   * }\n   *\n   * const tx = await contract.direct.createListing(listing);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created listing\n   * ```\n   */\n  public async createListing(\n    listing: NewDirectListing,\n  ): Promise<TransactionResultWithId> {\n    validateNewListingParam(listing);\n\n    await handleTokenApproval(\n      this.contractWrapper.getSignerOrProvider(),\n      this.getAddress(),\n      listing.assetContractAddress,\n      listing.tokenId,\n      await this.contractWrapper.getSignerAddress(),\n    );\n\n    const normalizedPricePerToken = await normalizePriceValue(\n      this.contractWrapper.getProvider(),\n      listing.buyoutPricePerToken,\n      listing.currencyContractAddress,\n    );\n\n    const receipt = await this.contractWrapper.sendTransaction(\n      \"createListing\",\n      [\n        {\n          assetContract: listing.assetContractAddress,\n          tokenId: listing.tokenId,\n          buyoutPricePerToken: normalizedPricePerToken,\n          currencyToAccept: listing.currencyContractAddress,\n          listingType: ListingType.Direct,\n          quantityToList: listing.quantity,\n          reservePricePerToken: normalizedPricePerToken,\n          secondsUntilEndTime: listing.listingDurationInSeconds,\n          startTime: listing.startTimeInSeconds,\n        } as IMarketplace.ListingParametersStruct,\n      ],\n    );\n\n    const event = this.contractWrapper.parseLogs<ListingAddedEvent>(\n      \"ListingAdded\",\n      receipt?.logs,\n    );\n    return {\n      id: event[0].args.listingId,\n      receipt,\n    };\n  }\n\n  /**\n   * Make an offer for a Direct Listing\n   *\n   */\n  public async makeOffer(\n    listingId: BigNumberish,\n    quantityDesired: BigNumberish,\n    currencyContractAddress: string,\n    pricePerToken: Price,\n  ): Promise<TransactionResult> {\n    if (isNativeToken(currencyContractAddress)) {\n      throw new Error(\n        \"You must use the wrapped native token address when making an offer with a native token\",\n      );\n    }\n\n    const normalizedPrice = await normalizePriceValue(\n      this.contractWrapper.getProvider(),\n      pricePerToken,\n      currencyContractAddress,\n    );\n\n    try {\n      await this.getListing(listingId);\n    } catch (err) {\n      console.error(\"Failed to get listing, err =\", err);\n      throw new Error(`Error getting the listing with id ${listingId}`);\n    }\n\n    const quantity = BigNumber.from(quantityDesired);\n    const value = BigNumber.from(normalizedPrice).mul(quantity);\n    const overrides = (await this.contractWrapper.getCallOverrides()) || {};\n    await setErc20Allowance(\n      this.contractWrapper,\n      value,\n      currencyContractAddress,\n      overrides,\n    );\n\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"offer\",\n        [listingId, quantityDesired, currencyContractAddress, normalizedPrice],\n        overrides,\n      ),\n    };\n  }\n\n  public async acceptOffer(\n    listingId: BigNumberish,\n    addressOfOfferor: string,\n  ): Promise<TransactionResult> {\n    /**\n     * TODO:\n     * - Provide better error handling if offer is too low.\n     */\n    await this.validateListing(BigNumber.from(listingId));\n    const offer = await this.contractWrapper.readContract.offers(\n      listingId,\n      addressOfOfferor,\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"acceptOffer\", [\n        listingId,\n        addressOfOfferor,\n        offer.currency,\n        offer.pricePerToken,\n      ]),\n    };\n  }\n\n  /**\n   * Buy a Listing\n   *\n   * @remarks Buy a specific direct listing from the marketplace.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the asset you want to buy\n   * const listingId = 0;\n   * // Quantity of the asset you want to buy\n   * const quantityDesired = 1;\n   *\n   * await contract.direct.buyoutListing(listingId, quantityDesired);\n   * ```\n   *\n   * @param listingId - The listing id to buy\n   * @param quantityDesired - the quantity to buy\n   * @param receiver - optional receiver of the bought listing if different from the connected wallet\n   */\n  public async buyoutListing(\n    listingId: BigNumberish,\n    quantityDesired: BigNumberish,\n    receiver?: string,\n  ): Promise<TransactionResult> {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    const valid = await this.isStillValidListing(listing, quantityDesired);\n    if (!valid) {\n      throw new Error(\n        \"The asset on this listing has been moved from the lister's wallet, this listing is now invalid\",\n      );\n    }\n    const buyFor = receiver\n      ? receiver\n      : await this.contractWrapper.getSignerAddress();\n    const quantity = BigNumber.from(quantityDesired);\n    const value = BigNumber.from(listing.buyoutPrice).mul(quantity);\n    const overrides = (await this.contractWrapper.getCallOverrides()) || {};\n    console.log(\"this.contractWrapper: \", this.contractWrapper);\n    await setErc20Allowance(\n      this.contractWrapper,\n      value,\n      listing.currencyContractAddress,\n      overrides,\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"buy\",\n        [listingId, buyFor, quantity, listing.currencyContractAddress, value],\n        overrides,\n      ),\n    };\n  }\n\n  /**\n   * Update a Direct listing with new metadata.\n   *\n   * Note: cannot update a listing with a new quantity of 0. Use `cancelDirectListing` to remove a listing instead.\n   *\n   * @param listing - the new listing information\n   */\n  public async updateListing(\n    listing: DirectListing,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"updateListing\", [\n        listing.id,\n        listing.quantity,\n        listing.buyoutPrice, // reserve price, doesn't matter for direct listing\n        listing.buyoutPrice,\n        listing.currencyContractAddress,\n        listing.startTimeInSeconds,\n        listing.secondsUntilEnd,\n      ]),\n    };\n  }\n\n  /**\n   * Cancel Direct Listing\n   *\n   * @remarks Cancel a direct listing on the marketplace\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the direct listing you want to cancel\n   * const listingId = \"0\";\n   *\n   * await contract.direct.cancelListing(listingId);\n   * ```\n   */\n  public async cancelListing(\n    listingId: BigNumberish,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"cancelDirectListing\",\n        [listingId],\n      ),\n    };\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Throws error if listing could not be found\n   *\n   * @param listingId - Listing to check for\n   */\n  private async validateListing(listingId: BigNumber): Promise<DirectListing> {\n    try {\n      return await this.getListing(listingId);\n    } catch (err) {\n      console.error(`Error getting the listing with id ${listingId}`);\n      throw err;\n    }\n  }\n\n  /**\n   * Helper method maps the auction listing to the direct listing interface.\n   *\n   * @internal\n   * @param listing - The listing to map, as returned from the contract.\n   * @returns - The mapped interface.\n   */\n  public async mapListing(\n    listing: IMarketplace.ListingStruct,\n  ): Promise<DirectListing> {\n    return {\n      assetContractAddress: listing.assetContract,\n      buyoutPrice: BigNumber.from(listing.buyoutPricePerToken),\n      currencyContractAddress: listing.currency,\n      buyoutCurrencyValuePerToken: await fetchCurrencyValue(\n        this.contractWrapper.getProvider(),\n        listing.currency,\n        listing.buyoutPricePerToken,\n      ),\n      id: listing.listingId.toString(),\n      tokenId: listing.tokenId,\n      quantity: listing.quantity,\n      startTimeInSeconds: listing.startTime,\n      asset: await fetchTokenMetadataForContract(\n        listing.assetContract,\n        this.contractWrapper.getProvider(),\n        listing.tokenId,\n        this.storage,\n      ),\n      secondsUntilEnd: listing.endTime,\n      sellerAddress: listing.tokenOwner,\n      type: ListingType.Direct,\n    };\n  }\n\n  /**\n   * Use this method to check if a direct listing is still valid.\n   *\n   * Ways a direct listing can become invalid:\n   * 1. The asset holder transferred the asset to another wallet\n   * 2. The asset holder burned the asset\n   * 3. The asset holder removed the approval on the marketplace\n   *\n   * @internal\n   * @param listing - The listing to check.\n   * @returns - True if the listing is valid, false otherwise.\n   */\n  public async isStillValidListing(\n    listing: DirectListing,\n    quantity?: BigNumberish,\n  ): Promise<boolean> {\n    const approved = await isTokenApprovedForMarketplace(\n      this.contractWrapper.getProvider(),\n      this.getAddress(),\n      listing.assetContractAddress,\n      listing.tokenId,\n      listing.sellerAddress,\n    );\n\n    if (!approved) {\n      return false;\n    }\n\n    const provider = this.contractWrapper.getProvider();\n    const erc165 = ERC165__factory.connect(\n      listing.assetContractAddress,\n      provider,\n    );\n    const isERC721 = await erc165.supportsInterface(InterfaceId_IERC721);\n    const isERC1155 = await erc165.supportsInterface(InterfaceId_IERC1155);\n    if (isERC721) {\n      const asset = IERC721__factory.connect(\n        listing.assetContractAddress,\n        provider,\n      );\n      return (\n        (await asset.ownerOf(listing.tokenId)).toLowerCase() ===\n        listing.sellerAddress.toLowerCase()\n      );\n    } else if (isERC1155) {\n      const asset = IERC1155__factory.connect(\n        listing.assetContractAddress,\n        provider,\n      );\n      const balance = await asset.balanceOf(\n        listing.sellerAddress,\n        listing.tokenId,\n      );\n      return balance.gte(quantity || listing.quantity);\n    } else {\n      console.error(\"Contract does not implement ERC 1155 or ERC 721.\");\n      return false;\n    }\n  }\n}\n","import { BigNumber, BigNumberish } from \"ethers\";\nimport {\n  ERC165__factory,\n  IERC1155,\n  IERC1155__factory,\n  IERC721,\n  IERC721__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport {\n  InterfaceId_IERC1155,\n  InterfaceId_IERC721,\n} from \"../constants/contract\";\nimport { Provider } from \"@ethersproject/providers\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport { SignerOrProvider } from \"../core\";\nimport {\n  NewAuctionListing,\n  NewDirectListing,\n  Offer,\n} from \"../types/marketplace\";\nimport invariant from \"tiny-invariant\";\nimport { fetchCurrencyValue } from \"./currency\";\nimport { MAX_BPS } from \"../schema/shared\";\n\n/**\n * This method checks if the given token is approved for the marketplace contract.\n * This is particularly useful for direct listings where the token\n * being listed may be moved before the listing is actually closed.\n *\n * @internal\n * @param provider - The connected provider\n * @param marketplaceAddress - The address of the marketplace contract\n * @param assetContract - The address of the asset contract.\n * @param tokenId - The token id of the token.\n * @param from - The address of the account that owns the token.\n * @returns - True if the marketplace is approved on the token, false otherwise.\n */\nexport async function isTokenApprovedForMarketplace(\n  provider: Provider,\n  marketplaceAddress: string,\n  assetContract: string,\n  tokenId: BigNumberish,\n  from: string,\n): Promise<boolean> {\n  try {\n    const erc165 = ERC165__factory.connect(assetContract, provider);\n    const isERC721 = await erc165.supportsInterface(InterfaceId_IERC721);\n    const isERC1155 = await erc165.supportsInterface(InterfaceId_IERC1155);\n    if (isERC721) {\n      const asset = IERC721__factory.connect(assetContract, provider);\n\n      const approved = await asset.isApprovedForAll(from, marketplaceAddress);\n      if (approved) {\n        return true;\n      }\n      return (\n        (await asset.getApproved(tokenId)).toLowerCase() ===\n        marketplaceAddress.toLowerCase()\n      );\n    } else if (isERC1155) {\n      const asset = IERC1155__factory.connect(assetContract, provider);\n      return await asset.isApprovedForAll(from, marketplaceAddress);\n    } else {\n      console.error(\"Contract does not implement ERC 1155 or ERC 721.\");\n      return false;\n    }\n  } catch (err: any) {\n    console.error(\"Failed to check if token is approved\", err);\n    return false;\n  }\n}\n\n/**\n * Checks if the marketplace is approved to make transfers on the assetContract\n * If not, it tries to set the approval.\n * @param signerOrProvider\n * @param marketplaceAddress\n * @param assetContract\n * @param tokenId\n * @param from\n */\nexport async function handleTokenApproval(\n  signerOrProvider: SignerOrProvider,\n  marketplaceAddress: string,\n  assetContract: string,\n  tokenId: BigNumberish,\n  from: string,\n): Promise<void> {\n  const erc165 = ERC165__factory.connect(assetContract, signerOrProvider);\n  const isERC721 = await erc165.supportsInterface(InterfaceId_IERC721);\n  const isERC1155 = await erc165.supportsInterface(InterfaceId_IERC1155);\n  // check for token approval\n  if (isERC721) {\n    const asset = new ContractWrapper<IERC721>(\n      signerOrProvider,\n      assetContract,\n      IERC721__factory.abi,\n      {},\n    );\n    const approved = await asset.readContract.isApprovedForAll(\n      from,\n      marketplaceAddress,\n    );\n    if (!approved) {\n      const isTokenApproved =\n        (await asset.readContract.getApproved(tokenId)).toLowerCase() ===\n        marketplaceAddress.toLowerCase();\n\n      if (!isTokenApproved) {\n        await asset.sendTransaction(\"setApprovalForAll\", [\n          marketplaceAddress,\n          true,\n        ]);\n      }\n    }\n  } else if (isERC1155) {\n    const asset = new ContractWrapper<IERC1155>(\n      signerOrProvider,\n      assetContract,\n      IERC1155__factory.abi,\n      {},\n    );\n\n    const approved = await asset.readContract.isApprovedForAll(\n      from,\n      marketplaceAddress,\n    );\n    if (!approved) {\n      await asset.sendTransaction(\"setApprovalForAll\", [\n        marketplaceAddress,\n        true,\n      ]);\n    }\n  } else {\n    throw Error(\"Contract must implement ERC 1155 or ERC 721.\");\n  }\n}\n\n/**\n * Used to verify fields in new listing.\n * @internal\n */\n// TODO this should be done in zod\nexport function validateNewListingParam(\n  param: NewDirectListing | NewAuctionListing,\n) {\n  invariant(\n    param.assetContractAddress !== undefined &&\n      param.assetContractAddress !== null,\n    \"Asset contract address is required\",\n  );\n  invariant(\n    param.buyoutPricePerToken !== undefined &&\n      param.buyoutPricePerToken !== null,\n    \"Buyout price is required\",\n  );\n  invariant(\n    param.listingDurationInSeconds !== undefined &&\n      param.listingDurationInSeconds !== null,\n    \"Listing duration is required\",\n  );\n  invariant(\n    param.startTimeInSeconds !== undefined && param.startTimeInSeconds !== null,\n    \"Start time is required\",\n  );\n  invariant(\n    param.tokenId !== undefined && param.tokenId !== null,\n    \"Token ID is required\",\n  );\n  invariant(\n    param.quantity !== undefined && param.quantity !== null,\n    \"Quantity is required\",\n  );\n\n  switch (param.type) {\n    case \"NewAuctionListing\": {\n      invariant(\n        param.reservePricePerToken !== undefined &&\n          param.reservePricePerToken !== null,\n        \"Reserve price is required\",\n      );\n    }\n  }\n}\n\n/**\n * Maps a contract offer to the strict interface\n *\n * @internal\n * @param offer\n * @returns - An `Offer` object\n */\nexport async function mapOffer(\n  provider: Provider,\n  listingId: BigNumber,\n  offer: any,\n): Promise<Offer> {\n  return {\n    quantity: offer.quantityDesired,\n    pricePerToken: offer.pricePerToken,\n    currencyContractAddress: offer.currency,\n    buyerAddress: offer.offeror,\n    quantityDesired: offer.quantityWanted,\n    currencyValue: await fetchCurrencyValue(\n      provider,\n      offer.currency,\n      (offer.quantityWanted as BigNumber).mul(offer.pricePerToken as BigNumber),\n    ),\n    listingId,\n  } as Offer;\n}\n\nexport function isWinningBid(\n  winningPrice: BigNumberish,\n  newBidPrice: BigNumberish,\n  bidBuffer: BigNumberish,\n): boolean {\n  bidBuffer = BigNumber.from(bidBuffer);\n  winningPrice = BigNumber.from(winningPrice);\n  newBidPrice = BigNumber.from(newBidPrice);\n  const buffer = newBidPrice.sub(winningPrice).mul(MAX_BPS).div(winningPrice);\n  return buffer.gte(bidBuffer);\n}\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport {\n  IMarketplace,\n  Marketplace,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { IStorage } from \"../interfaces\";\nimport { BigNumber, BigNumberish, ethers } from \"ethers\";\nimport {\n  AuctionListing,\n  NewAuctionListing,\n  Offer,\n} from \"../../types/marketplace\";\nimport {\n  AuctionAlreadyStartedError,\n  AuctionHasNotEndedError,\n  ListingNotFoundError,\n  WrongListingTypeError,\n} from \"../../common\";\nimport { ListingType } from \"../../enums\";\nimport {\n  fetchCurrencyMetadata,\n  fetchCurrencyValue,\n  normalizePriceValue,\n  setErc20Allowance,\n} from \"../../common/currency\";\nimport { fetchTokenMetadataForContract } from \"../../common/nft\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { TransactionResult, TransactionResultWithId } from \"../types\";\nimport {\n  handleTokenApproval,\n  isWinningBid,\n  mapOffer,\n  validateNewListingParam,\n} from \"../../common/marketplace\";\nimport { Price } from \"../../types/currency\";\nimport invariant from \"tiny-invariant\";\nimport { ListingAddedEvent } from \"../../@custom-thirdweb-dev/contracts/dist/Marketplace\";\n\n/**\n * Handles auction listings\n * @public\n */\nexport class MarketplaceAuction {\n  private contractWrapper: ContractWrapper<Marketplace>;\n  private storage: IStorage;\n\n  constructor(\n    contractWrapper: ContractWrapper<Marketplace>,\n    storage: IStorage,\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get an Auction listing by id\n   *\n   * @param listingId - the listing Id\n   * @returns the Auction listing object\n   */\n  public async getListing(listingId: BigNumberish): Promise<AuctionListing> {\n    const listing = await this.contractWrapper.readContract.listings(listingId);\n\n    if (listing.listingId.toString() !== listingId.toString()) {\n      throw new ListingNotFoundError(this.getAddress(), listingId.toString());\n    }\n\n    if (listing.listingType !== ListingType.Auction) {\n      throw new WrongListingTypeError(\n        this.getAddress(),\n        listingId.toString(),\n        \"Direct\",\n        \"Auction\",\n      );\n    }\n    return await this.mapListing(listing);\n  }\n\n  /**\n   * Get Highest Bid\n   *\n   * @remarks Get the current highest bid of an active auction.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the auction that closed\n   * const listingId = 0;\n   *\n   * contract.auction.\n   *   .getWinningBid(listingId)\n   *   .then((offer) => console.log(offer))\n   *   .catch((err) => console.error(err));\n   * ```\n   */\n  public async getWinningBid(\n    listingId: BigNumberish,\n  ): Promise<Offer | undefined> {\n    await this.validateListing(BigNumber.from(listingId));\n    const offers = await this.contractWrapper.readContract.winningBid(\n      listingId,\n    );\n    if (offers.offeror === AddressZero) {\n      return undefined;\n    }\n    return await mapOffer(\n      this.contractWrapper.getProvider(),\n      BigNumber.from(listingId),\n      offers,\n    );\n  }\n\n  /**\n   * Get Auction Winner\n   *\n   * @remarks Get the winner of the auction after an auction ends.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the auction that closed\n   * const listingId = 0;\n   *\n   * contract.auction.\n   *   .getWinner(listingId)\n   *   .then((auctionWinner) => console.log(auctionWinner))\n   *   .catch((err) => console.error(err));\n   * ```\n   */\n  public async getWinner(listingId: BigNumberish): Promise<string> {\n    // TODO this should be via indexer or direct contract call\n    const closedAuctions = await this.contractWrapper.readContract.queryFilter(\n      this.contractWrapper.readContract.filters.AuctionClosed(),\n    );\n    const auction = closedAuctions.find((a) =>\n      a.args.listingId.eq(BigNumber.from(listingId)),\n    );\n    if (!auction) {\n      throw new Error(\n        `Could not find auction with listingId ${listingId} in closed auctions`,\n      );\n    }\n    return auction.args.winningBidder;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create Auction\n   *\n   * @remarks Create a new auction where people can bid on an asset.\n   *\n   * @example\n   * ```javascript\n   * // Data of the auction you want to create\n   * const auction = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *   // in how many seconds with the listing open up\n   *   startTimeInSeconds: 0,\n   *   // how long the listing will be open for\n   *   listingDurationInSeconds: 86400,\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // how much people would have to bid to instantly buy the asset\n   *   buyoutPricePerToken: \"10\",\n   *   // the minimum bid that will be accepted for the token\n   *   reservePricePerToken: \"1.5\",\n   * }\n   *\n   * const tx = await contract.auction.createListing(auction);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created listing\n   * ```\n   */\n  public async createListing(\n    listing: NewAuctionListing,\n  ): Promise<TransactionResultWithId> {\n    validateNewListingParam(listing);\n\n    await handleTokenApproval(\n      this.contractWrapper.getSignerOrProvider(),\n      this.getAddress(),\n      listing.assetContractAddress,\n      listing.tokenId,\n      await this.contractWrapper.getSignerAddress(),\n    );\n\n    const normalizedPricePerToken = await normalizePriceValue(\n      this.contractWrapper.getProvider(),\n      listing.buyoutPricePerToken,\n      listing.currencyContractAddress,\n    );\n\n    const normalizedReservePrice = await normalizePriceValue(\n      this.contractWrapper.getProvider(),\n      listing.reservePricePerToken,\n      listing.currencyContractAddress,\n    );\n\n    const receipt = await this.contractWrapper.sendTransaction(\n      \"createListing\",\n      [\n        {\n          assetContract: listing.assetContractAddress,\n          tokenId: listing.tokenId,\n          buyoutPricePerToken: normalizedPricePerToken,\n          currencyToAccept: listing.currencyContractAddress,\n          listingType: ListingType.Auction,\n          quantityToList: listing.quantity,\n          reservePricePerToken: normalizedReservePrice,\n          secondsUntilEndTime: listing.listingDurationInSeconds,\n          startTime: listing.startTimeInSeconds,\n        } as IMarketplace.ListingParametersStruct,\n      ],\n    );\n\n    const event = this.contractWrapper.parseLogs<ListingAddedEvent>(\n      \"ListingAdded\",\n      receipt?.logs,\n    );\n    return {\n      id: event[0].args.listingId,\n      receipt,\n    };\n  }\n\n  /**\n   * Buyout Auction\n   *\n   * @remarks Buy a specific direct listing from the marketplace.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the asset you want to buy\n   * const listingId = 0;\n   *\n   * await contract.auction.buyoutListing(listingId);\n   * ```\n   */\n  public async buyoutListing(\n    listingId: BigNumberish,\n  ): Promise<TransactionResult> {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n\n    const currencyMetadata = await fetchCurrencyMetadata(\n      this.contractWrapper.getProvider(),\n      listing.currencyContractAddress,\n    );\n\n    return this.makeBid(\n      listingId,\n      ethers.utils.formatUnits(listing.buyoutPrice, currencyMetadata.decimals),\n    );\n  }\n\n  /**\n   * Bid On Auction\n   *\n   * @remarks Make a bid on an auction listings\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the asset you want to bid on\n   * const listingId = 0;\n   * // The price you are willing to bid for a single token of the listing\n   * const pricePerToken = 1;\n   *\n   * await contract.auction.makeBid(listingId, pricePerToken);\n   * ```\n   */\n  public async makeBid(\n    listingId: BigNumberish,\n    pricePerToken: Price,\n  ): Promise<TransactionResult> {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    const normalizedPrice = await normalizePriceValue(\n      this.contractWrapper.getProvider(),\n      pricePerToken,\n      listing.currencyContractAddress,\n    );\n\n    const bidBuffer = await this.contractWrapper.readContract.bidBufferBps();\n    const winningBid = await this.getWinningBid(listingId);\n    if (winningBid) {\n      const isWinnner = isWinningBid(\n        winningBid.pricePerToken,\n        normalizedPrice,\n        bidBuffer,\n      );\n\n      invariant(\n        isWinnner,\n        \"Bid price is too low based on the current winning bid and the bid buffer\",\n      );\n    } else {\n      const tokenPrice = normalizedPrice;\n      const reservePrice = BigNumber.from(listing.reservePrice);\n      invariant(\n        tokenPrice.gte(reservePrice),\n        \"Bid price is too low based on reserve price\",\n      );\n    }\n\n    const quantity = BigNumber.from(listing.quantity);\n    const value = normalizedPrice.mul(quantity);\n\n    const overrides = (await this.contractWrapper.getCallOverrides()) || {};\n    await setErc20Allowance(\n      this.contractWrapper,\n      value,\n      listing.currencyContractAddress,\n      overrides,\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"offer\",\n        [\n          listingId,\n          listing.quantity,\n          listing.currencyContractAddress,\n          normalizedPrice,\n        ],\n        overrides,\n      ),\n    };\n  }\n\n  /**\n   * Cancel Auction Listing\n   *\n   * @remarks Cancel an auction listing on the marketplace\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the auction listing you want to cancel\n   * const listingId = \"0\";\n   *\n   * await contract.auction.cancelListing(listingId);\n   * ```\n   */\n  public async cancelListing(\n    listingId: BigNumberish,\n  ): Promise<TransactionResult> {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n\n    const now = BigNumber.from(Math.floor(Date.now() / 1000));\n    const startTime = BigNumber.from(listing.startTimeInEpochSeconds);\n\n    const offers = await this.contractWrapper.readContract.winningBid(\n      listingId,\n    );\n    if (now.gt(startTime) && offers.offeror !== AddressZero) {\n      throw new AuctionAlreadyStartedError(listingId.toString());\n    }\n\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"closeAuction\", [\n        BigNumber.from(listingId),\n        await this.contractWrapper.getSignerAddress(),\n      ]),\n    };\n  }\n\n  /**\n   * Close the Auction\n   *\n   * @remarks Closes the Auction and executes the sale.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the auction listing you want to close\n   * const listingId = \"0\";\n   * await contract.auction.closeListing(listingId);\n   * ```\n   *\n   * @param listingId - the auction  listing ud to close\n   * @param closeFor - optionally pass the auction creator address or winning bid offeror address to close the auction on their behalf\n   */\n  public async closeListing(\n    listingId: BigNumberish,\n    closeFor?: string,\n  ): Promise<TransactionResult> {\n    if (!closeFor) {\n      closeFor = await this.contractWrapper.getSignerAddress();\n    }\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    try {\n      return {\n        receipt: await this.contractWrapper.sendTransaction(\"closeAuction\", [\n          BigNumber.from(listingId),\n          closeFor,\n        ]),\n      };\n    } catch (err: any) {\n      if (err.message.includes(\"cannot close auction before it has ended\")) {\n        throw new AuctionHasNotEndedError(\n          listingId.toString(),\n          listing.endTimeInEpochSeconds.toString(),\n        );\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Update an Auction listing with new metadata\n   * @param listing - the listing id to update\n   */\n  public async updateListing(\n    listing: AuctionListing,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"updateListing\", [\n        listing.id,\n        listing.quantity,\n        listing.reservePrice,\n        listing.buyoutPrice,\n        listing.currencyContractAddress,\n        listing.startTimeInEpochSeconds,\n        listing.endTimeInEpochSeconds,\n      ]),\n    };\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Throws error if listing could not be found\n   *\n   * @param listingId - Listing to check for\n   */\n  private async validateListing(listingId: BigNumber): Promise<AuctionListing> {\n    try {\n      return await this.getListing(listingId);\n    } catch (err) {\n      console.error(`Error getting the listing with id ${listingId}`);\n      throw err;\n    }\n  }\n\n  /**\n   * Helper method maps the auction listing to the auction listing interface.\n   *\n   * @internal\n   * @param listing - The listing to map, as returned from the contract.\n   * @returns - The mapped interface.\n   */\n  public async mapListing(\n    listing: IMarketplace.ListingStruct,\n  ): Promise<AuctionListing> {\n    return {\n      assetContractAddress: listing.assetContract,\n      buyoutPrice: BigNumber.from(listing.buyoutPricePerToken),\n      currencyContractAddress: listing.currency,\n      buyoutCurrencyValuePerToken: await fetchCurrencyValue(\n        this.contractWrapper.getProvider(),\n        listing.currency,\n        listing.buyoutPricePerToken,\n      ),\n      id: listing.listingId.toString(),\n      tokenId: listing.tokenId,\n      quantity: listing.quantity,\n      startTimeInEpochSeconds: listing.startTime,\n      asset: await fetchTokenMetadataForContract(\n        listing.assetContract,\n        this.contractWrapper.getProvider(),\n        listing.tokenId,\n        this.storage,\n      ),\n      reservePriceCurrencyValuePerToken: await fetchCurrencyValue(\n        this.contractWrapper.getProvider(),\n        listing.currency,\n        listing.reservePricePerToken,\n      ),\n      reservePrice: BigNumber.from(listing.reservePricePerToken),\n      endTimeInEpochSeconds: listing.endTime,\n      sellerAddress: listing.tokenOwner,\n      type: ListingType.Auction,\n    };\n  }\n}\n","import {\n  TWRegistry,\n  TWRegistry__factory,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { SDKOptions } from \"../../schema/sdk-options\";\n\nimport { NetworkOrSignerOrProvider } from \"../types\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport { AddressZero } from \"@ethersproject/constants\";\n\n/**\n * @internal\n */\nexport class ContractRegistry extends ContractWrapper<TWRegistry> {\n  constructor(\n    registryAddress: string,\n    network: NetworkOrSignerOrProvider,\n    options?: SDKOptions,\n  ) {\n    super(network, registryAddress, TWRegistry__factory.abi, options);\n  }\n\n  public async getContractAddresses(walletAddress: string) {\n    // TODO @fixme the filter here is necessary because for some reason getAll returns a 0x0 address for the first entry\n    return (await this.readContract.getAll(walletAddress)).filter(\n      (adr) => isAddress(adr) && adr.toLowerCase() !== AddressZero,\n    );\n  }\n}\n","import {\n  TWFactory,\n  TWFactory__factory,\n} from \"../../@custom-thirdweb-dev/contracts\";\nimport { BigNumber, ethers } from \"ethers\";\nimport { z } from \"zod\";\nimport {\n  EditionDrop,\n  Marketplace,\n  CONTRACTS_MAP,\n  Pack,\n  Split,\n  Edition,\n  Token,\n  Vote,\n  NFTCollection,\n  NFTDrop,\n  REMOTE_CONTRACT_NAME,\n} from \"../../contracts\";\nimport { SDKOptions } from \"../../schema/sdk-options\";\nimport { IStorage } from \"../interfaces/IStorage\";\nimport { NetworkOrSignerOrProvider, ValidContractClass } from \"../types\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { ProxyDeployedEvent } from \"../../@custom-thirdweb-dev/contracts/dist/TWFactory\";\n\nimport { ChainlinkVrf } from \"../../constants/chainlink\";\nimport {\n  CONTRACT_ADDRESSES,\n  OZ_DEFENDER_FORWARDER_ADDRESS,\n  SUPPORTED_CHAIN_IDS,\n} from \"../../constants\";\nimport { AddressZero } from \"@ethersproject/constants\";\n\n/**\n * @internal\n */\nexport class ContractFactory extends ContractWrapper<TWFactory> {\n  private storage: IStorage;\n\n  constructor(\n    factoryAddr: string,\n    network: NetworkOrSignerOrProvider,\n    storage: IStorage,\n    options?: SDKOptions,\n  ) {\n    super(network, factoryAddr, TWFactory__factory.abi, options);\n    this.storage = storage;\n  }\n\n  public async deploy<TContract extends ValidContractClass>(\n    contractType: TContract[\"contractType\"],\n    contractMetadata: z.input<TContract[\"schema\"][\"deploy\"]>,\n  ): Promise<string> {\n    const contract = CONTRACTS_MAP[contractType];\n    const metadata = contract.schema.deploy.parse(contractMetadata);\n    const contractFactory = contract.contractFactory;\n\n    // TODO: is there any special pre-processing we need to do before uploading?\n    const contractURI = await this.storage.uploadMetadata(\n      metadata,\n      this.readContract.address,\n      await this.getSigner()?.getAddress(),\n    );\n\n    const encodedFunc = contractFactory\n      .getInterface(contractFactory.abi)\n      .encodeFunctionData(\n        \"initialize\",\n        await this.getDeployArguments(contractType, metadata, contractURI),\n      );\n\n    const contractName = REMOTE_CONTRACT_NAME[contractType];\n    console.log(`Remote contractName : ${contractName}`);\n    const encodedType = ethers.utils.formatBytes32String(contractName);\n    console.log(`Deploying ${contractType} proxy`);\n    const receipt = await this.sendTransaction(\"deployProxy\", [\n      encodedType,\n      encodedFunc,\n    ]);\n    console.log(`${contractType} proxy deployed successfully`);\n    const events = this.parseLogs<ProxyDeployedEvent>(\n      \"ProxyDeployed\",\n      receipt.logs,\n    );\n    if (events.length < 1) {\n      throw new Error(\"No ProxyDeployed event found\");\n    }\n\n    return events[0].args.proxy;\n  }\n\n  private async getDeployArguments<TContract extends ValidContractClass>(\n    contractType: TContract[\"contractType\"],\n    metadata: z.input<TContract[\"schema\"][\"deploy\"]>,\n    contractURI: string,\n  ): Promise<any[]> {\n    let trustedForwarders = await this.getDefaultTrustedForwarders();\n    // override default forwarders if custom ones are passed in\n    if (metadata.trusted_forwarders && metadata.trusted_forwarders.length > 0) {\n      trustedForwarders = metadata.trusted_forwarders;\n    }\n    switch (contractType) {\n      case NFTDrop.contractType:\n      case NFTCollection.contractType:\n        const erc721metadata = NFTDrop.schema.deploy.parse(metadata);\n        return [\n          await this.getSignerAddress(),\n          erc721metadata.name,\n          erc721metadata.symbol,\n          contractURI,\n          trustedForwarders,\n          erc721metadata.primary_sale_recipient,\n          erc721metadata.fee_recipient,\n          erc721metadata.seller_fee_basis_points,\n          erc721metadata.platform_fee_basis_points,\n          erc721metadata.platform_fee_recipient,\n        ];\n      case EditionDrop.contractType:\n      case Edition.contractType:\n        const erc1155metadata = EditionDrop.schema.deploy.parse(metadata);\n        return [\n          await this.getSignerAddress(),\n          erc1155metadata.name,\n          erc1155metadata.symbol,\n          contractURI,\n          trustedForwarders,\n          erc1155metadata.primary_sale_recipient,\n          erc1155metadata.fee_recipient,\n          erc1155metadata.seller_fee_basis_points,\n          erc1155metadata.platform_fee_basis_points,\n          erc1155metadata.platform_fee_recipient,\n        ];\n      case Token.contractType:\n        const erc20metadata = Token.schema.deploy.parse(metadata);\n        return [\n          await this.getSignerAddress(),\n          erc20metadata.name,\n          erc20metadata.symbol,\n          contractURI,\n          trustedForwarders,\n          erc20metadata.primary_sale_recipient,\n          erc20metadata.platform_fee_recipient,\n          erc20metadata.platform_fee_basis_points,\n        ];\n      case Vote.contractType:\n        const voteMetadata = Vote.schema.deploy.parse(metadata);\n        return [\n          voteMetadata.name,\n          contractURI,\n          trustedForwarders,\n          voteMetadata.voting_token_address,\n          voteMetadata.voting_delay_in_blocks,\n          voteMetadata.voting_period_in_blocks,\n          BigNumber.from(voteMetadata.proposal_token_threshold),\n          voteMetadata.voting_quorum_fraction,\n        ];\n      case Split.contractType:\n        const splitsMetadata = Split.schema.deploy.parse(metadata);\n        return [\n          await this.getSignerAddress(),\n          contractURI,\n          trustedForwarders,\n          splitsMetadata.recipients.map((s) => s.address),\n          splitsMetadata.recipients.map((s) => BigNumber.from(s.sharesBps)),\n        ];\n      case Marketplace.contractType:\n        const marketplaceMetadata = Marketplace.schema.deploy.parse(metadata);\n        return [\n          await this.getSignerAddress(),\n          contractURI,\n          trustedForwarders,\n          marketplaceMetadata.platform_fee_recipient,\n          marketplaceMetadata.platform_fee_basis_points,\n        ];\n      case Pack.contractType:\n        const packsMetadata = Pack.schema.deploy.parse(metadata);\n        const vrf = ChainlinkVrf[await this.getChainID()];\n        return [\n          await this.getSignerAddress(),\n          packsMetadata.name,\n          packsMetadata.symbol,\n          contractURI,\n          trustedForwarders,\n          packsMetadata.fee_recipient,\n          packsMetadata.seller_fee_basis_points,\n          vrf.fees,\n          vrf.keyHash,\n        ];\n      default:\n        return [];\n    }\n  }\n\n  private async getDefaultTrustedForwarders(): Promise<string[]> {\n    const chainId = await this.getChainID();\n    const chainEnum = SUPPORTED_CHAIN_IDS.find((c) => c === chainId);\n    const biconomyForwarder = chainEnum\n      ? CONTRACT_ADDRESSES[chainEnum].biconomyForwarder\n      : AddressZero;\n    return biconomyForwarder !== AddressZero\n      ? [OZ_DEFENDER_FORWARDER_ADDRESS, biconomyForwarder]\n      : [OZ_DEFENDER_FORWARDER_ADDRESS];\n  }\n}\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport { BaseContract } from \"ethers\";\nimport { Listener } from \"@ethersproject/providers\";\n\n/**\n * Listen to Contract events in real time\n * @public\n */\nexport class ContractEvents<TContract extends BaseContract> {\n  private contractWrapper;\n\n  constructor(contractWrapper: ContractWrapper<TContract>) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Subscribe to contract events\n   * @remarks Add a listener for a particular contract event\n   * @example\n   * ```javascript\n   * contract.events.addListener(\"TokensMinted\", (event) => {\n   *   console.log(event);\n   * });\n   * ```\n   * @public\n   * @param eventName - the event name as defined in the contract\n   * @param listener - the receiver that will be called on every new event\n   */\n  public addListener(\n    eventName: keyof TContract[\"filters\"],\n    listener: (event: Record<string, any>) => void,\n  ) {\n    // validates event, throws error if not found\n    const event = this.contractWrapper.readContract.interface.getEvent(\n      eventName as string,\n    );\n    this.contractWrapper.readContract.on(event.name, (...args) => {\n      // convert event info into nice object with named properties\n      const results: Record<string, any> = {};\n      event.inputs\n        .map((i) => i.name)\n        .forEach((arg, index) => {\n          results[arg] = args[index];\n        });\n      listener(results);\n    });\n  }\n\n  /**\n   * @public\n   * @param eventName - the event name as defined in the contract\n   * @param listener - the listener to unregister\n   */\n  public removeListener(\n    eventName: keyof TContract[\"filters\"],\n    listener: Listener,\n  ) {\n    // validates event, throws error if not found\n    const event = this.contractWrapper.readContract.interface.getEvent(\n      eventName as string,\n    );\n    this.contractWrapper.readContract.off(event.name as string, listener);\n  }\n\n  /**\n   * Remove all listeners on this contract\n   */\n  public removeAllListeners() {\n    this.contractWrapper.readContract.removeAllListeners();\n  }\n}\n","import { NFTMetadataOrUri, NFTMetadataOwner } from \"../schema/tokens/common\";\nimport type {\n  IStorage,\n  NetworkOrSignerOrProvider,\n  TransactionResultWithId,\n} from \"../core\";\nimport { TokenErc721ContractSchema } from \"../schema/contracts/token-erc721\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport {\n  TokenERC721,\n  TokenERC721__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport { ContractRoles } from \"../core/classes/contract-roles\";\nimport { ContractRoyalty } from \"../core/classes/contract-royalty\";\nimport { Erc721 } from \"../core/classes/erc-721\";\nimport { ContractPrimarySale } from \"../core/classes/contract-sales\";\nimport { ContractEncoder } from \"../core/classes/contract-encoder\";\nimport { Erc721SignatureMinting } from \"../core/classes/erc-721-signature-minting\";\nimport { GasCostEstimator } from \"../core/classes\";\nimport { TokensMintedEvent } from \"../@custom-thirdweb-dev/contracts/dist/TokenERC721\";\nimport { uploadOrExtractURI, uploadOrExtractURIs } from \"../common/nft\";\nimport { ContractEvents } from \"../core/classes/contract-events\";\n\n/**\n * Create a collection of one-of-one NFTs.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * // You can switch out this provider with any wallet or provider setup you like.\n * const provider = ethers.Wallet.createRandom();\n * const sdk = new ThirdwebSDK(provider);\n * const contract = sdk.getNFTCollection(\"{{contract_address}}\");\n * ```\n *\n * @public\n */\nexport class NFTCollection extends Erc721<TokenERC721> {\n  static contractType = \"nft-collection\" as const;\n  static contractRoles = [\"admin\", \"minter\", \"transfer\"] as const;\n  static contractFactory = TokenERC721__factory;\n  /**\n   * @internal\n   */\n  static schema = TokenErc721ContractSchema;\n\n  public metadata: ContractMetadata<TokenERC721, typeof NFTCollection.schema>;\n  public roles: ContractRoles<\n    TokenERC721,\n    typeof NFTCollection.contractRoles[number]\n  >;\n  public encoder: ContractEncoder<TokenERC721>;\n  public estimator: GasCostEstimator<TokenERC721>;\n  public events: ContractEvents<TokenERC721>;\n  public primarySale: ContractPrimarySale<TokenERC721>;\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalty.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalty.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n  public royalty: ContractRoyalty<TokenERC721, typeof NFTCollection.schema>;\n  /**\n   * Signature Minting\n   * @remarks Generate dynamic NFTs with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   */\n  public signature: Erc721SignatureMinting;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<TokenERC721>(\n      network,\n      address,\n      NFTCollection.contractFactory.abi,\n      options,\n    ),\n  ) {\n    super(contractWrapper, storage, options);\n    this.metadata = new ContractMetadata(\n      this.contractWrapper,\n      NFTCollection.schema,\n      this.storage,\n    );\n    this.roles = new ContractRoles(\n      this.contractWrapper,\n      NFTCollection.contractRoles,\n    );\n    this.royalty = new ContractRoyalty(this.contractWrapper, this.metadata);\n    this.primarySale = new ContractPrimarySale(this.contractWrapper);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.signature = new Erc721SignatureMinting(\n      this.contractWrapper,\n      this.roles,\n      this.storage,\n    );\n    this.events = new ContractEvents(this.contractWrapper);\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Mint an NFT to the connected wallet\n   *\n   * @remarks See {@link NFTCollection.mintTo}\n   */\n  public async mint(\n    metadata: NFTMetadataOrUri,\n  ): Promise<TransactionResultWithId<NFTMetadataOwner>> {\n    return this.mintTo(await this.contractWrapper.getSignerAddress(), metadata);\n  }\n\n  /**\n   * Mint a unique NFT\n   *\n   * @remarks Mint a unique NFT to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\";\n   *\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const tx = await contract.mintTo(toAddress, metadata);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   */\n  public async mintTo(\n    to: string,\n    metadata: NFTMetadataOrUri,\n  ): Promise<TransactionResultWithId<NFTMetadataOwner>> {\n    const uri = await uploadOrExtractURI(metadata, this.storage);\n    const receipt = await this.contractWrapper.sendTransaction(\"mintTo\", [\n      to,\n      uri,\n    ]);\n    const event = this.contractWrapper.parseLogs<TokensMintedEvent>(\n      \"TokensMinted\",\n      receipt?.logs,\n    );\n    if (event.length === 0) {\n      throw new Error(\"TokenMinted event not found\");\n    }\n    const id = event[0].args.tokenIdMinted;\n    return {\n      id,\n      receipt,\n      data: () => this.get(id.toString()),\n    };\n  }\n\n  /**\n   * Mint Many NFTs to the connected wallet\n   *\n   * @remarks See {@link NFTCollection.mintBatchTo}\n   */\n  public async mintBatch(\n    metadatas: NFTMetadataOrUri[],\n  ): Promise<TransactionResultWithId<NFTMetadataOwner>[]> {\n    return this.mintBatchTo(\n      await this.contractWrapper.getSignerAddress(),\n      metadatas,\n    );\n  }\n\n  /**\n   * Mint Many unique NFTs\n   *\n   * @remarks Mint many unique NFTs at once to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\";\n   *\n   * // Custom metadata of the NFTs you want to mint.\n   * const metadatas = [{\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT #2\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/other/image.png\"),\n   * }];\n   *\n   * const tx = await contract.mintBatchTo(toAddress, metadatas);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   */\n  public async mintBatchTo(\n    to: string,\n    metadatas: NFTMetadataOrUri[],\n  ): Promise<TransactionResultWithId<NFTMetadataOwner>[]> {\n    const uris = await uploadOrExtractURIs(metadatas, this.storage);\n    const encoded = uris.map((uri) =>\n      this.contractWrapper.readContract.interface.encodeFunctionData(\"mintTo\", [\n        to,\n        uri,\n      ]),\n    );\n    const receipt = await this.contractWrapper.multiCall(encoded);\n    const events = this.contractWrapper.parseLogs<TokensMintedEvent>(\n      \"TokensMinted\",\n      receipt.logs,\n    );\n    if (events.length === 0 || events.length < metadatas.length) {\n      throw new Error(\"TokenMinted event not found, minting failed\");\n    }\n    return events.map((e) => {\n      const id = e.args.tokenIdMinted;\n      return {\n        id,\n        receipt,\n        data: () => this.get(id),\n      };\n    });\n  }\n}\n","import { Erc1155 } from \"../core/classes/erc-1155\";\nimport {\n  DropERC1155,\n  DropERC1155__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport { ContractRoles } from \"../core/classes/contract-roles\";\nimport { ContractRoyalty } from \"../core/classes/contract-royalty\";\nimport { ContractPrimarySale } from \"../core/classes/contract-sales\";\nimport {\n  IStorage,\n  NetworkOrSignerOrProvider,\n  TransactionResult,\n  TransactionResultWithId,\n} from \"../core\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport {\n  CommonNFTInput,\n  NFTMetadata,\n  NFTMetadataInput,\n} from \"../schema/tokens/common\";\nimport { BigNumberish, BytesLike } from \"ethers\";\nimport { hexZeroPad } from \"ethers/lib/utils\";\nimport { prepareClaim } from \"../common/claim-conditions\";\nimport { DropErc1155ClaimConditions } from \"../core/classes/drop-erc1155-claim-conditions\";\nimport { DropErc1155ContractSchema } from \"../schema/contracts/drop-erc1155\";\nimport { ContractEncoder } from \"../core/classes/contract-encoder\";\nimport { GasCostEstimator } from \"../core/classes/gas-cost-estimator\";\nimport { ClaimVerification } from \"../types\";\nimport { TokensLazyMintedEvent } from \"../@custom-thirdweb-dev/contracts/dist/DropERC1155\";\nimport { DropErc1155History } from \"../core/classes/drop-erc1155-history\";\nimport { ContractEvents } from \"../core/classes/contract-events\";\nimport { ContractInterceptor } from \"../core/classes/contract-interceptor\";\n\n/**\n * Setup a collection of NFTs with a customizable number of each NFT that are minted as users claim them.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * // You can switch out this provider with any wallet or provider setup you like.\n * const provider = ethers.Wallet.createRandom();\n * const sdk = new ThirdwebSDK(provider);\n * const contract = sdk.getEditionDrop(\"{{contract_address}}\");\n * ```\n *\n * @public\n */\nexport class EditionDrop extends Erc1155<DropERC1155> {\n  static contractType = \"edition-drop\" as const;\n  static contractRoles = [\"admin\", \"minter\", \"transfer\"] as const;\n  static contractFactory = DropERC1155__factory;\n  /**\n   * @internal\n   */\n  static schema = DropErc1155ContractSchema;\n\n  public primarySale: ContractPrimarySale<DropERC1155>;\n  public encoder: ContractEncoder<DropERC1155>;\n  public estimator: GasCostEstimator<DropERC1155>;\n  public events: ContractEvents<DropERC1155>;\n  public metadata: ContractMetadata<DropERC1155, typeof EditionDrop.schema>;\n  public roles: ContractRoles<\n    DropERC1155,\n    typeof EditionDrop.contractRoles[number]\n  >;\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalty.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalty.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n  public royalty: ContractRoyalty<DropERC1155, typeof EditionDrop.schema>;\n  /**\n   * Configure claim conditions for each NFT\n   * @remarks Define who can claim each NFT in the edition, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   *\n   * const tokenId = 0; // the id of the NFT to set claim conditions on\n   * await contract.claimConditions.set(tokenId, claimConditions);\n   * ```\n   */\n  public claimConditions: DropErc1155ClaimConditions;\n  public history: DropErc1155History;\n  /**\n   * @internal\n   */\n  public interceptor: ContractInterceptor<DropERC1155>;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<DropERC1155>(\n      network,\n      address,\n      EditionDrop.contractFactory.abi,\n      options,\n    ),\n  ) {\n    super(contractWrapper, storage, options);\n    this.metadata = new ContractMetadata(\n      this.contractWrapper,\n      EditionDrop.schema,\n      this.storage,\n    );\n    this.roles = new ContractRoles(\n      this.contractWrapper,\n      EditionDrop.contractRoles,\n    );\n    this.royalty = new ContractRoyalty(this.contractWrapper, this.metadata);\n    this.primarySale = new ContractPrimarySale(this.contractWrapper);\n    this.claimConditions = new DropErc1155ClaimConditions(\n      this.contractWrapper,\n      this.metadata,\n      this.storage,\n    );\n    this.history = new DropErc1155History(this.contractWrapper);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.interceptor = new ContractInterceptor(this.contractWrapper);\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  // TODO getAllClaimerAddresses() - should be done via an indexer\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create a batch of NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.createBatch(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   */\n  public async createBatch(\n    metadatas: NFTMetadataInput[],\n  ): Promise<TransactionResultWithId<NFTMetadata>[]> {\n    const startFileNumber =\n      await this.contractWrapper.readContract.nextTokenIdToMint();\n    const batch = await this.storage.uploadMetadataBatch(\n      metadatas.map((m) => CommonNFTInput.parse(m)),\n      startFileNumber.toNumber(),\n      this.contractWrapper.readContract.address,\n      await this.contractWrapper.getSigner()?.getAddress(),\n    );\n    const receipt = await this.contractWrapper.sendTransaction(\"lazyMint\", [\n      batch.metadataUris.length,\n      `${batch.baseUri.endsWith(\"/\") ? batch.baseUri : `${batch.baseUri}/`}`,\n    ]);\n    const event = this.contractWrapper.parseLogs<TokensLazyMintedEvent>(\n      \"TokensLazyMinted\",\n      receipt?.logs,\n    );\n    const startingIndex = event[0].args.startTokenId;\n    const endingIndex = event[0].args.endTokenId;\n    const results = [];\n    for (let id = startingIndex; id.lte(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.getTokenMetadata(id),\n      });\n    }\n    return results;\n  }\n\n  /**\n   * Claim NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const tokenId = 0; // the id of the NFT you want to claim\n   * const quantity = 1; // how many NFTs you want to claim\n   *\n   * const tx = await contract.claimTo(address, tokenId, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const claimedTokenId = tx.id; // the id of the NFT claimed\n   * const claimedNFT = await tx.data(); // (optional) get the claimed NFT metadata\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param proofs - Array of proofs\n   *\n   * @returns - Receipt for the transaction\n   */\n  public async claimTo(\n    destinationAddress: string,\n    tokenId: BigNumberish,\n    quantity: BigNumberish,\n    proofs: BytesLike[] = [hexZeroPad([0], 32)],\n  ): Promise<TransactionResult> {\n    const claimVerification = await this.prepareClaim(\n      tokenId,\n      quantity,\n      proofs,\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"claim\",\n        [\n          destinationAddress,\n          tokenId,\n          quantity,\n          claimVerification.currencyAddress,\n          claimVerification.price,\n          claimVerification.proofs,\n          claimVerification.maxQuantityPerTransaction,\n        ],\n        claimVerification.overrides,\n      ),\n    };\n  }\n\n  /**\n   * Claim a token to the connected wallet\n   *\n   * @remarks See {@link EditionDrop.claimTo}\n   *\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param proofs - Array of proofs\n   *\n   * @returns - Receipt for the transaction\n   */\n  public async claim(\n    tokenId: BigNumberish,\n    quantity: BigNumberish,\n    proofs: BytesLike[] = [hexZeroPad([0], 32)],\n  ): Promise<TransactionResult> {\n    const address = await this.contractWrapper.getSignerAddress();\n    return this.claimTo(address, tokenId, quantity, proofs);\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Returns proofs and the overrides required for the transaction.\n   *\n   * @returns - `overrides` and `proofs` as an object.\n   */\n  private async prepareClaim(\n    tokenId: BigNumberish,\n    quantity: BigNumberish,\n    proofs: BytesLike[] = [hexZeroPad([0], 32)],\n  ): Promise<ClaimVerification> {\n    return prepareClaim(\n      quantity,\n      await this.claimConditions.getActive(tokenId),\n      (await this.metadata.get()).merkle,\n      this.contractWrapper,\n      this.storage,\n      proofs,\n    );\n  }\n}\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport { BaseContract, ethers } from \"ethers\";\n\n/**\n * Estimates the gas cost of Contract calls\n * @public\n */\nexport class GasCostEstimator<TContract extends BaseContract> {\n  private contractWrapper;\n\n  constructor(contractWrapper: ContractWrapper<TContract>) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Estimates the cost of gas in native token of the current chain\n   * @returns the estimated price in native currency (ETH, MATIC, etc) of calling this function\n   */\n  public async gasCostOf(\n    fn: keyof TContract[\"functions\"],\n    args: Parameters<TContract[\"functions\"][typeof fn]>,\n  ): Promise<string> {\n    const price = await this.contractWrapper.getPreferredGasPrice();\n    const gasUnits = await this.contractWrapper.estimateGas(fn, args);\n    return ethers.utils.formatEther(gasUnits.mul(price));\n  }\n\n  /**\n   * Returns the current gas price in gwei\n   */\n  public async currentGasPriceInGwei(): Promise<string> {\n    const price = await this.contractWrapper.getProvider().getGasPrice();\n    return ethers.utils.formatUnits(price, \"gwei\");\n  }\n}\n","import { ContractWrapper } from \"./contract-wrapper\";\nimport { BaseContract } from \"ethers\";\nimport { CallOverrides } from \"@ethersproject/contracts\";\n\n/**\n * Allows overriding transaction behavior for this contract\n * @internal\n */\nexport class ContractInterceptor<TContract extends BaseContract> {\n  private contractWrapper;\n\n  constructor(contractWrapper: ContractWrapper<TContract>) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * The next transaction executed will add/replace any overrides passed via the passed in hook.\n   * @param hook - the hook to add or replace any CallOverrides (gas limit, gas price, nonce, from, value, etc...)\n   */\n  public overrideNextTransaction(hook: () => CallOverrides) {\n    this.contractWrapper.withTransactionOverride(hook);\n  }\n}\n","import { Erc1155 } from \"../core/classes/erc-1155\";\nimport {\n  TokenERC1155,\n  TokenERC1155__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport { ContractRoles } from \"../core/classes/contract-roles\";\nimport { ContractRoyalty } from \"../core/classes/contract-royalty\";\nimport { ContractPrimarySale } from \"../core/classes/contract-sales\";\nimport {\n  IStorage,\n  NetworkOrSignerOrProvider,\n  TransactionResultWithId,\n} from \"../core\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport { TokenErc1155ContractSchema } from \"../schema/contracts/token-erc1155\";\nimport {\n  EditionMetadata,\n  EditionMetadataOrUri,\n} from \"../schema/tokens/edition\";\nimport { TokensMintedEvent } from \"../@custom-thirdweb-dev/contracts/dist/TokenERC1155\";\nimport { ContractEncoder } from \"../core/classes/contract-encoder\";\nimport { BigNumber, BigNumberish, ethers } from \"ethers\";\nimport { Erc1155SignatureMinting } from \"../core/classes/erc-1155-signature-minting\";\nimport { GasCostEstimator } from \"../core/classes/gas-cost-estimator\";\nimport { uploadOrExtractURI, uploadOrExtractURIs } from \"../common/nft\";\nimport { ContractEvents } from \"../core/classes/contract-events\";\n\n/**\n * Create a collection of NFTs that lets you mint multiple copies of each NFT.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * // You can switch out this provider with any wallet or provider setup you like.\n * const provider = ethers.Wallet.createRandom();\n * const sdk = new ThirdwebSDK(provider);\n * const contract = sdk.getEdition(\"{{contract_address}}\");\n * ```\n *\n * @public\n */\nexport class Edition extends Erc1155<TokenERC1155> {\n  static contractType = \"edition\" as const;\n  static contractRoles = [\"admin\", \"minter\", \"transfer\"] as const;\n  static contractFactory = TokenERC1155__factory;\n  /**\n   * @internal\n   */\n  static schema = TokenErc1155ContractSchema;\n\n  public metadata: ContractMetadata<TokenERC1155, typeof Edition.schema>;\n  public roles: ContractRoles<\n    TokenERC1155,\n    typeof Edition.contractRoles[number]\n  >;\n  public primarySale: ContractPrimarySale<TokenERC1155>;\n  public encoder: ContractEncoder<TokenERC1155>;\n  public estimator: GasCostEstimator<TokenERC1155>;\n  public events: ContractEvents<TokenERC1155>;\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalty.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalty.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n  public royalty: ContractRoyalty<TokenERC1155, typeof Edition.schema>;\n  /**\n   * Signature Minting\n   * @remarks Generate dynamic NFTs with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   */\n  public signature: Erc1155SignatureMinting;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<TokenERC1155>(\n      network,\n      address,\n      Edition.contractFactory.abi,\n      options,\n    ),\n  ) {\n    super(contractWrapper, storage, options);\n    this.metadata = new ContractMetadata(\n      this.contractWrapper,\n      Edition.schema,\n      this.storage,\n    );\n    this.roles = new ContractRoles(this.contractWrapper, Edition.contractRoles);\n    this.royalty = new ContractRoyalty(this.contractWrapper, this.metadata);\n    this.primarySale = new ContractPrimarySale(this.contractWrapper);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n    this.signature = new Erc1155SignatureMinting(\n      this.contractWrapper,\n      this.roles,\n      this.storage,\n    );\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Mint NFT for the connected wallet\n   *\n   * @remarks See {@link Edition.mintTo}\n   */\n  public async mint(\n    metadataWithSupply: EditionMetadataOrUri,\n  ): Promise<TransactionResultWithId<EditionMetadata>> {\n    return this.mintTo(\n      await this.contractWrapper.getSignerAddress(),\n      metadataWithSupply,\n    );\n  }\n\n  /**\n   * Mint an NFT with a limited supply\n   *\n   * @remarks Mint an NFT with a limited supply to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   *\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }\n   *\n   * const metadataWithSupply = {\n   *   metadata,\n   *   supply: 1000, // The number of this NFT you want to mint\n   * }\n   *\n   * const tx = await contract.mintTo(toAddress, metadataWithSupply);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   */\n  public async mintTo(\n    to: string,\n    metadataWithSupply: EditionMetadataOrUri,\n  ): Promise<TransactionResultWithId<EditionMetadata>> {\n    const uri = await uploadOrExtractURI(\n      metadataWithSupply.metadata,\n      this.storage,\n    );\n    const receipt = await this.contractWrapper.sendTransaction(\"mintTo\", [\n      to,\n      ethers.constants.MaxUint256,\n      uri,\n      metadataWithSupply.supply,\n    ]);\n    const event = this.contractWrapper.parseLogs<TokensMintedEvent>(\n      \"TokensMinted\",\n      receipt?.logs,\n    );\n    if (event.length === 0) {\n      throw new Error(\"TokenMinted event not found\");\n    }\n    const id = event[0].args.tokenIdMinted;\n    return {\n      id,\n      receipt,\n      data: () => this.get(id.toString()),\n    };\n  }\n\n  /**\n   * Increase the supply of an existing NFT and mint it to the connected wallet\n   *\n   * @param tokenId - the token id of the NFT to increase supply of\n   * @param additionalSupply - the additional amount to mint\n   */\n  public async mintAdditionalSupply(\n    tokenId: BigNumberish,\n    additionalSupply: BigNumberish,\n  ): Promise<TransactionResultWithId<EditionMetadata>> {\n    return this.mintAdditionalSupplyTo(\n      await this.contractWrapper.getSignerAddress(),\n      tokenId,\n      additionalSupply,\n    );\n  }\n\n  /**\n   * Increase the supply of an existing NFT and mint it to a given wallet address\n   *\n   * @param to - the address to mint to\n   * @param tokenId - the token id of the NFT to increase supply of\n   * @param additionalSupply - the additional amount to mint\n   */\n  public async mintAdditionalSupplyTo(\n    to: string,\n    tokenId: BigNumberish,\n    additionalSupply: BigNumberish,\n  ): Promise<TransactionResultWithId<EditionMetadata>> {\n    const metadata = await this.getTokenMetadata(tokenId);\n    const receipt = await this.contractWrapper.sendTransaction(\"mintTo\", [\n      to,\n      tokenId,\n      metadata.uri,\n      additionalSupply,\n    ]);\n    return {\n      id: BigNumber.from(tokenId),\n      receipt,\n      data: () => this.get(tokenId),\n    };\n  }\n\n  /**\n   * Mint Many NFTs for the connected wallet\n   *\n   * @remarks See {@link Edition.mintBatchTo}\n   */\n  public async mintBatch(\n    metadatas: EditionMetadataOrUri[],\n  ): Promise<TransactionResultWithId<EditionMetadata>[]> {\n    return this.mintBatchTo(\n      await this.contractWrapper.getSignerAddress(),\n      metadatas,\n    );\n  }\n\n  /**\n   * Mint Many NFTs with limited supplies\n   *\n   * @remarks Mint many different NFTs with limited supplies to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   *\n   * // Custom metadata and supplies of your NFTs\n   * const metadataWithSupply = [{\n   *   supply: 50, // The number of this NFT you want to mint\n   *   metadata: {\n   *     name: \"Cool NFT #1\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }, {\n   *   supply: 100,\n   *   metadata: {\n   *     name: \"Cool NFT #2\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }];\n   *\n   * const tx = await contract.mintBatchTo(toAddress, metadataWithSupply);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   */\n  public async mintBatchTo(\n    to: string,\n    metadataWithSupply: EditionMetadataOrUri[],\n  ): Promise<TransactionResultWithId<EditionMetadata>[]> {\n    const metadatas = metadataWithSupply.map((a) => a.metadata);\n    const supplies = metadataWithSupply.map((a) => a.supply);\n    const uris = await uploadOrExtractURIs(metadatas, this.storage);\n    const encoded = uris.map((uri, index) =>\n      this.contractWrapper.readContract.interface.encodeFunctionData(\"mintTo\", [\n        to,\n        ethers.constants.MaxUint256,\n        uri,\n        supplies[index],\n      ]),\n    );\n    const receipt = await this.contractWrapper.multiCall(encoded);\n    const events = this.contractWrapper.parseLogs<TokensMintedEvent>(\n      \"TokensMinted\",\n      receipt.logs,\n    );\n    if (events.length === 0 || events.length < metadatas.length) {\n      throw new Error(\"TokenMinted event not found, minting failed\");\n    }\n    return events.map((e) => {\n      const id = e.args.tokenIdMinted;\n      return {\n        id,\n        receipt,\n        data: () => this.get(id),\n      };\n    });\n  }\n}\n","import { TokenErc20ContractSchema } from \"../schema/contracts/token-erc20\";\nimport {\n  TokenERC20,\n  TokenERC20__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport { ContractRoles } from \"../core/classes/contract-roles\";\nimport {\n  IStorage,\n  NetworkOrSignerOrProvider,\n  TransactionResult,\n} from \"../core\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport { Erc20 } from \"../core/classes/erc-20\";\nimport { ethers } from \"ethers\";\nimport { TokenMintInput } from \"../schema/tokens/token\";\nimport { ContractEncoder } from \"../core/classes/contract-encoder\";\nimport { GasCostEstimator } from \"../core/classes\";\nimport { Amount, CurrencyValue } from \"../types\";\nimport { TokenERC20History } from \"../core/classes/erc-20-history\";\nimport { ContractEvents } from \"../core/classes/contract-events\";\nimport { PriceSchema } from \"../schema\";\nimport { Erc20SignatureMinting } from \"../core/classes/erc-20-signature-minting\";\n\n/**\n * Create a standard crypto token or cryptocurrency.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * // You can switch out this provider with any wallet or provider setup you like.\n * const provider = ethers.Wallet.createRandom();\n * const sdk = new ThirdwebSDK(provider);\n * const contract = sdk.getToken(\"{{contract_address}}\");\n * ```\n *\n * @public\n */\nexport class Token extends Erc20<TokenERC20> {\n  static contractType = \"token\" as const;\n  static contractRoles = [\"admin\", \"minter\", \"transfer\"] as const;\n  static contractFactory = TokenERC20__factory;\n  /**\n   * @internal\n   */\n  static schema = TokenErc20ContractSchema;\n\n  public metadata: ContractMetadata<TokenERC20, typeof Token.schema>;\n  public roles: ContractRoles<TokenERC20, typeof Token.contractRoles[number]>;\n  public encoder: ContractEncoder<TokenERC20>;\n  public estimator: GasCostEstimator<TokenERC20>;\n  public history: TokenERC20History;\n  public events: ContractEvents<TokenERC20>;\n  /**\n   * Signature Minting\n   * @remarks Generate tokens that can be minted only with your own signature, attaching your own set of mint conditions.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   */\n  public signature: Erc20SignatureMinting;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<TokenERC20>(\n      network,\n      address,\n      Token.contractFactory.abi,\n      options,\n    ),\n  ) {\n    super(contractWrapper, storage, options);\n    this.metadata = new ContractMetadata(\n      this.contractWrapper,\n      Token.schema,\n      this.storage,\n    );\n    this.roles = new ContractRoles(this.contractWrapper, Token.contractRoles);\n    this.history = new TokenERC20History(this.contractWrapper);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n    this.signature = new Erc20SignatureMinting(\n      this.contractWrapper,\n      this.roles,\n    );\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get your wallet voting power for the current checkpoints\n   *\n   * @returns the amount of voting power in tokens\n   */\n  public async getVoteBalance(): Promise<CurrencyValue> {\n    return await this.getVoteBalanceOf(\n      await this.contractWrapper.getSignerAddress(),\n    );\n  }\n\n  public async getVoteBalanceOf(account: string): Promise<CurrencyValue> {\n    return await this.getValue(\n      await this.contractWrapper.readContract.getVotes(account),\n    );\n  }\n\n  /**\n   * Get your voting delegatee address\n   *\n   * @returns the address of your vote delegatee\n   */\n  public async getDelegation(): Promise<string> {\n    return await this.getDelegationOf(\n      await this.contractWrapper.getSignerAddress(),\n    );\n  }\n\n  /**\n   * Get a specific address voting delegatee address\n   *\n   * @returns the address of your vote delegatee\n   */\n  public async getDelegationOf(account: string): Promise<string> {\n    return await this.contractWrapper.readContract.delegates(account);\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Mint Tokens for the connected wallet\n   *\n   * @remarks See {@link Token.mintTo}\n   */\n  public async mint(amount: Amount): Promise<TransactionResult> {\n    return this.mintTo(await this.contractWrapper.getSignerAddress(), amount);\n  }\n\n  /**\n   * Mint Tokens\n   *\n   * @remarks Mint tokens to a specified address.\n   *\n   * @example\n   * ```javascript\n   * const toAddress = \"{{wallet_address}}\"; // Address of the wallet you want to mint the tokens to\n   * const amount = \"1.5\"; // The amount of this token you want to mint\n   *\n   * await contract.mintTo(toAddress, amount);\n   * ```\n   */\n  public async mintTo(to: string, amount: Amount): Promise<TransactionResult> {\n    const amountWithDecimals = ethers.utils.parseUnits(\n      PriceSchema.parse(amount),\n      await this.contractWrapper.readContract.decimals(),\n    );\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"mintTo\", [\n        to,\n        amountWithDecimals,\n      ]),\n    };\n  }\n\n  /**\n   * Mint Tokens To Many Wallets\n   *\n   * @remarks Mint tokens to many wallets in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 0.2, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 1.4,\n   *  }\n   * ]\n   *\n   * await contract.mintBatchTo(data);\n   * ```\n   */\n  public async mintBatchTo(args: TokenMintInput[]): Promise<TransactionResult> {\n    const encoded = [];\n    for (const arg of args) {\n      const amountWithDecimals = ethers.utils.parseUnits(\n        PriceSchema.parse(arg.amount),\n        await this.contractWrapper.readContract.decimals(),\n      );\n      encoded.push(\n        this.contractWrapper.readContract.interface.encodeFunctionData(\n          \"mintTo\",\n          [arg.toAddress, amountWithDecimals],\n        ),\n      );\n    }\n    return { receipt: await this.contractWrapper.multiCall(encoded) };\n  }\n\n  /**\n   * Lets you delegate your voting power to the delegateeAddress\n   *\n   * @param delegateeAddress - delegatee wallet address\n   * @alpha\n   */\n  public async delegateTo(\n    delegateeAddress: string,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"delegate\", [\n        delegateeAddress,\n      ]),\n    };\n  }\n}\n","import {\n  IERC20__factory,\n  VoteERC20,\n  VoteERC20__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport {\n  IStorage,\n  NetworkOrSignerOrProvider,\n  TransactionResult,\n  TransactionResultWithId,\n} from \"../core\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport { VoteContractSchema } from \"../schema/contracts/vote\";\nimport {\n  Proposal,\n  ProposalExecutable,\n  ProposalVote,\n  VoteSettings,\n} from \"../types/vote\";\nimport { fetchCurrencyMetadata, fetchCurrencyValue } from \"../common/currency\";\nimport { BigNumber, BigNumberish, ethers } from \"ethers\";\nimport { VoteType } from \"../enums\";\nimport deepEqual from \"deep-equal\";\nimport { CurrencyValue } from \"../types/currency\";\nimport { UpdateableNetwork } from \"../core/interfaces/contract\";\nimport { ContractEncoder } from \"../core/classes/contract-encoder\";\nimport { GasCostEstimator } from \"../core/classes\";\nimport { ProposalCreatedEvent } from \"../@custom-thirdweb-dev/contracts/dist/VoteERC20\";\nimport { ContractEvents } from \"../core/classes/contract-events\";\n\n/**\n * Create a decentralized organization for token holders to vote on proposals.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * // You can switch out this provider with any wallet or provider setup you like.\n * const provider = ethers.Wallet.createRandom();\n * const sdk = new ThirdwebSDK(provider);\n * const contract = sdk.getVote(\"{{contract_address}}\");\n * ```\n *\n * @public\n */\nexport class Vote implements UpdateableNetwork {\n  static contractType = \"vote\" as const;\n  static contractFactory = VoteERC20__factory;\n  /**\n   * @internal\n   */\n  static schema = VoteContractSchema;\n\n  private contractWrapper: ContractWrapper<VoteERC20>;\n  private storage: IStorage;\n\n  public metadata: ContractMetadata<VoteERC20, typeof Vote.schema>;\n  public encoder: ContractEncoder<VoteERC20>;\n  public estimator: GasCostEstimator<VoteERC20>;\n  public events: ContractEvents<VoteERC20>;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<VoteERC20>(\n      network,\n      address,\n      Vote.contractFactory.abi,\n      options,\n    ),\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.metadata = new ContractMetadata(\n      this.contractWrapper,\n      Vote.schema,\n      this.storage,\n    );\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n  }\n\n  onNetworkUpdated(network: NetworkOrSignerOrProvider) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a proposal by id.\n   *\n   * @param proposalId - The proposal id to get.\n   * @returns - The proposal.\n   */\n  public async get(proposalId: BigNumberish): Promise<Proposal> {\n    const all = await this.getAll();\n    const proposals = all.filter((p) =>\n      deepEqual(BigNumber.from(p.proposalId), BigNumber.from(proposalId)),\n    );\n    if (proposals.length === 0) {\n      throw new Error(\"proposal not found\");\n    }\n    return proposals[0];\n  }\n\n  /**\n   * Get All Proposals\n   *\n   * @remarks Get all the proposals in this contract.\n   *\n   * @example\n   * ```javascript\n   * const proposals = await contract.getAll();\n   * console.log(proposals);\n   * ```\n   *\n   * @returns - All the proposals in the contract.\n   */\n  public async getAll(): Promise<Proposal[]> {\n    return Promise.all(\n      (await this.contractWrapper.readContract.getAllProposals()).map(\n        async (data) => ({\n          proposalId: data.proposalId,\n          proposer: data.proposer,\n          description: data.description,\n          startBlock: data.startBlock,\n          endBlock: data.endBlock,\n          state: await this.contractWrapper.readContract.state(data.proposalId),\n          votes: await this.getProposalVotes(data.proposalId),\n          executions: data[3].map((c, i) => ({\n            toAddress: data.targets[i],\n            nativeTokenValue: c,\n            transactionData: data.calldatas[i],\n          })),\n        }),\n      ),\n    );\n  }\n\n  /**\n   * Get the votes for a specific proposal\n   * @param proposalId - the proposalId\n   */\n  public async getProposalVotes(\n    proposalId: BigNumber,\n  ): Promise<ProposalVote[]> {\n    const votes = await this.contractWrapper.readContract.proposalVotes(\n      proposalId,\n    );\n    return [\n      {\n        type: VoteType.Against,\n        label: \"Against\",\n        count: votes.againstVotes,\n      },\n      {\n        type: VoteType.For,\n        label: \"For\",\n        count: votes.forVotes,\n      },\n      {\n        type: VoteType.Abstain,\n        label: \"Abstain\",\n        count: votes.abstainVotes,\n      },\n    ];\n  }\n\n  /**\n   * Check If Wallet Voted\n   *\n   * @remarks Check if a specified wallet has voted a specific proposal\n   *\n   * @example\n   * ```javascript\n   * // The proposal ID of the proposal you want to check\n   * const proposalId = \"0\";\n   * // The address of the wallet you want to check to see if they voted\n   * const address = \"{{wallet_address}}\";\n   *\n   * await contract.hasVoted(proposalId, address);\n   * ```\n   *\n   * @param proposalId - The unique identifier of a proposal .\n   * @param account - (optional) wallet account address. Defaults to connected signer.\n   * @returns - True if the account has already voted on the proposal.\n   */\n  public async hasVoted(\n    proposalId: string,\n    account?: string,\n  ): Promise<boolean> {\n    if (!account) {\n      account = await this.contractWrapper.getSignerAddress();\n    }\n    return this.contractWrapper.readContract.hasVoted(proposalId, account);\n  }\n\n  /**\n   * Can Execute\n   *\n   * @remarks Check if a proposal can be executed (if the proposal has succeeded).\n   *\n   * @example\n   * ```javascript\n   * // The proposal ID of the proposal you want to check\n   * const proposalId = \"0\";\n   * const canExecute = await contract.canExecute(proposalId);\n   * console.log(canExecute);\n   * ```\n   *\n   * @param proposalId - The proposal ID to check.\n   * @returns - True if the proposal can be executed, false otherwise.\n   */\n  public async canExecute(proposalId: string): Promise<boolean> {\n    await this.ensureExists(proposalId);\n\n    const proposal = await this.get(proposalId);\n    const tos = proposal.executions.map((p) => p.toAddress);\n    const values = proposal.executions.map((p) => p.nativeTokenValue);\n    const datas = proposal.executions.map((p) => p.transactionData);\n    const descriptionHash = ethers.utils.id(proposal.description);\n    try {\n      await this.contractWrapper\n        .callStatic()\n        .execute(tos, values, datas, descriptionHash);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Check the balance of the project wallet in the native token of the chain\n   *\n   * @returns - The balance of the project in the native token of the chain\n   */\n  public async balance(): Promise<CurrencyValue> {\n    const balance = await this.contractWrapper.readContract.provider.getBalance(\n      this.contractWrapper.readContract.address,\n    );\n    return {\n      name: \"\",\n      symbol: \"\",\n      decimals: 18,\n      value: balance,\n      displayValue: ethers.utils.formatUnits(balance, 18),\n    };\n  }\n\n  /**\n   * Check the balance of the project wallet in a particular\n   * ERC20 token contract\n   *\n   * @returns - The balance of the project in the native token of the chain\n   */\n  public async balanceOfToken(tokenAddress: string): Promise<CurrencyValue> {\n    const erc20 = IERC20__factory.connect(\n      tokenAddress,\n      this.contractWrapper.getProvider(),\n    );\n    return await fetchCurrencyValue(\n      this.contractWrapper.getProvider(),\n      tokenAddress,\n      await erc20.balanceOf(this.contractWrapper.readContract.address),\n    );\n  }\n\n  /**\n   * Find a proposal by its id.\n   *\n   * @internal\n   * @param proposalId - Proposal to check for\n   */\n  private async ensureExists(proposalId: string): Promise<void> {\n    try {\n      await this.contractWrapper.readContract.state(proposalId);\n    } catch (e) {\n      throw Error(`Proposal ${proposalId} not found`);\n    }\n  }\n\n  /**\n   * Get the Vote contract configuration\n   */\n  public async settings(): Promise<VoteSettings> {\n    const [\n      votingDelay,\n      votingPeriod,\n      votingTokenAddress,\n      votingQuorumFraction,\n      proposalTokenThreshold,\n    ] = await Promise.all([\n      this.contractWrapper.readContract.votingDelay(),\n      this.contractWrapper.readContract.votingPeriod(),\n      this.contractWrapper.readContract.token(),\n      this.contractWrapper.readContract.quorumNumerator(),\n      this.contractWrapper.readContract.proposalThreshold(),\n    ]);\n    const votingTokenMetadata = await fetchCurrencyMetadata(\n      this.contractWrapper.getProvider(),\n      votingTokenAddress,\n    );\n    return {\n      votingDelay: votingDelay.toString(),\n      votingPeriod: votingPeriod.toString(),\n      votingTokenAddress,\n      votingTokenMetadata,\n      votingQuorumFraction: votingQuorumFraction.toString(),\n      proposalTokenThreshold: proposalTokenThreshold.toString(),\n    };\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create Proposal\n   *\n   * @remarks Create a new proposal for token holders to vote on.\n   *\n   * @example\n   * ```javascript\n   * // The description of the proposal you want to pass\n   * const description = \"This is a great proposal - vote for it!\"\n   * // You can (optionally) pass in contract calls that will get executed when the proposal is executed.\n   * const executions = [\n   *   {\n   *     // The contract you want to make a call to\n   *     toAddress: \"0x...\",\n   *     // The amount of the native currency to send in this transaction\n   *     nativeTokenValue: 0,\n   *     // Transaction data that will be executed when the proposal is executed\n   *     // This is an example transfer transaction with a token contract (which you would need to setup in code)\n   *     transactionData: tokenContract.encoder.encode(\n   *       \"transfer\", [\n   *         fromAddress,\n   *         amount,\n   *       ]\n   *     ),\n   *   }\n   * ]\n   *\n   * const proposal = await contract.propose(description, executions);\n   * ```\n   *\n   * @param description - The description of the proposal.\n   * @param executions - A set of executable transactions that will be run if the proposal is passed and executed.\n   * @returns - The id of the created proposal and the transaction receipt.\n   */\n  public async propose(\n    description: string,\n    executions?: ProposalExecutable[],\n  ): Promise<TransactionResultWithId> {\n    if (!executions) {\n      executions = [\n        {\n          toAddress: this.contractWrapper.readContract.address,\n          nativeTokenValue: 0,\n          transactionData: \"0x\",\n        },\n      ];\n    }\n    const tos = executions.map((p) => p.toAddress);\n    const values = executions.map((p) => p.nativeTokenValue);\n    const datas = executions.map((p) => p.transactionData);\n    const receipt = await this.contractWrapper.sendTransaction(\"propose\", [\n      tos,\n      values,\n      datas,\n      description,\n    ]);\n    const event = this.contractWrapper.parseLogs<ProposalCreatedEvent>(\n      \"ProposalCreated\",\n      receipt?.logs,\n    );\n    return {\n      id: event[0].args.proposalId,\n      receipt,\n    };\n  }\n\n  /**\n   * Vote\n   *\n   * @remarks Vote on an active proposal\n   *\n   * @example\n   * ```javascript\n   * // The proposal ID of the proposal you want to vote on\n   * const proposalId = \"0\";\n   * // The vote type you want to cast, can be VoteType.Against, VoteType.For, or VoteType.Abstain\n   * const voteType = VoteType.For;\n   * // The (optional) reason for the vote\n   * const reason = \"I like this proposal!\";\n   *\n   * await contract.vote(proposalId, voteType, reason);\n   * ```\n   * @param proposalId - The proposal to cast a vote on.\n   * @param voteType - The position the voter is taking on their vote.\n   * @param reason - (optional) The reason for the vote.\n   */\n  public async vote(\n    proposalId: string,\n    voteType: VoteType,\n    reason = \"\",\n  ): Promise<TransactionResult> {\n    await this.ensureExists(proposalId);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"castVoteWithReason\",\n        [proposalId, voteType, reason],\n      ),\n    };\n  }\n\n  /**\n   * Execute Proposal\n   *\n   * @remarks Execute the related transactions for a proposal if the proposal succeeded.\n   *\n   * @example\n   * ```javascript\n   * // The proposal ID ofthe proposal you want to execute\n   * const proposalId = \"0\"\n   * await contract.execute(proposalId);\n   * ```\n   *\n   * @param proposalId - The proposal id to execute.\n   */\n  public async execute(proposalId: string): Promise<TransactionResult> {\n    await this.ensureExists(proposalId);\n\n    const proposal = await this.get(proposalId);\n    const tos = proposal.executions.map((p) => p.toAddress);\n    const values = proposal.executions.map((p) => p.nativeTokenValue);\n    const datas = proposal.executions.map((p) => p.transactionData);\n    const descriptionHash = ethers.utils.id(proposal.description);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"execute\", [\n        tos,\n        values,\n        datas,\n        descriptionHash,\n      ]),\n    };\n  }\n}\n","import { UpdateableNetwork } from \"../core/interfaces/contract\";\nimport {\n  IERC20__factory,\n  Split as SplitContract,\n  Split__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport {\n  IStorage,\n  NetworkOrSignerOrProvider,\n  TransactionResult,\n} from \"../core\";\nimport { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport { ContractEncoder } from \"../core/classes/contract-encoder\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport { CurrencyValue } from \"../types/currency\";\nimport { fetchCurrencyValue } from \"../common/currency\";\nimport { BigNumber } from \"ethers\";\nimport { SplitRecipient } from \"../types/SplitRecipient\";\nimport { SplitsContractSchema } from \"../schema/contracts/splits\";\nimport { GasCostEstimator } from \"../core/classes\";\nimport { ContractEvents } from \"../core/classes/contract-events\";\n\n/**\n * Create custom royalty splits to distribute funds.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * // You can switch out this provider with any wallet or provider setup you like.\n * const provider = ethers.Wallet.createRandom();\n * const sdk = new ThirdwebSDK(provider);\n * const contract = sdk.getSplit(\"{{contract_address}}\");\n * ```\n *\n * @public\n */\nexport class Split implements UpdateableNetwork {\n  static contractType = \"split\" as const;\n  static contractFactory = Split__factory;\n  /**\n   * @internal\n   */\n  static schema = SplitsContractSchema;\n\n  private contractWrapper: ContractWrapper<SplitContract>;\n  private storage: IStorage;\n\n  public metadata: ContractMetadata<SplitContract, typeof Split.schema>;\n  public encoder: ContractEncoder<SplitContract>;\n  public estimator: GasCostEstimator<SplitContract>;\n  public events: ContractEvents<SplitContract>;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<SplitContract>(\n      network,\n      address,\n      Split.contractFactory.abi,\n      options,\n    ),\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.metadata = new ContractMetadata(\n      this.contractWrapper,\n      Split.schema,\n      this.storage,\n    );\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n  }\n\n  onNetworkUpdated(network: NetworkOrSignerOrProvider) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get Recipients of this splits contract\n   *\n   * @remarks Get the data about the shares of every split recipient on the contract\n   *\n   * @example\n   * ```javascript\n   * const recipients = await contract.getAllRecipients();\n   * console.log(recipients);\n   * ```\n   */\n  public async getAllRecipients(): Promise<SplitRecipient[]> {\n    const recipients: SplitRecipient[] = [];\n    let index = BigNumber.from(0);\n    const totalRecipients =\n      await this.contractWrapper.readContract.payeeCount();\n    while (index.lt(totalRecipients)) {\n      try {\n        const recipientAddress = await this.contractWrapper.readContract.payee(\n          index,\n        );\n        recipients.push(\n          await this.getRecipientSplitPercentage(recipientAddress),\n        );\n        index = index.add(1);\n      } catch (err: any) {\n        // The only way we know how to detect that we've found all recipients\n        // is if we get an error when trying to get the next recipient.\n        if (\n          \"method\" in err &&\n          (err[\"method\"] as string).toLowerCase().includes(\"payee(uint256)\")\n        ) {\n          break;\n        } else {\n          throw err;\n        }\n      }\n    }\n    return recipients;\n  }\n\n  /**\n   * Returns all the recipients and their balances in the native currency.\n   *\n   * @returns A map of recipient addresses to their balances in the native currency.\n   */\n  public async balanceOfAllRecipients() {\n    const recipients = await this.getAllRecipients();\n    const balances: { [key: string]: BigNumber } = {};\n    for (const recipient of recipients) {\n      balances[recipient.address] = await this.balanceOf(recipient.address);\n    }\n    return balances;\n  }\n\n  /**\n   * Returns all the recipients and their balances in a non-native currency.\n   *\n   * @param tokenAddress - The address of the currency to check the balances in.\n   * @returns A map of recipient addresses to their balances in the specified currency.\n   */\n  public async balanceOfTokenAllRecipients(tokenAddress: string) {\n    const recipients = await this.getAllRecipients();\n    const balances: { [key: string]: CurrencyValue } = {};\n    for (const recipient of recipients) {\n      balances[recipient.address] = await this.balanceOfToken(\n        recipient.address,\n        tokenAddress,\n      );\n    }\n    return balances;\n  }\n\n  /**\n   * Get Funds owed to a particular wallet\n   *\n   * @remarks Get the amount of funds in the native currency held by the contract that is owed to a specific recipient.\n   *\n   * @example\n   * ```javascript\n   * // The address to check the funds of\n   * const address = \"{{wallet_address}}\";\n   * const funds = await contract.balanceOf(address);\n   * console.log(funds);\n   * ```\n   */\n  public async balanceOf(address: string): Promise<BigNumber> {\n    const walletBalance =\n      await this.contractWrapper.readContract.provider.getBalance(\n        this.getAddress(),\n      );\n    const totalReleased = await this.contractWrapper.readContract[\n      \"totalReleased()\"\n    ]();\n    const totalReceived = walletBalance.add(totalReleased);\n\n    return this._pendingPayment(\n      address,\n      totalReceived,\n      await this.contractWrapper.readContract[\"released(address)\"](address),\n    );\n  }\n\n  /**\n   * Get non-native Token Funds owed to a particular wallet\n   *\n   * @remarks Get the amount of funds in the non-native tokens held by the contract that is owed to a specific recipient.\n   *\n   * @example\n   * ```javascript\n   * // The address to check the funds of\n   * const address = \"{{wallet_address}}\";\n   * // The address of the currency to check the contracts funds of\n   * const tokenAddress = \"0x...\"\n   * const funds = await contract.balanceOfToken(address, tokenAddress);\n   * console.log(funds);\n   * ```\n   */\n  public async balanceOfToken(\n    walletAddress: string,\n    tokenAddress: string,\n  ): Promise<CurrencyValue> {\n    const erc20 = IERC20__factory.connect(\n      tokenAddress,\n      this.contractWrapper.getProvider(),\n    );\n    const walletBalance = await erc20.balanceOf(this.getAddress());\n    const totalReleased = await this.contractWrapper.readContract[\n      \"totalReleased(address)\"\n    ](tokenAddress);\n    const totalReceived = walletBalance.add(totalReleased);\n    const value = await this._pendingPayment(\n      walletAddress,\n      totalReceived,\n      await this.contractWrapper.readContract[\"released(address,address)\"](\n        tokenAddress,\n        walletAddress,\n      ),\n    );\n    return await fetchCurrencyValue(\n      this.contractWrapper.getProvider(),\n      tokenAddress,\n      value,\n    );\n  }\n\n  /**\n   * Get the % of funds owed to a given address\n   * @param address - the address to check percentage of\n   */\n  public async getRecipientSplitPercentage(\n    address: string,\n  ): Promise<SplitRecipient> {\n    const [totalShares, walletsShares] = await Promise.all([\n      this.contractWrapper.readContract.totalShares(),\n      this.contractWrapper.readContract.shares(address),\n    ]);\n    // We convert to basis points to avoid floating point loss of precision\n    return {\n      address,\n      splitPercentage:\n        walletsShares.mul(BigNumber.from(1e7)).div(totalShares).toNumber() /\n        1e5,\n    };\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Withdraw Funds\n   * @remarks Triggers a transfer to account of the amount of native currency they are owed.\n   *\n   * @example\n   * ```javascript\n   * // the wallet address that wants to withdraw their funds\n   * const walletAddress = \"{{wallet_address}}\"\n   * await contract.withdraw(walletAddress);\n   * ```\n   *\n   * @param walletAddress - The address to distributes the amount to\n   */\n  public async withdraw(walletAddress: string): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"release(address)\", [\n        walletAddress,\n      ]),\n    };\n  }\n\n  /**\n   * Triggers a transfer to account of the amount of a given currency they are owed.\n   *\n   * @param walletAddress - The address to distributes the amount to\n   * @param tokenAddress - The address of the currency contract to distribute funds\n   */\n  public async withdrawToken(\n    walletAddress: string,\n    tokenAddress: string,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"release(address,address)\",\n        [tokenAddress, walletAddress],\n      ),\n    };\n  }\n\n  /**\n   * Distribute Funds\n   *\n   * @remarks Distribute funds held by the contract in the native currency to all recipients.\n   *\n   * @example\n   * ```javascript\n   * await contract.distribute();\n   * ```\n   */\n  public async distribute(): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"distribute()\", []),\n    };\n  }\n\n  /**\n   * Distribute Funds\n   *\n   * @remarks Distribute funds held by the contract in the native currency to all recipients.\n   *\n   * @example\n   * ```javascript\n   * // The address of the currency to distribute funds\n   * const tokenAddress = \"0x...\"\n   * await contract.distributeToken(tokenAddress);\n   * ```\n   *\n   * @param tokenAddress - The address of the currency contract to distribute funds\n   */\n  public async distributeToken(\n    tokenAddress: string,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"distribute(address)\",\n        [tokenAddress],\n      ),\n    };\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  private async _pendingPayment(\n    address: string,\n    totalReceived: BigNumber,\n    alreadyReleased: BigNumber,\n  ): Promise<BigNumber> {\n    const addressReceived = totalReceived.mul(\n      await this.contractWrapper.readContract.shares(address),\n    );\n    const totalRoyaltyAvailable = addressReceived.div(\n      await this.contractWrapper.readContract.totalShares(),\n    );\n    return totalRoyaltyAvailable.sub(alreadyReleased);\n  }\n}\n","import {\n  Marketplace as MarketplaceContract,\n  Marketplace__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport { ContractRoles } from \"../core/classes/contract-roles\";\nimport { ContractEncoder } from \"../core/classes/contract-encoder\";\nimport {\n  IStorage,\n  NetworkOrSignerOrProvider,\n  TransactionResult,\n} from \"../core\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport { UpdateableNetwork } from \"../core/interfaces/contract\";\nimport { MarketplaceContractSchema } from \"../schema/contracts/marketplace\";\nimport { AuctionListing, DirectListing } from \"../types/marketplace\";\nimport { ListingType } from \"../enums\";\nimport { BigNumber, BigNumberish } from \"ethers\";\nimport invariant from \"tiny-invariant\";\nimport { ListingNotFoundError } from \"../common\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { MarketplaceFilter } from \"../types/marketplace/MarketPlaceFilter\";\nimport { getRoleHash } from \"../common/role\";\nimport { MarketplaceDirect } from \"../core/classes/marketplace-direct\";\nimport { MarketplaceAuction } from \"../core/classes/marketplace-auction\";\nimport { GasCostEstimator } from \"../core/classes\";\nimport { DEFAULT_QUERY_ALL_COUNT } from \"../types/QueryParams\";\nimport { ContractEvents } from \"../core/classes/contract-events\";\n\n/**\n * Create your own whitelabel marketplace that enables users to buy and sell any digital assets.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * // You can switch out this provider with any wallet or provider setup you like.\n * const provider = ethers.Wallet.createRandom();\n * const sdk = new ThirdwebSDK(provider);\n * const contract = sdk.getMarketplace(\"{{contract_address}}\");\n * ```\n *\n * @public\n */\nexport class Marketplace implements UpdateableNetwork {\n  static contractType = \"marketplace\" as const;\n  static contractRoles = [\"admin\", \"lister\", \"asset\"] as const;\n  static contractFactory = Marketplace__factory;\n  /**\n   * @internal\n   */\n  static schema = MarketplaceContractSchema;\n\n  private contractWrapper: ContractWrapper<MarketplaceContract>;\n  private storage: IStorage;\n\n  public encoder: ContractEncoder<MarketplaceContract>;\n  public events: ContractEvents<MarketplaceContract>;\n  public estimator: GasCostEstimator<MarketplaceContract>;\n  public metadata: ContractMetadata<\n    MarketplaceContract,\n    typeof Marketplace.schema\n  >;\n  public roles: ContractRoles<\n    MarketplaceContract,\n    typeof Marketplace.contractRoles[number]\n  >;\n  /**\n   * Direct listings\n   * @remarks Create and manage direct listings in your marketplace.\n   * @example\n   * ```javascript\n   * // Data of the listing you want to create\n   * const listing = {\n   *   // address of the NFT contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *   // in how many seconds will the listing open up\n   *   startTimeInSeconds: 0,\n   *   // how long the listing will be open for\n   *   listingDurationInSeconds: 86400,\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // how much the asset will be sold for\n   *   buyoutPricePerToken: \"1.5\",\n   * }\n   *\n   * const tx = await contract.direct.createListing(listing);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const listingId = tx.id; // the id of the newly created listing\n   *\n   * // And on the buyers side:\n   * // Quantity of the asset you want to buy\n   * const quantityDesired = 1;\n   * await contract.direct.buyoutListing(listingId, quantityDesired);\n   * ```\n   */\n  public direct: MarketplaceDirect;\n  /**\n   * Auctions\n   * @remarks Create and manage auctions in your marketplace.\n   * @example\n   * ```javascript\n   * // Data of the auction you want to create\n   * const auction = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *   // in how many seconds with the listing open up\n   *   startTimeInSeconds: 0,\n   *   // how long the listing will be open for\n   *   listingDurationInSeconds: 86400,\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // how much people would have to bid to instantly buy the asset\n   *   buyoutPricePerToken: \"10\",\n   *   // the minimum bid that will be accepted for the token\n   *   reservePricePerToken: \"1.5\",\n   * }\n   *\n   * const tx = await contract.auction.createListing(auction);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const listingId = tx.id; // the id of the newly created listing\n   *\n   * // And on the buyers side:\n   * // The price you are willing to bid for a single token of the listing\n   * const pricePerToken = 2.6;\n   * await contract.auction.makeBid(listingId, pricePerToken);\n   * ```\n   */\n  public auction: MarketplaceAuction;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<MarketplaceContract>(\n      network,\n      address,\n      Marketplace.contractFactory.abi,\n      options,\n    ),\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.metadata = new ContractMetadata(\n      this.contractWrapper,\n      Marketplace.schema,\n      this.storage,\n    );\n    this.roles = new ContractRoles(\n      this.contractWrapper,\n      Marketplace.contractRoles,\n    );\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.direct = new MarketplaceDirect(this.contractWrapper, this.storage);\n    this.auction = new MarketplaceAuction(this.contractWrapper, this.storage);\n    this.events = new ContractEvents(this.contractWrapper);\n  }\n\n  onNetworkUpdated(network: NetworkOrSignerOrProvider) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Convenience function to get either a direct or auction listing\n   *\n   * @param listingId - the listing id\n   * @returns either a direct or auction listing\n   */\n  public async getListing(\n    listingId: BigNumberish,\n  ): Promise<AuctionListing | DirectListing> {\n    const listing = await this.contractWrapper.readContract.listings(listingId);\n    if (listing.assetContract === AddressZero) {\n      throw new ListingNotFoundError(this.getAddress(), listingId.toString());\n    }\n    switch (listing.listingType) {\n      case ListingType.Auction: {\n        return await this.auction.mapListing(listing);\n      }\n      case ListingType.Direct: {\n        return await this.direct.mapListing(listing);\n      }\n      default: {\n        throw new Error(`Unknown listing type: ${listing.listingType}`);\n      }\n    }\n  }\n\n  /**\n   * Get all active listings\n   *\n   * @remarks Fetch all the active listings from this marketplace contract.\n   * @example\n   * ```javascript\n   * const listings = await contract.getActiveListings();\n   * const priceOfFirstActiveListing = listings[0].price;\n   * ```\n   */\n\n  public async getActiveListings(): Promise<\n    (AuctionListing | DirectListing)[]\n  > {\n    const rawListings = await this.getAllListingsNoFilter();\n    return rawListings.filter((l) => {\n      return (\n        (l.type === ListingType.Auction &&\n          BigNumber.from(l.endTimeInEpochSeconds).gt(\n            BigNumber.from(Math.floor(Date.now() / 1000)),\n          )) ||\n        (l.type === ListingType.Direct && l.quantity > 0)\n      );\n    });\n  }\n\n  /**\n   * Get all the listings\n   *\n   * @remarks Fetch all the listings from this marketplace contract, including sold ones.\n   * @example\n   * ```javascript\n   * const listings = await contract.getAllListings();\n   * const priceOfFirstListing = listings[0].price;\n   * ```\n   *\n   * @param filter - optional filter parameters\n   */\n  public async getAllListings(\n    filter?: MarketplaceFilter,\n  ): Promise<(AuctionListing | DirectListing)[]> {\n    const start = BigNumber.from(filter?.start || 0).toNumber();\n    const count = BigNumber.from(\n      filter?.count || DEFAULT_QUERY_ALL_COUNT,\n    ).toNumber();\n    let rawListings = await this.getAllListingsNoFilter();\n\n    if (filter) {\n      if (filter.seller) {\n        rawListings = rawListings.filter(\n          (seller) =>\n            seller.sellerAddress.toString().toLowerCase() ===\n            filter?.seller?.toString().toLowerCase(),\n        );\n      }\n      if (filter.tokenContract) {\n        if (!filter.tokenId) {\n          rawListings = rawListings.filter(\n            (tokenContract) =>\n              tokenContract.assetContractAddress.toString().toLowerCase() ===\n              filter?.tokenContract?.toString().toLowerCase(),\n          );\n        } else {\n          rawListings = rawListings.filter(\n            (tokenContract) =>\n              tokenContract.assetContractAddress.toString().toLowerCase() ===\n                filter?.tokenContract?.toString().toLowerCase() &&\n              tokenContract.tokenId.toString() === filter?.tokenId?.toString(),\n          );\n        }\n      }\n      rawListings = rawListings.filter((_, index) => index >= start);\n      rawListings = rawListings.slice(0, count);\n    }\n    return rawListings.filter((l) => l !== undefined) as (\n      | AuctionListing\n      | DirectListing\n    )[];\n  }\n\n  /**\n   * @internal\n   */\n  public getAll = this.getAllListings;\n\n  /**\n   * Get the total number of Listings\n   * @returns the total number listings on the marketplace\n   * @public\n   */\n  public async getTotalCount(): Promise<BigNumber> {\n    return await this.contractWrapper.readContract.totalListings();\n  }\n\n  /**\n   * Get whether listing is restricted only to addresses with the Lister role\n   */\n  public async isRestrictedToListerRoleOnly(): Promise<boolean> {\n    const anyoneCanList = await this.contractWrapper.readContract.hasRole(\n      getRoleHash(\"lister\"),\n      AddressZero,\n    );\n    return !anyoneCanList;\n  }\n\n  /**\n   * Get the buffer in basis points between offers\n   */\n  public async getBidBufferBps(): Promise<BigNumber> {\n    return this.contractWrapper.readContract.bidBufferBps();\n  }\n\n  /**\n   * get the buffer time in seconds between offers\n   */\n  public async getTimeBufferInSeconds(): Promise<BigNumber> {\n    return this.contractWrapper.readContract.timeBuffer();\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Purchase NFTs\n   * @remarks Buy a Direct or Auction listing on your marketplace.\n   * @example\n   * ```javascript\n   * // The listing ID of the asset you want to buy\n   * const listingId = 0;\n   * // Quantity of the asset you want to buy\n   * const quantityDesired = 1;\n   *\n   * await contract.buyoutListing(listingId, quantityDesired);\n   * ```\n   * @param listingId - the listing ID of the listing you want to buy\n   * @param quantityDesired - the quantity that you want to buy (for ERC1155 tokens)\n   * @param receiver - optional receiver of the bought listing if different from the connected wallet (for direct listings only)\n   */\n  public async buyoutListing(\n    listingId: BigNumberish,\n    quantityDesired?: BigNumberish,\n    receiver?: string,\n  ): Promise<TransactionResult> {\n    const listing = await this.contractWrapper.readContract.listings(listingId);\n    if (listing.listingId.toString() !== listingId.toString()) {\n      throw new ListingNotFoundError(this.getAddress(), listingId.toString());\n    }\n    switch (listing.listingType) {\n      case ListingType.Direct: {\n        invariant(\n          quantityDesired !== undefined,\n          \"quantityDesired is required when buying out a direct listing\",\n        );\n        return await this.direct.buyoutListing(\n          listingId,\n          quantityDesired,\n          receiver,\n        );\n      }\n      case ListingType.Auction: {\n        return await this.auction.buyoutListing(listingId);\n      }\n      default:\n        throw Error(`Unknown listing type: ${listing.listingType}`);\n    }\n  }\n\n  /**\n   * Set the Auction bid buffer\n   * @remarks A percentage (e.g. 5%) in basis points (5% = 500, 100% = 10000). A new bid is considered to be a winning bid only if its bid amount is at least the bid buffer (e.g. 5%) greater than the previous winning bid. This prevents buyers from making very slightly higher bids to win the auctioned items.\n   * @example\n   * ```javascript\n   * // the bid buffer in basis points\n   * const bufferBps = 500;\n   * await contract.setBidBufferBps(bufferBps);\n   * ```\n   * @param bufferBps - the bps value\n   */\n  public async setBidBufferBps(bufferBps: BigNumberish): Promise<void> {\n    await this.roles.verify(\n      [\"admin\"],\n      await this.contractWrapper.getSignerAddress(),\n    );\n\n    const timeBuffer = await this.getTimeBufferInSeconds();\n    await this.contractWrapper.sendTransaction(\"setAuctionBuffers\", [\n      timeBuffer,\n      BigNumber.from(bufferBps),\n    ]);\n  }\n\n  /**\n   * Set the Auction Time buffer:\n   * @remarks Measured in seconds (e.g. 15 minutes or 900 seconds). If a winning bid is made within the buffer of the auction closing (e.g. 15 minutes within the auction closing), the auction's closing time is increased by the buffer to prevent buyers from making last minute winning bids, and to give time to other buyers to make a higher bid if they wish to.\n   * @example\n   * ```javascript\n   * // the time buffer in seconds\n   * const bufferInSeconds = 60;\n   * await contract.setTimeBufferInSeconds(bufferInSeconds);\n   * ```\n   * @param bufferInSeconds - the seconds value\n   */\n  public async setTimeBufferInSeconds(\n    bufferInSeconds: BigNumberish,\n  ): Promise<void> {\n    await this.roles.verify(\n      [\"admin\"],\n      await this.contractWrapper.getSignerAddress(),\n    );\n\n    const bidBuffer = await this.getBidBufferBps();\n    await this.contractWrapper.sendTransaction(\"setAuctionBuffers\", [\n      BigNumber.from(bufferInSeconds),\n      bidBuffer,\n    ]);\n  }\n\n  /**\n   * Restrict listing NFTs only from the specified NFT contract address.\n   * It is possible to allow listing from multiple contract addresses.\n   * @param contractAddress - the NFT contract address\n   */\n  public async allowListingFromSpecificAssetOnly(contractAddress: string) {\n    const encoded = [];\n    const members = await this.roles.get(\"asset\");\n    if (members.includes(AddressZero)) {\n      encoded.push(\n        this.encoder.encode(\"revokeRole\", [getRoleHash(\"asset\"), AddressZero]),\n      );\n    }\n    encoded.push(\n      this.encoder.encode(\"grantRole\", [getRoleHash(\"asset\"), contractAddress]),\n    );\n\n    await this.contractWrapper.multiCall(encoded);\n  }\n\n  /**\n   * Allow listings from any NFT contract\n   */\n  public async allowListingFromAnyAsset() {\n    const encoded = [];\n    const members = await this.roles.get(\"asset\");\n    for (const addr in members) {\n      encoded.push(\n        this.encoder.encode(\"revokeRole\", [getRoleHash(\"asset\"), addr]),\n      );\n    }\n    encoded.push(\n      this.encoder.encode(\"grantRole\", [getRoleHash(\"asset\"), AddressZero]),\n    );\n    await this.contractWrapper.multiCall(encoded);\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  private async getAllListingsNoFilter(): Promise<\n    (AuctionListing | DirectListing)[]\n  > {\n    const listings = await Promise.all(\n      Array.from(\n        Array(\n          (await this.contractWrapper.readContract.totalListings()).toNumber(),\n        ).keys(),\n      ).map(async (i) => {\n        let listing;\n\n        try {\n          listing = await this.getListing(i);\n        } catch (err) {\n          return undefined;\n        }\n\n        if (listing.type === ListingType.Auction) {\n          return listing;\n        }\n\n        const valid = await this.direct.isStillValidListing(listing);\n        if (!valid) {\n          return undefined;\n        }\n\n        return listing;\n      }),\n    );\n    return listings.filter((l) => l !== undefined) as (\n      | AuctionListing\n      | DirectListing\n    )[];\n  }\n\n  // TODO: Complete method implementation with subgraph\n  // /**\n  //  * @beta - This method is not yet complete.\n  //  *\n  //  * @param listingId\n  //  * @returns\n  //  */\n  // public async getActiveOffers(listingId: BigNumberish): Promise<Offer[]> {\n  //   const listing = await this.validateDirectListing(BigNumber.from(listingId));\n\n  //   const offers = await this.readOnlyContract.offers(listing.id, \"\");\n\n  //   return await Promise.all(\n  //     offers.map(async (offer: any) => {\n  //       return await this.mapOffer(BigNumber.from(listingId), offer);\n  //     }),\n  //   );\n  // }\n}\n","import { UpdateableNetwork } from \"../core/interfaces/contract\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport {\n  IStorage,\n  NetworkOrSignerOrProvider,\n  TransactionResult,\n  TransactionResultWithId,\n} from \"../core\";\nimport { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport { ContractEncoder } from \"../core/classes/contract-encoder\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport {\n  IERC1155__factory,\n  IERC20__factory,\n  Pack as PackContract,\n  Pack__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { PacksContractSchema } from \"../schema/contracts/packs\";\nimport { ContractRoles } from \"../core/classes/contract-roles\";\nimport { NFTMetadata } from \"../schema/tokens/common\";\nimport {\n  PackAddedEvent,\n  PackOpenRequestedEvent,\n} from \"../@custom-thirdweb-dev/contracts/dist/Pack\";\nimport { BigNumber, BigNumberish, BytesLike, ethers } from \"ethers\";\nimport { fetchTokenMetadataForContract } from \"../common/nft\";\nimport {\n  IPackBatchArgs,\n  IPackCreateArgs,\n  PackMetadata,\n  PackMetadataWithBalance,\n  PackNFTMetadata,\n} from \"../types/packs\";\nimport { NotFoundError } from \"../common\";\nimport { CurrencyValue } from \"../types/currency\";\nimport { fetchCurrencyValue } from \"../common/currency\";\nimport { ChainlinkVrf } from \"../constants/chainlink\";\nimport { ContractRoyalty } from \"../core/classes/contract-royalty\";\nimport { GasCostEstimator } from \"../core/classes\";\nimport { ContractEvents } from \"../core/classes/contract-events\";\n\n/**\n * Create lootboxes of NFTs with rarity based open mechanics.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * // You can switch out this provider with any wallet or provider setup you like.\n * const provider = ethers.Wallet.createRandom();\n * const sdk = new ThirdwebSDK(provider);\n * const contract = sdk.getPack(\"{{contract_address}}\");\n * ```\n *\n * @public\n */\nexport class Pack implements UpdateableNetwork {\n  static contractType = \"pack\" as const;\n  static contractRoles = [\"admin\", \"minter\", \"pauser\", \"transfer\"] as const;\n  static contractFactory = Pack__factory;\n  /**\n   * @internal\n   */\n  static schema = PacksContractSchema;\n\n  private contractWrapper: ContractWrapper<PackContract>;\n  private storage: IStorage;\n\n  public metadata: ContractMetadata<PackContract, typeof Pack.schema>;\n  public roles: ContractRoles<PackContract, typeof Pack.contractRoles[number]>;\n  public encoder: ContractEncoder<PackContract>;\n  public events: ContractEvents<PackContract>;\n  public estimator: GasCostEstimator<PackContract>;\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per pack\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalty.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular pack\n   * contract.royalty.setTokenRoyaltyInfo(packId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n  public royalty: ContractRoyalty<PackContract, typeof Pack.schema>;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<PackContract>(\n      network,\n      address,\n      Pack.contractFactory.abi,\n      options,\n    ),\n  ) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.metadata = new ContractMetadata(\n      this.contractWrapper,\n      Pack.schema,\n      this.storage,\n    );\n    this.roles = new ContractRoles(this.contractWrapper, Pack.contractRoles);\n    this.royalty = new ContractRoyalty(this.contractWrapper, this.metadata);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n  }\n\n  onNetworkUpdated(network: NetworkOrSignerOrProvider) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a pack by id\n   * @param packId - the id of the pack to fetch\n   * @returns the pack metadata\n   */\n  public async get(packId: BigNumberish): Promise<PackMetadata> {\n    const [meta, state, supply] = await Promise.all([\n      fetchTokenMetadataForContract(\n        this.getAddress(),\n        this.contractWrapper.getProvider(),\n        packId,\n        this.storage,\n      ),\n      this.contractWrapper.readContract.packs(packId),\n      this.contractWrapper.readContract\n        .totalSupply(packId)\n        .catch(() => BigNumber.from(\"0\")),\n    ]);\n    return {\n      id: BigNumber.from(packId).toString(),\n      metadata: meta,\n      creator: state.creator,\n      currentSupply: supply,\n      openStart: state.openStart.gt(0)\n        ? new Date(state.openStart.toNumber() * 1000)\n        : null,\n    };\n  }\n\n  /**\n   * Get Pack Data\n   *\n   * @remarks Get data associated with every pack in this contract.\n   *\n   * @example\n   * ```javascript\n   * const packs = await contract.getAll();\n   * console.log(packs);\n   * ```\n   *\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  public async getAll(): Promise<PackMetadata[]> {\n    const maxId = (\n      await this.contractWrapper.readContract.nextTokenId()\n    ).toNumber();\n    return await Promise.all(\n      Array.from(Array(maxId).keys()).map((i) => this.get(i.toString())),\n    );\n  }\n\n  /**\n   * Get Pack Reward Data\n   *\n   * @remarks Get data associated with the rewards inside a specified pack\n   *\n   * @example\n   * ```javascript\n   * // The pack ID of the pack whos rewards you want to get\n   * const packId = 0;\n   *\n   * const nfts = await contract.getNFTs(packId);\n   * console.log(nfts);\n   * ```\n   *\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  public async getNFTs(packId: string): Promise<PackNFTMetadata[]> {\n    const packReward =\n      await this.contractWrapper.readContract.getPackWithRewards(packId);\n    if (!packReward.source) {\n      throw new NotFoundError();\n    }\n    const rewards = await Promise.all(\n      packReward.tokenIds.map((tokenId) =>\n        fetchTokenMetadataForContract(\n          packReward.source,\n          this.contractWrapper.getProvider(),\n          tokenId.toString(),\n          this.storage,\n        ),\n      ),\n    );\n    return rewards.map((reward, i) => ({\n      supply: packReward.amountsPacked[i],\n      metadata: reward,\n    }));\n  }\n\n  /**\n   * Get Pack Balance\n   *\n   * @remarks Get a wallets pack balance (number of a specific packs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check pack balance\n   * const address = \"{{wallet_address}}\";\n   * // The token ID of the pack you want to check the wallets balance of\n   * const tokenId = \"0\"\n   *\n   * const balance = await contract.balanceOf(address, tokenId);\n   * console.log(balance);\n   * ```\n   */\n  public async balanceOf(address: string, tokenId: string): Promise<BigNumber> {\n    return await this.contractWrapper.readContract.balanceOf(address, tokenId);\n  }\n\n  public async balance(tokenId: string): Promise<BigNumber> {\n    return await this.balanceOf(\n      await this.contractWrapper.getSignerAddress(),\n      tokenId,\n    );\n  }\n\n  public async isApproved(address: string, operator: string): Promise<boolean> {\n    return await this.contractWrapper.readContract.isApprovedForAll(\n      address,\n      operator,\n    );\n  }\n\n  public async getLinkBalance(): Promise<CurrencyValue> {\n    const chainId = await this.contractWrapper.getChainID();\n    const chainlink = ChainlinkVrf[chainId];\n    const erc20 = IERC20__factory.connect(\n      chainlink.linkTokenAddress,\n      this.contractWrapper.getProvider(),\n    );\n    return await fetchCurrencyValue(\n      this.contractWrapper.getProvider(),\n      chainlink.linkTokenAddress,\n      await erc20.balanceOf(this.getAddress()),\n    );\n  }\n\n  /**\n   * `getOwned` is a convenience method for getting all owned tokens\n   * for a particular wallet.\n   *\n   * @param _address - The address to check for token ownership\n   * @returns An array of PackMetadataWithBalance objects that are owned by the address\n   */\n  public async getOwned(_address?: string): Promise<PackMetadataWithBalance[]> {\n    const address = _address\n      ? _address\n      : await this.contractWrapper.getSignerAddress();\n    const maxId = await this.contractWrapper.readContract.nextTokenId();\n    const balances = await this.contractWrapper.readContract.balanceOfBatch(\n      Array(maxId.toNumber()).fill(address),\n      Array.from(Array(maxId.toNumber()).keys()),\n    );\n\n    const ownedBalances = balances\n      .map((b, i) => {\n        return {\n          tokenId: i,\n          balance: b,\n        };\n      })\n      .filter((b) => b.balance.gt(0));\n    return await Promise.all(\n      ownedBalances.map(async ({ tokenId, balance }) => {\n        const token = await this.get(tokenId.toString());\n        return { ...token, ownedByAddress: balance };\n      }),\n    );\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Open Pack\n   *\n   * @remarks Open a pack to burn it and obtain the reward asset inside.\n   *\n   * @example\n   * ```javascript\n   * // The pack ID of the asset you want to buy\n   * const packId = \"0\";\n   * const tx = await contract.open(packId);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const packId = tx.id; // the id of the pack that was opened\n   * const rewards = tx.data(); // the contents of the opened pack\n   * ```\n   */\n  public async open(\n    packId: string,\n  ): Promise<TransactionResultWithId<NFTMetadata>[]> {\n    const receipt = await this.contractWrapper.sendTransaction(\"openPack\", [\n      packId,\n    ]);\n    const logs = this.contractWrapper.parseLogs<PackOpenRequestedEvent>(\n      \"PackOpenRequested\",\n      receipt?.logs,\n    );\n    if (logs.length === 0) {\n      throw new Error(\"Failed to open pack\");\n    }\n    const event = logs[0];\n\n    const requestId = event.args.requestId;\n    const opener = event.args.opener;\n\n    // TODO type this\n    const fulfillEvent: any = await new Promise((resolve) => {\n      this.contractWrapper.readContract.once(\n        this.contractWrapper.readContract.filters.PackOpenFulfilled(\n          null,\n          opener,\n        ),\n        (_packId, _opener, _requestId, rewardContract, rewardIds) => {\n          if (requestId === _requestId) {\n            resolve({\n              packId: _packId,\n              opener: _opener,\n              requestId,\n              rewardContract,\n              rewardIds,\n            });\n          }\n        },\n      );\n    });\n\n    const { rewardIds, rewardContract } = fulfillEvent;\n\n    return rewardIds.map((rewardId: BigNumber) => ({\n      id: packId,\n      receipt,\n      data: () =>\n        fetchTokenMetadataForContract(\n          rewardContract,\n          this.contractWrapper.getProvider(),\n          rewardId.toString(),\n          this.storage,\n        ),\n    }));\n  }\n\n  /**\n   * Create Pack\n   *\n   * @remarks Create a new pack with its own rewards.\n   *\n   * @example\n   * ```javascript\n   * // Data to create the pack\n   * const pack = {\n   *   // The address of the contract that holds the rewards you want to include\n   *   assetContract: \"0x...\",\n   *   // The metadata of the pack\n   *   metadata: {\n   *     name: \"Cool Pack\",\n   *     description: \"This is a cool pack\",\n   *     // This can be an image url or image file\n   *     image: readFileSync(\"path/to/image.png\"),\n   *   },\n   *   // The NFTs you want to include in the pack\n   *   assets: [\n   *     {\n   *       tokenId: 0, // The token ID of the asset you want to add\n   *       amount: 1, // The amount of the asset you want to add\n   *     }, {\n   *       tokenId: 1,\n   *       amount: 1,\n   *     }\n   *   ],\n   * };\n   *\n   * await contract.create(pack);\n   * ```\n   *\n   * @param args - Args for the pack creation\n   * @returns - The newly created pack metadata\n   */\n  public async create(\n    args: IPackCreateArgs,\n  ): Promise<TransactionResultWithId<PackMetadata>> {\n    const asset = IERC1155__factory.connect(\n      args.assetContract,\n      this.contractWrapper.getSigner() || this.contractWrapper.getProvider(),\n    );\n\n    const from = await this.contractWrapper.getSignerAddress();\n    const ids = args.assets.map((a) => a.tokenId);\n    const amounts = args.assets.map((a) => a.amount);\n    const uri = await this.storage.uploadMetadata(args.metadata);\n\n    const packParams = ethers.utils.defaultAbiCoder.encode(\n      [\"string\", \"uint256\", \"uint256\"],\n      [uri, args.secondsUntilOpenStart || 0, args.rewardsPerOpen || 1],\n    );\n\n    // TODO: make it gasless\n    const tx = await asset.safeBatchTransferFrom(\n      from,\n      this.getAddress(),\n      ids,\n      amounts,\n      packParams,\n      await this.contractWrapper.getCallOverrides(),\n    );\n\n    const receipt = await tx.wait();\n    const log = this.contractWrapper.parseLogs<PackAddedEvent>(\n      \"PackAdded\",\n      receipt.logs,\n    );\n    if (log.length === 0) {\n      throw new Error(\"PackCreated event not found\");\n    }\n    const packId = log[0].args.packId;\n    return { id: packId, receipt, data: () => this.get(packId.toString()) };\n  }\n\n  /**\n   * Transfer Pack\n   *\n   * @remarks Transfer a pack from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the pack to\n   * const toAddress = \"0x...\";\n   *\n   * // The token ID of the pack you want to send\n   * const tokenId = \"0\";\n   *\n   * // The number of packs you want to send\n   * const amount = 1;\n   *\n   * await contract.transfer(toAddress, tokenId, amount);\n   * ```\n   */\n  public async transfer(\n    to: string,\n    tokenId: string,\n    amount: BigNumber,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"safeTransferFrom\", [\n        await this.contractWrapper.getSignerAddress(),\n        to,\n        tokenId,\n        amount,\n        [0],\n      ]),\n    };\n  }\n\n  public async transferFrom(\n    from: string,\n    to: string,\n    args: IPackBatchArgs,\n    data: BytesLike = [0],\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"safeTransferFrom\", [\n        from,\n        to,\n        args.tokenId,\n        args.amount,\n        data,\n      ]),\n    };\n  }\n\n  public async transferBatchFrom(\n    from: string,\n    to: string,\n    args: IPackBatchArgs[],\n    data: BytesLike = [0],\n  ): Promise<TransactionResult> {\n    const ids = args.map((a) => a.tokenId);\n    const amounts = args.map((a) => a.amount);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\n        \"safeBatchTransferFrom\",\n        [from, to, ids, amounts, data],\n      ),\n    };\n  }\n\n  public async setApproval(\n    operator: string,\n    approved = true,\n  ): Promise<TransactionResult> {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"setApprovalForAll\", [\n        operator,\n        approved,\n      ]),\n    };\n  }\n\n  public async depositLink(amount: BigNumberish): Promise<TransactionResult> {\n    const chainId = await this.contractWrapper.getChainID();\n    const chainlink = ChainlinkVrf[chainId];\n    const erc20 = IERC20__factory.connect(\n      chainlink.linkTokenAddress,\n      this.contractWrapper.getProvider(),\n    );\n    // TODO: make it gasless\n    const tx = await erc20.transfer(\n      this.getAddress(),\n      amount,\n      await this.contractWrapper.getCallOverrides(),\n    );\n    return { receipt: await tx.wait() };\n  }\n\n  // TODO new withdraw LINK function in contract\n  // public async withdrawLink(to: string, amount: BigNumberish) {\n  //   const chainId = await this.contractWrapper.getChainID();\n  //   const chainlink = ChainlinkVrf[chainId];\n  //   await this.contractWrapper.sendTransaction(\"transferERC20\", [\n  //     chainlink.linkTokenAddress,\n  //     to,\n  //     amount,\n  //   ]);\n  // }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n}\n","import { ContractRoles } from \"../core/classes/contract-roles\";\nimport {\n  DropERC721,\n  DropERC721__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, BytesLike, ethers } from \"ethers\";\nimport { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport { ContractRoyalty } from \"../core/classes/contract-royalty\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport { IStorage } from \"../core/interfaces/IStorage\";\nimport {\n  NetworkOrSignerOrProvider,\n  TransactionResultWithId,\n} from \"../core/types\";\nimport { DropErc721ContractSchema } from \"../schema/contracts/drop-erc721\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport {\n  CommonNFTInput,\n  NFTMetadata,\n  NFTMetadataInput,\n  NFTMetadataOwner,\n} from \"../schema/tokens/common\";\nimport { DEFAULT_QUERY_ALL_COUNT, QueryAllParams } from \"../types/QueryParams\";\nimport { DropErc721ClaimConditions } from \"../core/classes/drop-erc721-claim-conditions\";\nimport { Erc721 } from \"../core/classes/erc-721\";\nimport { ContractPrimarySale } from \"../core/classes/contract-sales\";\nimport { prepareClaim } from \"../common/claim-conditions\";\nimport { ContractEncoder } from \"../core/classes/contract-encoder\";\nimport { DelayedReveal } from \"../core/classes/delayed-reveal\";\nimport { GasCostEstimator } from \"../core/classes\";\nimport { ClaimVerification } from \"../types\";\nimport { TokensLazyMintedEvent } from \"../@custom-thirdweb-dev/contracts/dist/DropERC1155\";\nimport { TokensClaimedEvent } from \"../@custom-thirdweb-dev/contracts/dist/DropERC721\";\nimport { ContractEvents } from \"../core/classes/contract-events\";\nimport { ContractInterceptor } from \"../core/classes/contract-interceptor\";\n\n/**\n * Setup a collection of one-of-one NFTs that are minted as users claim them.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * // You can switch out this provider with any wallet or provider setup you like.\n * const provider = ethers.Wallet.createRandom();\n * const sdk = new ThirdwebSDK(provider);\n * const contract = sdk.getNFTDrop(\"{{contract_address}}\");\n * ```\n *\n * @public\n */\nexport class NFTDrop extends Erc721<DropERC721> {\n  static contractType = \"nft-drop\" as const;\n  static contractRoles = [\"admin\", \"minter\", \"transfer\"] as const;\n  static contractFactory = DropERC721__factory;\n  /**\n   * @internal\n   */\n  static schema = DropErc721ContractSchema;\n\n  public encoder: ContractEncoder<DropERC721>;\n  public estimator: GasCostEstimator<DropERC721>;\n  public metadata: ContractMetadata<DropERC721, typeof NFTDrop.schema>;\n  public primarySale: ContractPrimarySale<DropERC721>;\n  public events: ContractEvents<DropERC721>;\n  public roles: ContractRoles<DropERC721, typeof NFTDrop.contractRoles[number]>;\n  /**\n   * @internal\n   */\n  public interceptor: ContractInterceptor<DropERC721>;\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalty.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalty.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n  public royalty: ContractRoyalty<DropERC721, typeof NFTDrop.schema>;\n  /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   * await dropContract.claimConditions.set(claimConditions);\n   * ```\n   */\n  public claimConditions: DropErc721ClaimConditions;\n  /**\n   * Delayed reveal\n   * @remarks Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until you reveal them\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, and will be converted to the real NFT at reveal time\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * // Whenever you're ready, reveal your NFTs at any time\n   * const batchId = 0; // the batch to reveal\n   * await contract.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   */\n  public revealer: DelayedReveal<DropERC721>;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<DropERC721>(\n      network,\n      address,\n      NFTDrop.contractFactory.abi,\n      options,\n    ),\n  ) {\n    super(contractWrapper, storage, options);\n    this.metadata = new ContractMetadata(\n      this.contractWrapper,\n      NFTDrop.schema,\n      this.storage,\n    );\n    this.roles = new ContractRoles(this.contractWrapper, NFTDrop.contractRoles);\n    this.royalty = new ContractRoyalty(this.contractWrapper, this.metadata);\n    this.primarySale = new ContractPrimarySale(this.contractWrapper);\n    this.claimConditions = new DropErc721ClaimConditions(\n      this.contractWrapper,\n      this.metadata,\n      this.storage,\n    );\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n    this.revealer = new DelayedReveal<DropERC721>(\n      this.contractWrapper,\n      this.storage,\n    );\n    this.interceptor = new ContractInterceptor(this.contractWrapper);\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get All Claimed NFTs\n   *\n   * @remarks Fetch all the NFTs (and their owners) that have been claimed in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const claimedNFTs = await contract.getAllClaimed();\n   * const firstOwner = claimedNFTs[0].owner;\n   * ```\n   *\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata and their ownersfor all NFTs queried.\n   */\n  public async getAllClaimed(\n    queryParams?: QueryAllParams,\n  ): Promise<NFTMetadataOwner[]> {\n    const start = BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = BigNumber.from(\n      queryParams?.count || DEFAULT_QUERY_ALL_COUNT,\n    ).toNumber();\n    const maxId = Math.min(\n      (await this.contractWrapper.readContract.nextTokenIdToClaim()).toNumber(),\n      start + count,\n    );\n    return await Promise.all(\n      Array.from(Array(maxId).keys()).map((i) => this.get(i.toString())),\n    );\n  }\n\n  /**\n   * Get All Unclaimed NFTs\n   *\n   * @remarks Fetch all the NFTs that have been not been claimed yet in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const unclaimedNFTs = await contract.getAllUnclaimed();\n   * const firstUnclaimedNFT = unclaimedNFTs[0].name;\n   * ```\n   *\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  public async getAllUnclaimed(\n    queryParams?: QueryAllParams,\n  ): Promise<NFTMetadata[]> {\n    const start = BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = BigNumber.from(\n      queryParams?.count || DEFAULT_QUERY_ALL_COUNT,\n    ).toNumber();\n    const maxId = BigNumber.from(\n      Math.min(\n        (\n          await this.contractWrapper.readContract.nextTokenIdToMint()\n        ).toNumber(),\n        start + count,\n      ),\n    );\n    const unmintedId =\n      await this.contractWrapper.readContract.nextTokenIdToClaim();\n    return await Promise.all(\n      Array.from(Array(maxId.sub(unmintedId).toNumber()).keys()).map((i) =>\n        this.getTokenMetadata(unmintedId.add(i).toString()),\n      ),\n    );\n  }\n\n  /**\n   * Get the claimed supply\n   *\n   * @remarks Get the number of claimed NFTs in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const claimedNFTCount = await contract.totalClaimedSupply();\n   * console.log(`NFTs claimed so far: ${claimedNFTCount}`);\n   * ```\n   * @returns the unclaimed supply\n   */\n  public async totalClaimedSupply(): Promise<BigNumber> {\n    return await this.contractWrapper.readContract.nextTokenIdToClaim();\n  }\n\n  /**\n   * Get the unclaimed supply\n   *\n   * @remarks Get the number of unclaimed NFTs in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const unclaimedNFTCount = await contract.totalUnclaimedSupply();\n   * console.log(`NFTs left to claim: ${unclaimedNFTCount}`);\n   * ```\n   * @returns the unclaimed supply\n   */\n  public async totalUnclaimedSupply(): Promise<BigNumber> {\n    return (await this.contractWrapper.readContract.nextTokenIdToMint()).sub(\n      await this.totalClaimedSupply(),\n    );\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create a batch of unique NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many unique NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.createBatch(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   *\n   * @param metadatas - The metadata to include in the batch.\n   */\n  public async createBatch(\n    metadatas: NFTMetadataInput[],\n  ): Promise<TransactionResultWithId<NFTMetadata>[]> {\n    const startFileNumber =\n      await this.contractWrapper.readContract.nextTokenIdToMint();\n    const batch = await this.storage.uploadMetadataBatch(\n      metadatas.map((m) => CommonNFTInput.parse(m)),\n      startFileNumber.toNumber(),\n      this.contractWrapper.readContract.address,\n      await this.contractWrapper.getSigner()?.getAddress(),\n    );\n    const baseUri = batch.baseUri;\n    const receipt = await this.contractWrapper.sendTransaction(\"lazyMint\", [\n      batch.metadataUris.length,\n      baseUri.endsWith(\"/\") ? baseUri : `${baseUri}/`,\n      ethers.utils.toUtf8Bytes(\"\"),\n    ]);\n    const event = this.contractWrapper.parseLogs<TokensLazyMintedEvent>(\n      \"TokensLazyMinted\",\n      receipt?.logs,\n    );\n    const startingIndex = event[0].args.startTokenId;\n    const endingIndex = event[0].args.endTokenId;\n    const results = [];\n    for (let id = startingIndex; id.lte(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.getTokenMetadata(id),\n      });\n    }\n    return results;\n  }\n\n  /**\n   * Claim unique NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 1; // how many unique NFTs you want to claim\n   *\n   * const tx = await contract.claimTo(address, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const claimedTokenId = tx.id; // the id of the NFT claimed\n   * const claimedNFT = await tx.data(); // (optional) get the claimed NFT metadata\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param proofs - Array of proofs\n   *\n   * @returns - an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */\n  public async claimTo(\n    destinationAddress: string,\n    quantity: BigNumberish,\n    proofs: BytesLike[] = [hexZeroPad([0], 32)],\n  ): Promise<TransactionResultWithId<NFTMetadataOwner>[]> {\n    const claimVerification = await this.prepareClaim(quantity, proofs);\n    const receipt = await this.contractWrapper.sendTransaction(\n      \"claim\",\n      [\n        destinationAddress,\n        quantity,\n        claimVerification.currencyAddress,\n        claimVerification.price,\n        claimVerification.proofs,\n        claimVerification.maxQuantityPerTransaction,\n      ],\n      claimVerification.overrides,\n    );\n    const event = this.contractWrapper.parseLogs<TokensClaimedEvent>(\n      \"TokensClaimed\",\n      receipt?.logs,\n    );\n    const startingIndex: BigNumber = event[0].args.startTokenId;\n    const endingIndex = startingIndex.add(quantity);\n    const results = [];\n    for (let id = startingIndex; id.lt(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.get(id),\n      });\n    }\n    return results;\n  }\n\n  /**\n   * Claim NFTs to the connected wallet.\n   *\n   * @remarks See {@link NFTDrop.claimTo}\n   *\n   * @returns - an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */\n  public async claim(\n    quantity: BigNumberish,\n    proofs: BytesLike[] = [hexZeroPad([0], 32)],\n  ): Promise<TransactionResultWithId<NFTMetadataOwner>[]> {\n    return this.claimTo(\n      await this.contractWrapper.getSignerAddress(),\n      quantity,\n      proofs,\n    );\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Returns proofs and the overrides required for the transaction.\n   *\n   * @returns - `overrides` and `proofs` as an object.\n   */\n  private async prepareClaim(\n    quantity: BigNumberish,\n    proofs: BytesLike[] = [hexZeroPad([0], 32)],\n  ): Promise<ClaimVerification> {\n    return prepareClaim(\n      quantity,\n      await this.claimConditions.getActive(),\n      (await this.metadata.get()).merkle,\n      this.contractWrapper,\n      this.storage,\n      proofs,\n    );\n  }\n}\n","import { BigNumber, BigNumberish, ethers } from \"ethers\";\nimport { ContractWrapper } from \"./contract-wrapper\";\nimport { DropERC721 } from \"../../@custom-thirdweb-dev/contracts\";\nimport {\n  CommonNFTInput,\n  NFTMetadata,\n  NFTMetadataInput,\n} from \"../../schema/tokens/common\";\nimport { IStorage, TransactionResult, TransactionResultWithId } from \"../index\";\nimport { fetchTokenMetadata } from \"../../common/nft\";\nimport { BatchToReveal } from \"../../types/delayed-reveal\";\nimport { TokensLazyMintedEvent } from \"../../@custom-thirdweb-dev/contracts/dist/DropERC721\";\n\n/**\n * Handles delayed reveal logic\n * @public\n */\nexport class DelayedReveal<T extends DropERC721> {\n  private contractWrapper: ContractWrapper<T>;\n  private storage: IStorage;\n\n  constructor(contractWrapper: ContractWrapper<T>, storage: IStorage) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n\n  /**\n   * Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until your reveal them!\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, until the reveal happens!\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * // Whenever you're ready, reveal your NFTs at any time!\n   * const batchId = 0; // the batch to reveal\n   * await contract.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   * @param placeholder - the placeholder NFT to show before the reveal\n   * @param metadatas - the final NFTs that will be hidden\n   * @param password - the password that will be used to reveal these NFTs\n   */\n  public async createDelayedRevealBatch(\n    placeholder: NFTMetadataInput,\n    metadatas: NFTMetadataInput[],\n    password: string,\n  ): Promise<TransactionResultWithId[]> {\n    if (!password) {\n      throw new Error(\"Password is required\");\n    }\n\n    const { baseUri: placeholderUri } = await this.storage.uploadMetadataBatch(\n      [CommonNFTInput.parse(placeholder)],\n      0,\n      this.contractWrapper.readContract.address,\n      await this.contractWrapper.getSigner()?.getAddress(),\n    );\n\n    const startFileNumber =\n      await this.contractWrapper.readContract.nextTokenIdToMint();\n\n    const batch = await this.storage.uploadMetadataBatch(\n      metadatas.map((m) => CommonNFTInput.parse(m)),\n      startFileNumber.toNumber(),\n      this.contractWrapper.readContract.address,\n      await this.contractWrapper.getSigner()?.getAddress(),\n    );\n\n    const baseUri = batch.baseUri;\n    const baseUriId = await this.contractWrapper.readContract.getBaseURICount();\n    const encryptedBaseUri =\n      await this.contractWrapper.readContract.encryptDecrypt(\n        ethers.utils.toUtf8Bytes(\n          baseUri.endsWith(\"/\") ? baseUri : `${baseUri}/`,\n        ),\n        await this.hashDelayRevealPasword(baseUriId, password),\n      );\n\n    const receipt = await this.contractWrapper.sendTransaction(\"lazyMint\", [\n      batch.metadataUris.length,\n      placeholderUri.endsWith(\"/\") ? placeholderUri : `${placeholderUri}/`,\n      encryptedBaseUri,\n    ]);\n\n    const events = this.contractWrapper.parseLogs<TokensLazyMintedEvent>(\n      \"TokensLazyMinted\",\n      receipt?.logs,\n    );\n    const startingIndex = events[0].args.startTokenId;\n    const endingIndex = events[0].args.endTokenId;\n    const results = [];\n    for (let id = startingIndex; id.lte(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n      });\n    }\n    return results;\n  }\n\n  /**\n   * Reveal a batch of hidden NFTs\n   * @param batchId - the id of the batch to reveal\n   * @param password - the password\n   */\n  public async reveal(\n    batchId: BigNumberish,\n    password: string,\n  ): Promise<TransactionResult> {\n    if (!password) {\n      throw new Error(\"Password is required\");\n    }\n    const key = await this.hashDelayRevealPasword(batchId, password);\n    // performing the reveal locally to make sure it'd succeed before sending the transaction\n    try {\n      const decryptedUri = await this.contractWrapper\n        .callStatic()\n        .reveal(batchId, key);\n      // basic sanity check for making sure decryptedUri is valid\n      // this is optional because invalid decryption key would result in non-utf8 bytes and\n      // ethers would throw when trying to decode it\n      if (!decryptedUri.includes(\"://\") || !decryptedUri.endsWith(\"/\")) {\n        throw new Error(\"invalid password\");\n      }\n    } catch (e) {\n      throw new Error(\"invalid password\");\n    }\n\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"reveal\", [\n        batchId,\n        key,\n      ]),\n    };\n  }\n\n  /**\n   * Gets the list of unrevealed NFT batches.\n   */\n  public async getBatchesToReveal(): Promise<BatchToReveal[]> {\n    const count = await this.contractWrapper.readContract.getBaseURICount();\n    if (count.isZero()) {\n      return [];\n    }\n\n    const countRangeArray = Array.from(Array(count.toNumber()).keys());\n\n    // map over to get the base uri indices, which should be the end token id of every batch\n    const uriIndices = await Promise.all(\n      countRangeArray.map((i) =>\n        this.contractWrapper.readContract.baseURIIndices(i),\n      ),\n    );\n\n    // first batch always start from 0. don't need to fetch the last batch so pop it from the range array\n    const uriIndicesWithZeroStart = uriIndices.slice(0, uriIndices.length - 1);\n\n    // returns the token uri for each batches. first batch always starts from token id 0.\n    const tokenUris = await Promise.all(\n      Array.from([0, ...uriIndicesWithZeroStart]).map((i) =>\n        this.contractWrapper.readContract.tokenURI(i),\n      ),\n    );\n\n    const tokenMetadatas = await Promise.all(\n      Array.from([0, ...uriIndicesWithZeroStart]).map((i) =>\n        this.getNftMetadata(i.toString()),\n      ),\n    );\n\n    // index is the uri indicies, which is end token id. different from uris\n    const encryptedBaseUris = await Promise.all(\n      Array.from([...uriIndices]).map((i) =>\n        this.contractWrapper.readContract.encryptedBaseURI(i),\n      ),\n    );\n\n    return tokenUris\n      .map((uri, index) => ({\n        batchId: BigNumber.from(index),\n        batchUri: uri,\n        placeholderMetadata: tokenMetadatas[index],\n      }))\n      .filter(\n        (_, index) => ethers.utils.hexDataLength(encryptedBaseUris[index]) > 0,\n      );\n  }\n\n  /**\n   * Algorithm to hash delay reveal password, so we don't broadcast the input password on-chain.\n   *\n   * @internal\n   */\n  private async hashDelayRevealPasword(\n    batchTokenIndex: BigNumberish,\n    password: string,\n  ) {\n    const chainId = await this.contractWrapper.getChainID();\n    const contractAddress = this.contractWrapper.readContract.address;\n    return ethers.utils.solidityKeccak256(\n      [\"string\", \"uint256\", \"uint256\", \"address\"],\n      [password, chainId, batchTokenIndex, contractAddress],\n    );\n  }\n\n  private async getNftMetadata(tokenId: BigNumberish): Promise<NFTMetadata> {\n    const tokenUri = await this.contractWrapper.readContract.tokenURI(tokenId);\n    return fetchTokenMetadata(tokenId, tokenUri, this.storage);\n  }\n}\n","import { NFTCollection } from \"./nft-collection\";\nimport { EditionDrop } from \"./edition-drop\";\nimport { Edition } from \"./edition\";\nimport { Token } from \"./token\";\nimport { Vote } from \"./vote\";\nimport { Split } from \"./split\";\nimport { Marketplace } from \"./marketplace\";\nimport { Pack } from \"./pack\";\nimport { NFTDrop } from \"./nft-drop\";\n\n/**\n * @internal\n */\nexport const CONTRACTS_MAP = {\n  [NFTDrop.contractType]: NFTDrop,\n  [NFTCollection.contractType]: NFTCollection,\n  [EditionDrop.contractType]: EditionDrop,\n  [Edition.contractType]: Edition,\n  [Token.contractType]: Token,\n  [Vote.contractType]: Vote,\n  [Split.contractType]: Split,\n  [Marketplace.contractType]: Marketplace,\n  [Pack.contractType]: Pack,\n} as const;\n\n/**\n * @internal\n */\nexport const REMOTE_CONTRACT_NAME = {\n  [NFTDrop.contractType]: \"DropERC721\",\n  [NFTCollection.contractType]: \"TokenERC721\",\n  [EditionDrop.contractType]: \"DropERC1155\",\n  [Edition.contractType]: \"TokenERC1155\",\n  [Token.contractType]: \"TokenERC20\",\n  [Vote.contractType]: \"VoteERC20\",\n  [Split.contractType]: \"Split\",\n  [Marketplace.contractType]: \"Marketplace\",\n  [Pack.contractType]: \"Pack\",\n} as const;\n\n/**\n * @internal\n */\nexport const REMOTE_CONTRACT_TO_CONTRACT_TYPE = {\n  DropERC721: NFTDrop.contractType,\n  TokenERC721: NFTCollection.contractType,\n  DropERC1155: EditionDrop.contractType,\n  TokenERC1155: Edition.contractType,\n  TokenERC20: Token.contractType,\n  VoteERC20: Vote.contractType,\n  Split: Split.contractType,\n  Marketplace: Marketplace.contractType,\n  Pack: Pack.contractType,\n} as const;\n","import {\n  CommonContractOutputSchema,\n  CommonContractSchema,\n  CommonPlatformFeeSchema,\n  CommonPrimarySaleSchema,\n  CommonRoyaltySchema,\n  CommonSymbolSchema,\n  CommonTrustedForwarderSchema,\n  MerkleSchema,\n} from \"./common\";\n\nexport const CustomContractInput = CommonContractSchema.merge(\n  CommonRoyaltySchema.merge(MerkleSchema).merge(CommonSymbolSchema).partial(),\n);\n\nexport const CustomContractOutput = CommonContractOutputSchema.merge(\n  CommonRoyaltySchema.merge(MerkleSchema).merge(CommonSymbolSchema).partial(),\n);\n\nexport const CustomContractDeploy = CustomContractInput.merge(\n  CommonPlatformFeeSchema.merge(CommonPrimarySaleSchema)\n    .merge(CommonTrustedForwarderSchema)\n    .partial(),\n);\n\nexport const CustomContractSchema = {\n  deploy: CustomContractDeploy,\n  output: CustomContractOutput,\n  input: CustomContractInput,\n};\n","import { BaseContract } from \"ethers\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport { Interface } from \"@ethersproject/abi\";\n\n/**\n * Type guards a contract to a known type if it matches the corresponding interface\n * @internal\n * @param contractWrapper\n * @param interfaceToMatch\n */\nexport function implementsInterface<C extends BaseContract>(\n  contractWrapper: ContractWrapper<BaseContract>,\n  interfaceToMatch: Interface,\n): contractWrapper is ContractWrapper<C> {\n  return matchesInterface(contractWrapper.readContract, interfaceToMatch);\n}\n\n/**\n * Checks the intersection of the 'functions' objects of a given contract and interface\n * @internal\n * @param contract\n * @param interfaceToMatch\n */\nfunction matchesInterface(contract: BaseContract, interfaceToMatch: Interface) {\n  // returns true if all the functions in `interfaceToMatch` are found in `contract`\n  const contractFn = contract.interface.functions;\n  const interfaceFn = interfaceToMatch.functions;\n  return (\n    Object.keys(contractFn).filter((k) => k in interfaceFn).length ===\n    Object.keys(interfaceFn).length\n  );\n}\n","import { ContractMetadata } from \"../core/classes/contract-metadata\";\nimport {\n  ContractPrimarySale,\n  ContractRoles,\n  ContractRoyalty,\n  IStorage,\n  NetworkOrSignerOrProvider,\n} from \"../core\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport { ContractWrapper } from \"../core/classes/contract-wrapper\";\nimport {\n  AccessControlEnumerable,\n  AccessControlEnumerable__factory,\n  IThirdwebContract,\n  IThirdwebContract__factory,\n  IThirdwebPrimarySale,\n  IThirdwebPrimarySale__factory,\n  IThirdwebRoyalty,\n  IThirdwebRoyalty__factory,\n} from \"../@custom-thirdweb-dev/contracts\";\nimport { CustomContractSchema } from \"../schema/contracts/custom\";\nimport { UpdateableNetwork } from \"../core/interfaces/contract\";\nimport { BaseContract, ContractInterface } from \"ethers\";\nimport { ALL_ROLES } from \"../common\";\nimport { implementsInterface } from \"../common/feature-detection\";\n\n/**\n * Custom contract wrapper with feature detection\n * @internal\n */\nexport class CustomContract<TContract extends BaseContract = BaseContract>\n  implements UpdateableNetwork\n{\n  static contractType = \"custom\" as const;\n  static schema = CustomContractSchema;\n\n  private contractWrapper;\n  private storage;\n\n  public metadata;\n  public royalties;\n  public roles;\n  public sales;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    address: string,\n    abi: ContractInterface,\n    storage: IStorage,\n    options: SDKOptions = {},\n    contractWrapper = new ContractWrapper<TContract>(\n      network,\n      address,\n      abi,\n      options,\n    ),\n  ) {\n    this.storage = storage;\n    this.contractWrapper = contractWrapper;\n\n    this.metadata = this.detectMetadata();\n    this.royalties = this.detectRoyalties();\n    this.roles = this.detectRoles();\n    this.sales = this.detectPrimarySales();\n\n    // TODO detect token standards - requires contract interface cleanups\n  }\n\n  onNetworkUpdated(network: NetworkOrSignerOrProvider): void {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  getAddress(): string {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ****************************\n   * FEATURE DETECTION\n   ******************************/\n\n  private detectMetadata() {\n    if (\n      implementsInterface<IThirdwebContract>(\n        this.contractWrapper,\n        IThirdwebContract__factory.createInterface(),\n      )\n    ) {\n      return new ContractMetadata(\n        this.contractWrapper,\n        CustomContract.schema,\n        this.storage,\n      );\n    }\n    return undefined;\n  }\n\n  private detectRoyalties() {\n    if (\n      implementsInterface<IThirdwebContract & IThirdwebRoyalty>(\n        this.contractWrapper,\n        IThirdwebRoyalty__factory.createInterface(),\n      )\n    ) {\n      // ContractMetadata is stateless, it's fine to create a new one here\n      // This also makes it not order dependent in the feature detection process\n      const metadata = new ContractMetadata(\n        this.contractWrapper,\n        CustomContract.schema,\n        this.storage,\n      );\n      return new ContractRoyalty(this.contractWrapper, metadata);\n    }\n    return undefined;\n  }\n\n  private detectRoles() {\n    if (\n      implementsInterface<AccessControlEnumerable>(\n        this.contractWrapper,\n        AccessControlEnumerable__factory.createInterface(),\n      )\n    ) {\n      return new ContractRoles(this.contractWrapper, ALL_ROLES);\n    }\n    return undefined;\n  }\n\n  private detectPrimarySales() {\n    if (\n      implementsInterface<IThirdwebPrimarySale>(\n        this.contractWrapper,\n        IThirdwebPrimarySale__factory.createInterface(),\n      )\n    ) {\n      return new ContractPrimarySale(this.contractWrapper);\n    }\n    return undefined;\n  }\n}\n","import { NetworkOrSignerOrProvider, ValidContractClass } from \"../types\";\nimport { z } from \"zod\";\nimport { ContractRegistry } from \"./registry\";\nimport { getContractAddressByChainId } from \"../../constants/addresses\";\nimport { ContractFactory } from \"./factory\";\nimport { SDKOptions } from \"../../schema/sdk-options\";\nimport { IStorage } from \"../interfaces\";\nimport { RPCConnectionHandler } from \"./rpc-connection-handler\";\nimport {\n  Edition,\n  EditionDrop,\n  Marketplace,\n  NFTCollection,\n  NFTDrop,\n  Pack,\n  Split,\n  Token,\n  Vote,\n} from \"../../contracts\";\nimport {\n  MarketplaceContractDeployMetadata,\n  NFTContractDeployMetadata,\n  SplitContractDeployMetadata,\n  TokenContractDeployMetadata,\n  VoteContractDeployMetadata,\n} from \"../../types/deploy/deploy-metadata\";\n\n/**\n * Handles deploying new contracts\n * @public\n */\nexport class ContractDeployer extends RPCConnectionHandler {\n  /**\n   * @internal\n   * should never be accessed directly, use {@link ContractDeployer.getFactory} instead\n   */\n  private _factory: Promise<ContractFactory> | undefined;\n  /**\n   * @internal\n   * should never be accessed directly, use {@link ContractDeployer.getRegistry} instead\n   */\n  private _registry: Promise<ContractRegistry> | undefined;\n  private storage: IStorage;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    options: SDKOptions,\n    storage: IStorage,\n  ) {\n    super(network, options);\n    this.storage = storage;\n  }\n\n  /**\n   * Deploys a new NFTCollection contract\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  public async deployNFTCollection(\n    metadata: NFTContractDeployMetadata,\n  ): Promise<string> {\n    return await this.deployContract(NFTCollection.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new NFTDrop contract\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  public async deployNFTDrop(\n    metadata: NFTContractDeployMetadata,\n  ): Promise<string> {\n    return await this.deployContract(NFTDrop.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Edition contract\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  public async deployEdition(\n    metadata: NFTContractDeployMetadata,\n  ): Promise<string> {\n    return await this.deployContract(Edition.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new EditionDrop contract\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  public async deployEditionDrop(\n    metadata: NFTContractDeployMetadata,\n  ): Promise<string> {\n    const parsed = EditionDrop.schema.deploy.parse(metadata);\n    return await this.deployContract(EditionDrop.contractType, parsed);\n  }\n\n  /**\n   * Deploys a new Token contract\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  public async deployToken(\n    metadata: TokenContractDeployMetadata,\n  ): Promise<string> {\n    return await this.deployContract(Token.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Marketplace contract\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  public async deployMarketplace(\n    metadata: MarketplaceContractDeployMetadata,\n  ): Promise<string> {\n    return await this.deployContract(Marketplace.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Pack contract\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  public async deployPack(\n    metadata: NFTContractDeployMetadata,\n  ): Promise<string> {\n    return await this.deployContract(Pack.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Split contract\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  public async deploySplit(\n    metadata: SplitContractDeployMetadata,\n  ): Promise<string> {\n    return await this.deployContract(Split.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Vote contract\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  public async deployVote(\n    metadata: VoteContractDeployMetadata,\n  ): Promise<string> {\n    return await this.deployContract(Vote.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new contract\n   *\n   * @internal\n   * @param contractType - the type of contract to deploy\n   * @param contractMetadata - the metadata to deploy the contract with\n   * @returns a promise of the address of the newly deployed contract\n   */\n  public async deployContract<TContract extends ValidContractClass>(\n    contractType: TContract[\"contractType\"],\n    contractMetadata: z.input<TContract[\"schema\"][\"deploy\"]>,\n  ): Promise<string> {\n    const factory = await this.getFactory();\n    return await factory.deploy(contractType, contractMetadata);\n  }\n\n  /**\n   * @internal\n   */\n  public async getRegistry(): Promise<ContractRegistry> {\n    // if we already have a registry just return it back\n    if (this._registry) {\n      return this._registry;\n    }\n    // otherwise get the registry address for the active chain and get a new one\n    const chainId = (await this.getProvider().getNetwork()).chainId;\n    const registryAddress = getContractAddressByChainId(chainId, \"twRegistry\");\n    return (this._registry = Promise.resolve(\n      new ContractRegistry(registryAddress, this.getProvider(), this.options),\n    ));\n  }\n\n  private async getFactory(): Promise<ContractFactory> {\n    // if we already have a factory just return it back\n    if (this._factory) {\n      return this._factory;\n    }\n    // otherwise get the factory address for the active chain and get a new one\n    const chainId = (await this.getProvider().getNetwork()).chainId;\n    const factoryAddress = getContractAddressByChainId(chainId, \"twFactory\");\n    return (this._factory = Promise.resolve(\n      new ContractFactory(\n        factoryAddress,\n        this.getSignerOrProvider(),\n        this.storage,\n        this.options,\n      ),\n    ));\n  }\n\n  public override updateSignerOrProvider(network: NetworkOrSignerOrProvider) {\n    super.updateSignerOrProvider(network);\n    this.updateContractSignerOrProvider();\n  }\n\n  private updateContractSignerOrProvider() {\n    // has to be promises now\n    this._factory?.then((factory) => {\n      factory.updateSignerOrProvider(this.getSignerOrProvider());\n    });\n    // has to be promises now\n    this._registry?.then((registry) => {\n      registry.updateSignerOrProvider(this.getSignerOrProvider());\n    });\n  }\n}\n","import { ContractInterface, ethers } from \"ethers\";\nimport { IStorage } from \"./interfaces/IStorage\";\nimport {\n  CONTRACTS_MAP,\n  Edition,\n  EditionDrop,\n  Marketplace,\n  NFTCollection,\n  NFTDrop,\n  Pack,\n  REMOTE_CONTRACT_TO_CONTRACT_TYPE,\n  Split,\n  Token,\n  Vote,\n} from \"../contracts\";\nimport { SDKOptions } from \"../schema/sdk-options\";\nimport { IpfsStorage } from \"./classes/ipfs-storage\";\nimport { RPCConnectionHandler } from \"./classes/rpc-connection-handler\";\nimport type {\n  ContractForContractType,\n  ContractType,\n  NetworkOrSignerOrProvider,\n  ValidContractInstance,\n} from \"./types\";\nimport { IThirdwebContract__factory } from \"../@custom-thirdweb-dev/contracts\";\nimport { ContractDeployer } from \"./classes/contract-deployer\";\nimport { CustomContract } from \"../contracts/custom\";\nimport invariant from \"tiny-invariant\";\n\n/**\n * The main entry point for the thirdweb SDK\n * @public\n */\nexport class ThirdwebSDK extends RPCConnectionHandler {\n  /**\n   * @internal\n   * the cache of contracts that we have already seen\n   */\n  private contractCache = new Map<\n    string,\n    ValidContractInstance | CustomContract\n  >();\n  private storage: IStorage;\n  /**\n   * New contract deployer\n   */\n  public deployer: ContractDeployer;\n\n  constructor(\n    network: NetworkOrSignerOrProvider,\n    options: SDKOptions = {},\n    storage: IStorage = new IpfsStorage(),\n  ) {\n    super(network, options);\n    // this.factory = new ContractFactory(network, storage, options);\n    // this.registry = new ContractRegistry(network, options);\n    this.storage = storage;\n    this.deployer = new ContractDeployer(network, options, storage);\n  }\n\n  /**\n   * Get an instance of a Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @returns the contract\n   */\n  public getNFTDrop(contractAddress: string): NFTDrop {\n    return this.getContract(contractAddress, NFTDrop.contractType) as NFTDrop;\n  }\n\n  /**\n   * Get an instance of a NFT Collection contract\n   * @param address - the address of the deployed contract\n   * @returns the contract\n   */\n  public getNFTCollection(address: string): NFTCollection {\n    return this.getContract(\n      address,\n      NFTCollection.contractType,\n    ) as NFTCollection;\n  }\n\n  /**\n   * Get an instance of a Edition Drop contract\n   * @param address - the address of the deployed contract\n   * @returns the contract\n   */\n  public getEditionDrop(address: string): EditionDrop {\n    return this.getContract(address, EditionDrop.contractType) as EditionDrop;\n  }\n\n  /**\n   * Get an instance of an Edition contract\n   * @param address - the address of the deployed contract\n   * @returns the contract\n   */\n  public getEdition(address: string): Edition {\n    return this.getContract(address, Edition.contractType) as Edition;\n  }\n\n  /**\n   * Get an instance of a Token contract\n   * @param address - the address of the deployed contract\n   * @returns the contract\n   */\n  public getToken(address: string): Token {\n    return this.getContract(address, Token.contractType) as Token;\n  }\n\n  /**\n   * Get an instance of a Vote contract\n   * @param address - the address of the deployed contract\n   * @returns the contract\n   */\n  public getVote(address: string): Vote {\n    return this.getContract(address, Vote.contractType) as Vote;\n  }\n\n  /**\n   * Get an instance of a Splits contract\n   * @param address - the address of the deployed contract\n   * @returns the contract\n   */\n  public getSplit(address: string): Split {\n    return this.getContract(address, Split.contractType) as Split;\n  }\n\n  /**\n   * Get an instance of a Marketplace contract\n   * @param address - the address of the deployed contract\n   * @returns the contract\n   */\n  public getMarketplace(address: string): Marketplace {\n    return this.getContract(address, Marketplace.contractType) as Marketplace;\n  }\n\n  /**\n   * Get an instance of a Pack contract\n   * @param address - the address of the deployed contract\n   * @returns the contract\n   */\n  public getPack(address: string): Pack {\n    return this.getContract(address, Pack.contractType) as Pack;\n  }\n\n  /**\n   *\n   * @internal\n   * @param address - the address of the contract to instantiate\n   * @param contractType - optional, the type of contract to instantiate\n   * @returns a promise that resolves with the contract instance\n   */\n  public getContract<TContractType extends ContractType = ContractType>(\n    address: string,\n    contractType: TContractType,\n  ): ContractForContractType<TContractType> {\n    // if we have a contract in the cache we will return it\n    // we will do this **without** checking any contract type things for simplicity, this may have to change in the future?\n    if (this.contractCache.has(address)) {\n      return this.contractCache.get(\n        address,\n      ) as ContractForContractType<TContractType>;\n    }\n    const newContract = new CONTRACTS_MAP[\n      // we have to do this as here because typescript is not smart enough to figure out\n      // that the type is a key of the map (checked by the if statement above)\n      contractType as keyof typeof CONTRACTS_MAP\n    ](this.getSignerOrProvider(), address, this.storage, this.options);\n    // if we have a contract type && the contract type is part of the map\n\n    this.contractCache.set(address, newContract);\n\n    // return the new contract\n    return newContract as ContractForContractType<TContractType>;\n  }\n\n  /**\n   * @param contractAddress - the address of the contract to attempt to resolve the contract type for\n   * @returns the {@link ContractType} for the given contract address\n   * @throws if the contract type cannot be determined (is not a valid thirdweb contract)\n   */\n  public async resolveContractType(\n    contractAddress: string,\n  ): Promise<ContractType> {\n    const contract = IThirdwebContract__factory.connect(\n      contractAddress,\n      this.getSignerOrProvider(),\n    );\n    const remoteContractType = ethers.utils\n      .toUtf8String(await contract.contractType())\n      // eslint-disable-next-line no-control-regex\n      .replace(/\\x00/g, \"\");\n    invariant(\n      remoteContractType in REMOTE_CONTRACT_TO_CONTRACT_TYPE,\n      `${remoteContractType} is not a valid contract type, falling back to custom contract`,\n    );\n    return REMOTE_CONTRACT_TO_CONTRACT_TYPE[\n      remoteContractType as keyof typeof REMOTE_CONTRACT_TO_CONTRACT_TYPE\n    ];\n  }\n\n  /**\n   * Return all the contracts deployed by the specified address\n   * @param walletAddress - the deployed address\n   */\n  public async getContractList(walletAddress: string) {\n    const addresses = await (\n      await this.deployer.getRegistry()\n    ).getContractAddresses(walletAddress);\n\n    const addressesWithContractTypes = await Promise.all(\n      addresses.map(async (adrr) => ({\n        address: adrr,\n        contractType: await this.resolveContractType(adrr).catch((err) => {\n          console.error(\n            `failed to get contract type for address: ${adrr}`,\n            err,\n          );\n          return \"\" as ContractType;\n        }),\n      })),\n    );\n\n    return addressesWithContractTypes.map(({ address, contractType }) => ({\n      address,\n      contractType,\n      metadata: () => this.getContract(address, contractType).metadata.get(),\n    }));\n  }\n\n  /**\n   * Update the active signer or provider for all contracts\n   * @param network - the new signer or provider\n   */\n  public override updateSignerOrProvider(network: NetworkOrSignerOrProvider) {\n    super.updateSignerOrProvider(network);\n    this.updateContractSignerOrProvider();\n  }\n\n  private updateContractSignerOrProvider() {\n    this.deployer.updateSignerOrProvider(this.getSignerOrProvider());\n    for (const [, contract] of this.contractCache) {\n      contract.onNetworkUpdated(this.getSignerOrProvider());\n    }\n  }\n\n  /**\n   * @internal\n   */\n  public async unstable_getCustomContract(\n    address: string,\n    abi: ContractInterface,\n  ) {\n    return new CustomContract(\n      this.getSignerOrProvider(),\n      address,\n      abi,\n      this.storage,\n      this.options,\n    );\n  }\n}\n","import { Json } from \"../types\";\n\n/**\n * Given a map of file hashes to ipfs uris, this function will hash\n * all properties recursively and replace them with the ipfs uris\n * from the map passed in. If a hash is missing from the map, the function\n * will throw an error.\n *\n * @internal\n *\n * @param object - The object to recursively process\n * @param cids - The array of file hashes to ipfs uris in the recurse order\n * @returns - The processed metadata with properties pointing at ipfs in place of `File | Buffer`\n */\nexport function replaceFilePropertiesWithHashes(\n  object: Record<string, any>,\n  cids: string[],\n) {\n  const keys = Object.keys(object);\n  for (const key in keys) {\n    const val = object[keys[key]];\n    const isFile = val instanceof File || val instanceof Buffer;\n    if (typeof val === \"object\" && !isFile) {\n      replaceFilePropertiesWithHashes(val, cids);\n      continue;\n    }\n\n    if (!isFile) {\n      continue;\n    }\n\n    object[keys[key]] = `ipfs://${cids.splice(0, 1)[0]}`;\n  }\n  return object;\n}\n\n/**\n * Replaces all ipfs:// hashes (or any other scheme) with gateway url\n * @param object\n * @param scheme\n * @param gatewayUrl\n */\nexport function replaceHashWithGatewayUrl(\n  object: Record<string, any>,\n  scheme: string,\n  gatewayUrl: string,\n): Record<string, any> {\n  const keys = Object.keys(object);\n  for (const key in keys) {\n    const val = object[keys[key]];\n    object[keys[key]] = resolveGatewayUrl(val, scheme, gatewayUrl);\n    if (Array.isArray(val)) {\n      object[keys[key]] = val.map((el) => {\n        if (typeof el === \"object\") {\n          return replaceHashWithGatewayUrl(el, scheme, gatewayUrl);\n        } else {\n          return resolveGatewayUrl(el, scheme, gatewayUrl);\n        }\n      });\n    }\n    if (typeof val === \"object\") {\n      replaceHashWithGatewayUrl(val, scheme, gatewayUrl);\n    }\n  }\n  return object;\n}\n\n/**\n * Resolves the full URL of a file for a given gateway.\n *\n * For example, if the hash of a file is `ipfs://bafkreib3u2u6ir2fsl5nkuwixfsb3l4xehri3psjv5yga4inuzsjunk2sy`, then the URL will be:\n * \"https://cloudflare-ipfs.com/ipfs/bafkreibnwjhx5s3r2rggdoy3hw7lr7wmgy4bas35oky3ed6eijklk2oyvq\"\n * if the gateway is `cloudflare-ipfs.com`.\n *\n * @param ipfsHash\n * @param scheme\n * @param gatewayUrl\n */\nexport function resolveGatewayUrl<T extends Json>(\n  ipfsHash: T,\n  scheme: string,\n  gatewayUrl: string,\n): T {\n  if (typeof ipfsHash === \"string\") {\n    return ipfsHash && ipfsHash.toLowerCase().includes(scheme)\n      ? (ipfsHash.replace(scheme, gatewayUrl) as T)\n      : ipfsHash;\n  } else {\n    return ipfsHash;\n  }\n}\n","import {\n  DuplicateFileNameError,\n  FetchError,\n  UploadError,\n} from \"../../common/error\";\nimport {\n  DEFAULT_IPFS_GATEWAY,\n  PINATA_IPFS_URL,\n  TW_IPFS_SERVER_URL,\n} from \"../../constants/urls\";\nimport { IStorage } from \"../interfaces/IStorage\";\nimport { FileOrBuffer, JsonObject } from \"../types\";\nimport {\n  replaceFilePropertiesWithHashes,\n  replaceHashWithGatewayUrl,\n  resolveGatewayUrl,\n} from \"../helpers/storage\";\n\nif (!globalThis.FormData) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  globalThis.FormData = require(\"form-data\");\n}\n\n/**\n * @internal\n */\ninterface CidWithFileName {\n  // base cid of the directory\n  cid: string;\n\n  // file name of the file without cid\n  fileNames: string[];\n}\n\n/**\n * IPFS Storage implementation, accepts custom IPFS gateways\n * @public\n */\nexport class IpfsStorage implements IStorage {\n  private gatewayUrl: string;\n\n  constructor(gatewayUrl: string = DEFAULT_IPFS_GATEWAY) {\n    this.gatewayUrl = `${gatewayUrl.replace(/\\/$/, \"\")}/`;\n  }\n\n  /**\n   * {@inheritDoc IStorage.upload}\n   */\n  public async upload(\n    data: string | FileOrBuffer,\n    contractAddress?: string,\n    signerAddress?: string,\n  ): Promise<string> {\n    const cid = await this.uploadBatch(\n      [data],\n      0,\n      contractAddress,\n      signerAddress,\n    );\n    return `${cid}0`;\n  }\n\n  /**\n   * {@inheritDoc IStorage.uploadBatch}\n   */\n  public async uploadBatch(\n    files: (string | FileOrBuffer)[],\n    fileStartNumber = 0,\n    contractAddress?: string,\n    signerAddress?: string,\n  ): Promise<string> {\n    const { cid } = await this.uploadBatchWithCid(\n      files,\n      fileStartNumber,\n      contractAddress,\n      signerAddress,\n    );\n\n    return `ipfs://${cid}/`;\n  }\n\n  /**\n   * {@inheritDoc IStorage.getUploadToken}\n   */\n  public async getUploadToken(contractAddress: string): Promise<string> {\n    const headers = {\n      \"X-App-Name\": `CONSOLE-TS-SDK-${contractAddress}`,\n    };\n    const res = await fetch(`${TW_IPFS_SERVER_URL}/grant`, {\n      method: \"GET\",\n      headers,\n    });\n    if (!res.ok) {\n      throw new FetchError(`Failed to get upload token`);\n    }\n    const body = await res.text();\n    return body;\n  }\n\n  /**\n   * {@inheritDoc IStorage.get}\n   */\n  public async get(hash: string): Promise<Record<string, any>> {\n    const res = await this._get(hash);\n    const json = await res.json();\n    return replaceHashWithGatewayUrl(json, \"ipfs://\", this.gatewayUrl);\n  }\n\n  /**\n   * {@inheritDoc IStorage.uploadMetadata}\n   */\n  public async uploadMetadata(\n    metadata: JsonObject,\n    contractAddress?: string,\n    signerAddress?: string,\n  ): Promise<string> {\n    // since there's only single object, always use the first index\n    const { metadataUris } = await this.uploadMetadataBatch(\n      [metadata],\n      0,\n      contractAddress,\n      signerAddress,\n    );\n    return metadataUris[0];\n  }\n\n  /**\n   * {@inheritDoc IStorage.uploadMetadataBatch}\n   */\n  public async uploadMetadataBatch(\n    metadatas: JsonObject[],\n    fileStartNumber?: number,\n    contractAddress?: string,\n    signerAddress?: string,\n  ) {\n    const metadataToUpload = (await this.batchUploadProperties(metadatas)).map(\n      (m: any) => JSON.stringify(m),\n    );\n\n    const { cid, fileNames } = await this.uploadBatchWithCid(\n      metadataToUpload,\n      fileStartNumber,\n      contractAddress,\n      signerAddress,\n    );\n\n    const baseUri = `ipfs://${cid}/`;\n    const uris = fileNames.map((filename) => `${baseUri}${filename}`);\n\n    return {\n      baseUri,\n      metadataUris: uris,\n    };\n  }\n\n  /** *************************\n   * PRIVATE FUNCTIONS\n   *************************/\n\n  private async _get(hash: string): Promise<Response> {\n    let uri = hash;\n    if (hash) {\n      uri = resolveGatewayUrl(hash, \"ipfs://\", this.gatewayUrl);\n    }\n    const result = await fetch(uri);\n    if (!result.ok) {\n      throw new Error(`Status code (!= 200) =${result.status}`);\n    }\n    return result;\n  }\n\n  /**\n   * Pre-processes metadata and uploads all file properties\n   * to storage in *bulk*, then performs a string replacement of\n   * all file properties -\\> the resulting ipfs uri. This is\n   * called internally by `uploadMetadataBatch`.\n   *\n   * @internal\n   *\n   * @param metadata - The metadata to recursively process\n   * @returns - The processed metadata with properties pointing at ipfs in place of `File | Buffer`\n   */\n  private async batchUploadProperties(metadatas: JsonObject[]) {\n    const filesToUpload = metadatas.flatMap((m) =>\n      this.buildFilePropertiesMap(m, []),\n    );\n    if (filesToUpload.length === 0) {\n      return metadatas;\n    }\n    const { cid, fileNames } = await this.uploadBatchWithCid(filesToUpload);\n\n    const cids = [];\n    // recurse ordered array\n    for (const filename of fileNames) {\n      cids.push(`${cid}/${filename}`);\n    }\n\n    const finalMetadata = await replaceFilePropertiesWithHashes(\n      metadatas,\n      cids,\n    );\n    return finalMetadata;\n  }\n\n  /**\n   * This function recurisely traverses an object and hashes any\n   * `Buffer` or `File` objects into the returned map.\n   *\n   * @param object - the Json Object\n   * @param files - The running array of files or buffer to upload\n   * @returns - The final map of all hashes to files\n   */\n  private buildFilePropertiesMap(\n    object: JsonObject,\n    files: (File | Buffer)[] = [],\n  ): (File | Buffer)[] {\n    if (Array.isArray(object)) {\n      object.forEach((element) => {\n        this.buildFilePropertiesMap(element, files);\n      });\n    } else if (object) {\n      const values = Object.values(object);\n      for (const val of values) {\n        if (val instanceof File || val instanceof Buffer) {\n          files.push(val);\n        } else if (typeof val === \"object\") {\n          this.buildFilePropertiesMap(val as JsonObject, files);\n        }\n      }\n    }\n    return files;\n  }\n\n  private async uploadBatchWithCid(\n    files: (string | FileOrBuffer)[],\n    fileStartNumber = 0,\n    contractAddress?: string,\n    signerAddress?: string,\n  ): Promise<CidWithFileName> {\n    const token = await this.getUploadToken(contractAddress || \"\");\n    const metadata = {\n      name: `CONSOLE-TS-SDK-${contractAddress}`,\n      keyvalues: {\n        sdk: \"typescript\",\n        contractAddress,\n        signerAddress,\n      },\n    };\n    const data = new FormData();\n    const fileNames: string[] = [];\n    files.forEach((file, i) => {\n      let fileName = \"\";\n      let fileData = file;\n      // if it is a file, we passthrough the file extensions,\n      // if it is a buffer or string, the filename would be fileStartNumber + index\n      // if it is a buffer or string with names, the filename would be the name\n      if (file instanceof File) {\n        let extensions = \"\";\n        if (file.name) {\n          const extensionStartIndex = file.name.lastIndexOf(\".\");\n          if (extensionStartIndex > -1) {\n            extensions = file.name.substring(extensionStartIndex);\n          }\n        }\n        fileName = `${i + fileStartNumber}${extensions}`;\n      } else if (file instanceof Buffer || typeof file === \"string\") {\n        fileName = `${i + fileStartNumber}`;\n      } else if (file && file.name && file?.data) {\n        fileData = file?.data;\n        fileName = `${file.name}`;\n      } else {\n        // default behavior\n        fileName = `${i + fileStartNumber}`;\n      }\n\n      const filepath = `files/${fileName}`;\n      if (fileNames.indexOf(fileName) > -1) {\n        throw new DuplicateFileNameError(fileName);\n      }\n      fileNames.push(fileName);\n      if (typeof window === \"undefined\") {\n        data.append(\"file\", fileData as any, { filepath } as any);\n      } else {\n        // browser does blob things, filepath is parsed differently on browser vs node.\n        // pls pinata?\n        data.append(\"file\", new Blob([fileData as any]), filepath);\n      }\n    });\n\n    data.append(\"pinataMetadata\", JSON.stringify(metadata));\n    const res = await fetch(PINATA_IPFS_URL, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      body: data as any,\n    });\n    const body = await res.json();\n    if (!res.ok) {\n      console.log(body);\n      throw new UploadError(\"Failed to upload files to IPFS\");\n    }\n    return {\n      cid: body.IpfsHash,\n      fileNames,\n    };\n  }\n}\n"],"mappings":"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,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,OACd,KAAM,WACN,KAAM,MAAA,CAAA,EAGV,KAAM,iBACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,SACd,KAAM,MACN,KAAM,QAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,iBACN,KAAM,SAAA,CAAA,EAGV,KAAM,eACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,SACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,EAER,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,KACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,mBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,aACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,SAAA,EAER,CACE,aAAc,SACd,KAAM,MACN,KAAM,QAAA,EAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,yBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,MACN,KAAM,SAAA,CAAA,EAGV,QAAS,GACT,aAAc,mCACd,KAAM,cACN,KAAM,OAAA,CAAA,EAGV,KAAM,4BACN,KAAM,OAAA,EAER,CACE,UAA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KAAM,eACN,KAAM,SAAA,CAAA,EAGV,KAAM,wBACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,YACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,SACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,OACd,KAAM,YACN,KAAM,MAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,iBACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,CAAA,EAGV,KAAM,gBACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,YACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,SACN,KAAM,SAAA,EAER,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,YACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,aACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,YACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,sBACN,KAAM,SAAA,EAER,CACE,aAAc,8BACd,KAAM,YACN,KAAM,OAAA,EAER,CACE,aAAc,gCACd,KAAM,cACN,KAAM,OAAA,CAAA,EAGV,QAAS,GACT,aAAc,8BACd,KAAM,UACN,KAAM,OAAA,CAAA,EAGV,KAAM,eACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,YACN,KAAM,SAAA,EAER,CACE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S,GACT,aAAc,UACd,KAAM,SACN,KAAM,SAAA,CAAA,EAGV,KAAM,cACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,OACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,SACN,KAAM,SAAA,CAAA,EAGV,KAAM,cACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,mBACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,aACN,KAAM,SAAA,CAAA,EAGV,KAAM,kBACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,SACd,KAAM,MACN,KAAM,QAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,iBACN,KAAM,SAAA,CAAA,EAGV,KAAM,eACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,SACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,EAER,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,KACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,mBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,aACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,UACN,KAAM,SAAA,EAER,CACE,aAAc,SACd,KAAM,MACN,KAAM,QAAA,EAER,CACE,aAAc,UACd,KAAM,WACN,K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EAGV,KAAM,cACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,OACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,SACN,KAAM,SAAA,CAAA,EAGV,KAAM,cACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,UACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,mBACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,aACN,KAAM,SAAA,CAAA,EAGV,KAAM,kBACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,SACd,KAAM,MACN,KAAM,QAAA,CAAA,EAGV,KAAM,eACN,KAAM,OAAA,EAER,CACE,UAAW,GACX,OAAQ,CACN,CACE,QAAS,GACT,aAAc,UACd,KAAM,SACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,QAAS,GACT,aAAc,UACd,KAAM,gBACN,KAAM,SAAA,EAER,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAM,KACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,mBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,aACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SAAA,EAER,CACE,aAAc,SACd,KAAM,MACN,KAAM,QAAA,EAER,CACE,aAAc,UACd,KAAM,QACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,WACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,yBACN,KAAM,SAAA,EAER,CACE,aAAc,UACd,KAAM,uBACN,KAAM,SAAA,EA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","names":[]}